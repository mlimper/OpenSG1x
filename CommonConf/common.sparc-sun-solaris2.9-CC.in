
LINKER_INIT_FLAG     := #-Wl,-init

LIBPATH_OPTION       := -L
LIBLNK_OPTION        := -l

OBJ_OPTION           := -o

NO_STDINC_DEP_OPTION := -Y

COMPONLY_OPTION      := -c

DEPEND_OPTION        := -M

LD_OUTOPT            := -o 

LNK_LD_OUTOPT        := -o 

DIR_SEP              := /

II_FILESDIR          := ii_files

### Target ##########################################################

### Defines #######################################################

ifeq ($(CONFIGURED_GVBETA),1)
DEF_GVBETA := -DOSG_GV_BETA
else
DEF_GVBETA :=
endif

# For QT
DEP_PLATTFORMDEF = -D_STANDARD_C_PLUS_PLUS 

SOURCE_DEFINES   = -DQT_CLEAN_NAMESPACE

SYSTEM_DEFINES   = -D_OSG_HAVE_CONFIGURED_H_    \
                   $(DEF_GVBETA)



### Warnings #######################################################

WARNINGS   		= 
#+w2

WARNINGS_C_OFF		=

WARNINGS_CPP_OFF 	= 

ifeq ($(PEDANTIC_ERRORS),1)
WARN_ERR_CPP        = 
else
WARN_ERR_CPP        = 
endif

### Language #######################################################

#can not use this one, as MS is not ansi conform
#-LANG:ansi-for-init-scope=on 

LANG_FLAGS = 
COMPILER   = -template=no%wholeclass,extdef -KPIC -ptv -mt

### Optimize / Debug ###############################################

ifeq ($(PRINT_INLINE), 1)
COMP_INLINE := $(COMP_INLINE) 
endif

ifeq ($(DEBUG_VERSION), 0)
	COMP_OPTIMIZE    = -O2 $(COMP_INLINE)
	COMP_DEBUG       = 
else
	COMP_OPTIMIZE    =
	COMP_DEBUG       = -g -DOSG_DEBUG
endif

CCFLAGS_EXT_OPT := -O2
CCFLAGS_EXT_DBG := -g -DOSG_DEBUG

### Compiler Flags ################################################


DEFINES     = $(SOURCE_DEFINES) $(SYSTEM_DEFINES) $(DEP_PLATTFORMDEF)	\
		      $(CONFIGURED_PACKAGE_DEFS)

# C Compiler Flags

CFLAGS   := $(WARNINGS) $(WARNINGS_C_OFF) -D__STDC__ 						\
		    $(DEFINES) $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG)

# CPP Compiler Flags

CCFLAGS  := $(WARNINGS) $(WARNINGS_CPP_OFF) $(WARN_ERR_CPP) $(DEFINES) \
		    $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG) 

CCDEPFLAGS := $(COMP_OPTIMIZE) $(COMP_DEBUG) 

CCFLAGS_EXT     := $(SOURCE_DEFINES) $(SYSTEM_DEFINES) $(DEP_PLATTFORMDEF) $(COMPILER) 

# Assembler Flags

ASFLAGS  := $(WARNINGS) $(WARNINGS_C_OFF) $(DEFINES) 	\
	 	    $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG) 


# Linker Flags

ifeq ($(PRINT_INLINE), 1)
LINK_INLINE := $(LINK_INLINE) 
endif

ifeq ($(DEBUG_VERSION), 0)
	LINK_OPTIMIZE    = -O2 $(LINK_INLINE)
	AR_FLAGS         = -O2 $(LINK_INLINE) 
	LINK_DEBUG       = 
else
	LINK_OPTIMIZE    =
	LINK_DEBUG       = -g 
endif


LD_FLAGS += $(LINK_OPTIMIZE) $(LINK_DEBUG)
			

LD_FLAGS_EXT      = 
LD_FLAGS_EXT_OPT := -O2 $(LINK_INLINE)
LD_FLAGS_EXT_DBG := -g 
