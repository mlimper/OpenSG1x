
LIBPATH_OPTION       := -LIBPATH:
LIBLNK_OPTION        := 

OBJ_OPTION           := -Fo

NO_STDINC_DEP_OPTION := -X

COMPONLY_OPTION      := -c

DEPEND_OPTION        := -QM -nologo

LD_OUTOPT            := -out:

LNK_LD_OUTOPT        := -out:

DIR_SEP              := /

II_FILESDIR          := 

### Defines #######################################################

COMPILERVERSION := $(shell $(CC) 2>&1 | head -1 | cut -d' ' -f 8)
COMPILERMAJORVERSION := $(shell $(CC) 2>&1 | head -1 | cut -d' ' -f 8 | sed -e 's/\..*//')

ifeq ($(CONFIGURED_GVBETA),1)
DEF_GVBETA := -DOSG_GV_BETA
else
DEF_GVBETA :=
endif

# For QT
QT_PLATTFORMDEF := -DQT_NO_STL -DQT_DLL -DQT_THREAD_SUPPORT        \
                   -DQT_ACCESSIBILITY_SUPPORT -DQT_NO_DEBUG

SOURCE_DEFINES   := $(CONFIGURED_PACKAGE_DEFS)

SYSTEM_DEFINES   := -DWIN32 -D_WINDOWS 				                 \
				    -DWINVER=0x0400 -D_WIN32_WINDOWS=0x0410 	     \
                    -D_WIN32_WINNT=0x0400                            \
                    -D_OSG_HAVE_CONFIGURED_H_                        \
                    $(DEF_GVBETA)
#-D_HAS_EXCEPTIONS=0

#ifeq ($(COMPILERVERSION),501)
#SYSTEM_DEFINES   := $(SYSTEM_DEFINES) -DOSG_SUPPORT_NO_GEO_INTERFACE=1
#endif

ifeq ($(LNK),lnk)
RUNTIME_DEFINES  = 
else
RUNTIME_DEFINES  = -DOSG_BUILD_DLL 
endif


### Warnings #######################################################

WARNINGS	   		:= -W3

WARNINGS_C_OFF		:= 

# 4049 compiler limit : terminating line number emission
# 4065 switch statement contains 'default' but no 'case' labels
# 4099 'identifier' : type name first seen using 'objecttype1' now 
#      seen using 'objecttype2'
# 4231 nonstandard extension used : 'identifier' before template 
#      explicit instantiation
# 4250 'class1' : inherits 'class2::member' via dominance
# 4251 'identifier' : class 'type' needs to have dll-interface to be used by 
#       clients of class 'type2'
# 4275 non – DLL-interface classkey 'identifier' used as base for 
#      DLL-interface classkey 'identifier'
# 4355 'this' : used in base member initializer list
# 4996 'sprintf' was declared deprecated (also for many other C functions)

WARNINGS_CPP_OFF 	:= $(WARNINGS_C_OFF) -w44049 -w44065 \
						-w44251 -w44275 -w44099 -w44250 -w44231 \
                        -w44290 -w44996

WARN_ERR_CPP        :=

### Language #######################################################

LANG_FLAGS          = 

#-Qvc6 -Qansi
#-GX
ifeq ($(COMPILERMAJORVERSION), 14)
# Cl.net 2005 options
COMPILER    		=  -EHsc -FD -GR -Zm1200

# Need to have the Framework SDK
# Yes, this is a hack
LIBPATHS_$(OS_BASE) := $(LIBPATH_OPTION)"C:\Program Files\Microsoft Platform SDK\Lib"   $(LIBPATHS_$(OS_BASE))
INCL_$(OS_BASE) := $(INC_OPTION)"C:\Program Files\Microsoft Platform SDK\Include"   $(INCL_$(OS_BASE))

else
# other cl.net options
COMPILER    		=  -GX -FD -GR -Zm1200
endif

ifeq ($(LNK),lnk)
COMPILER_RUNTIME_DBG    = -MTd
COMPILER_RUNTIME_OPT    = -MT
else
COMPILER_RUNTIME_DBG    = -MDd
COMPILER_RUNTIME_OPT    = -MD
endif

CCFLAGS_EXT_OPT  := -O2 -Ob1 -MD
ifeq ($(COMPILERMAJORVERSION), 14)
# Cl.net 2005 options
CCFLAGS_EXT_DBG  := -ZI -Od -RTC1 -D_DEBUG -DOSG_DEBUG -MDd
else
# other cl.net options
CCFLAGS_EXT_DBG  := -ZI -Od -GZ -D_DEBUG -DOSG_DEBUG -MDd
endif

### Optimize / Debug ###############################################

ifeq ($(PRINT_INLINE), 1)
COMP_INLINE :=
endif

ifeq ($(DEBUG_VERSION), 0)
	COMP_OPTIMIZE    =  -O2 -Ob1
	COMP_DEBUG       = 
        COMPILER_RUNTIME = $(COMPILER_RUNTIME_OPT)
else
	COMP_OPTIMIZE    =
ifeq ($(COMPILERMAJORVERSION), 14)
# Cl.net 2005 options
	COMP_DEBUG       =  -ZI -Od -D_DEBUG -DOSG_DEBUG
else
# other cl.net options
	COMP_DEBUG       =  -ZI -Od -GZ -D_DEBUG -DOSG_DEBUG
endif
        COMPILER_RUNTIME = $(COMPILER_RUNTIME_DBG)
endif

### Compiler Flags ################################################


DEFINES     = $(SOURCE_DEFINES) $(SYSTEM_DEFINES) $(RUNTIME_DEFINES)    \
              $(QT_PLATTFORMDEF)

# C Compiler Flags

CFLAGS   := $(WARNINGS) $(WARNINGS_C_OFF) -D__STDC__ 						\
		    $(DEFINES) $(COMPILER) $(COMPILER_RUNTIME)                      \
            $(COMP_OPTIMIZE) $(COMP_DEBUG)

# CPP Compiler Flags

CCFLAGS  := $(WARNINGS) $(WARNINGS_CPP_OFF) $(WARN_ERR_CPP) $(DEFINES)      \
		    $(COMPILER) $(COMPILER_RUNTIME) $(COMP_OPTIMIZE) $(COMP_DEBUG)  \
            $(COMPILER_LOGO)

CCFLAGS_EXT         := $(WARNINGS_CPP_OFF) $(WARN_ERR_CPP) $(SYSTEM_DEFINES) $(RUNTIME_DEFINES) $(COMPILER)
QT_PLATTFORMDEF_EXT := $(QT_PLATTFORMDEF)

# Assembler Flags

ASFLAGS  := $(WARNINGS) $(WARNINGS_C_OFF) $(DEFINES) 	\
	 	    $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG) 


# Linker Flags

ifeq ($(PRINT_INLINE), 1)
LINK_INLINE :=
endif

ifeq ($(DEBUG_VERSION), 0)
	LINK_OPTIMIZE    = 
	AR_FLAGS         = 
	LINK_DEBUG       = 
else
	LINK_OPTIMIZE    =
	AR_FLAGS         = -Debug
	LINK_DEBUG       = -Debug 
endif

# added -FORCE:MULTIPLE because of multiple defined symbols in the Experimental/QTWidgets code,
# looks like a compiler bug?
LD_FLAGS += $(COMPILER_LOGO) -NODEFAULTLIB $(LINK_OPTIMIZE) $(LINK_DEBUG) -FORCE:MULTIPLE

LD_FLAGS_EXT     := -NODEFAULTLIB
LD_FLAGS_EXT_OPT := 
LD_FLAGS_EXT_DBG := -Debug






