
### Binaries #######################################################

CC_PATH    := @ac_gdz_compiler_path@

CC         := @ac_gdz_compiler_exe@

LD_SHARED  := @ac_gdz_compiler_exe_shared@

LD_LNK     := @ac_gdz_compiler_exe_lnk@

RANLIB     := @ac_gdz_compiler_exe_ranlib@

LD         := @ac_gdz_compiler_exe_exe@

FLEX       := @ac_gdz_flex_exe@
BISON      := @ac_gdz_bison_exe@ @ac_gdz_bison_exe_flags_e1@

SUB_MAKE   := @ac_gdz_gmake_exe@

LINK       := @ac_gdz_ln_exe@

SED        := @ac_gdz_sed_exe@

### Patterns #########################################################

ifeq ($(OS_BASE), cygwin)
ifneq ($(DBGCMDGOAL),)
$(warning Detected OPT)
DEBUG_CHAR:=
else
$(warning Detected DBG)
DEBUG_CHAR:=D
endif
endif

COMPILER_LOGO        := @ac_gdz_compiler_logo_e1@
PEDANTIC_ERRORS      := @ac_gdz_ped_errors_e1@

SO_PRAEFIX           := @ac_gdz_so_praefix@
SO_SEARCH_SUFFIX     := @ac_gdz_so_suffix@
SO_SUFFIX            := $(DEBUG_CHAR)@ac_gdz_so_suffix@
LIB_SEARCH_SUFFIX    := @ac_gdz_lib_suffix@
LIB_SUFFIX           := $(DEBUG_CHAR)@ac_gdz_lib_suffix@

LNK_LIB_SUFFIX       := $(DEBUG_CHAR)Lnk@ac_gdz_lib_suffix@

OBJ_SUFFIX           := @ac_gdz_obj_suffix@
EXE_SUFFIX           := @ac_gdz_exe_suffix@


OS_BASE              := @ac_gdz_os_base@
OS_BUILD_BASE        := @ac_gdz_os_buildbase@
OS_CMPLR             := @ac_gdz_compiler_base@
OS_CMPLR_DEF         := @ac_gdz_compiler_base_def@

@ac_gdz_common_patterns@

CONFIGURED_QT           :=@ac_gdz_conf_package_qt_e1@
CONFIGURED_GLUT         :=@ac_gdz_conf_package_glut_e1@
CONFIGURED_STLPORT      :=@ac_gdz_conf_package_stlport_e1@
CONFIGURED_GLUT         :=@ac_gdz_conf_package_glut_e1@
CONFIGURED_JPG          :=@ac_gdz_conf_package_tif_e1@
CONFIGURED_TIF          :=@ac_gdz_conf_package_jpg_e1@
CONFIGURED_PNG          :=@ac_gdz_conf_package_png_e1@
CONFIGURED_MNG          :=@ac_gdz_conf_package_mng_e1@
CONFIGURED_FREETYPE     :=@ac_gdz_conf_package_freetype1_e1@
CONFIGURED_TEXT         :=@ac_gdz_conf_package_text_e1@
CONFIGURED_PACKAGE_DEFS :=@ac_gdz_conf_package_defs@

CONFIGURED_GVBETA       :=@ac_gdz_conf_gvbeta_e1@

@ac_gdz_common_system@


### BASE DIRS #########################################################

INCL_$(OS_BASE) := $(INC_OPTION)"@ac_gdz_gen_base_inc_e1@" $(INCL_$(OS_BASE))
LIBS_$(OS_BASE) := @ac_gdz_base_system_libs@ 

INCLUDE_SYSTEM  := @ac_gdz_system_incl_dir_e1@
LINK_SYSTEM     := @ac_gdz_system_lib_dir_e1@

ADD_INCLUDE     := @ac_gdz_additional_inc_dirs_e1@
ADD_LINK        := @ac_gdz_additional_lib_dirs_e1@
ADD_LIBS        := @ac_gdz_additional_libs_e1@

INCLUDE_MPATROL := @ac_gdz_mpatrol_inc_dir_e1@
LINK_MPATROL    := @ac_gdz_mpatrol_lib_dir_e1@
LIB_MPATROL     := @ac_gdz_mpatrol_libs_e1@

include @ac_gdz_commonpackage_dir_e1@/commonSTL.mk


LINK_COMPILER   := @ac_gdz_compiler_lib@

ifneq ($(INCLUDE_SYSTEM),)
INCL_$(OS_BASE) := $(INCL_$(OS_BASE)) $(INC_OPTION)$(INCLUDE_SYSTEM)
endif

ifneq ($(LINK_SYSTEM),)
LIBPATHS_$(OS_BASE) := $(LIBPATH_OPTION)$(LINK_SYSTEM)   $(LIBPATHS_$(OS_BASE))
endif

ifneq ($(LINK_COMPILER),)
LIBPATHS_$(OS_BASE) := $(LIBPATH_OPTION)$(LINK_COMPILER) $(LIBPATHS_$(OS_BASE))
endif

ifneq ($(INCLUDE_MPATROL),)
INCL_$(OS_BASE) := $(INCL_$(OS_BASE)) $(INC_OPTION)$(INCLUDE_MPATROL)
endif

ifeq ($(IN_TEST_DIR),1)
ifneq ($(LINK_MPATROL),)
LIBPATHS_$(OS_BASE) := $(LIBPATH_OPTION)$(LINK_MPATROL) $(LIBPATHS_$(OS_BASE))
endif

ifneq ($(LB_MPATROL),)
LIBS_$(OS_BASE) := $(LIBLNK_OPTION)$(LIB_MPATROL) $(LIBS_$(OS_BASE))
endif
endif

#########################################################################
# Build include directive
#########################################################################

ifeq ($(OS_BASE), cygwin)
ifeq ($(OS_CMPLR),g++)
buildCIncPath      = $(INC_OPTION)$(1) 
else
buildCIncPath      = $(INC_OPTION)"$(shell cygpath -w $(1))"
endif
else
buildCIncPath      = $(INC_OPTION)$(1) 
endif

ifeq ($(OS_BASE), cygwin)
buildCLibPath      = $(LIBPATH_OPTION)"$(shell cygpath -w $(1))"
else
buildCLibPath      = $(LIBPATH_OPTION)$(1)
endif

ifneq ($(ADD_INCLUDE),)

ADD_INCLUDE := $(subst :, ,$(ADD_INCLUDE))

ADD_INCL_$(OS_BASE) := \
	$(foreach dir,$(ADD_INCLUDE),$(call buildCIncPath,$(dir)))

INCL_$(OS_BASE) := $(INCL_$(OS_BASE)) $(ADD_INCL_$(OS_BASE))

endif

ifneq ($(ADD_LINK),)

ADD_LINK := $(subst :, ,$(ADD_LINK))

ADD_LIBPATHS_$(OS_BASE) := \
	$(foreach dir,$(ADD_LINK),$(call buildCLibPath,$(dir)))

LIBPATHS_$(OS_BASE) := $(LIBPATHS_$(OS_BASE)) $(ADD_LIBPATHS_$(OS_BASE))

endif

ifneq ($(ADD_LIBS),)

ADD_LIBS := $(subst :, ,$(ADD_LIBS))

ifeq ($(OS_BASE),cygwin)
ADD_LIBS_$(OS_BASE) := $(foreach lib,$(ADD_LIBS),$(lib)$(LIB_SUFFIX))
else
ADD_LIBS_$(OS_BASE) := $(foreach lib,$(ADD_LIBS),$(LIBLNK_OPTION)$(lib))
endif

LIBS_$(OS_BASE) := $(ADD_LIBS_$(OS_BASE)) $(LIBS_$(OS_BASE))

endif

LIBS_$(OS_BASE) := $(LIBS_$(OS_BASE)) $(ADD_OS_LIB)
