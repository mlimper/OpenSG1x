
LIBPATH_OPTION       := -LIBPATH:
LIBLNK_OPTION        := 

OBJ_OPTION           := -Fo

NO_STDINC_DEP_OPTION := -X

COMPONLY_OPTION      := -c

DEPEND_OPTION        := -QM -nologo

LD_OUTOPT            := -out:

LNK_LD_OUTOPT        := -out:

DIR_SEP              := /

II_FILESDIR          := 

### Compiler Version ##############################################

COMPILER5x := $(shell $(CC) 2>&1 | head -1 | cut -d' ' -f 8)
COMPILER4x := $(shell $(CC) 2>&1 | head -1 | cut -d' ' -f 5)

ifneq ($(COMPILER5x),)
COMPILER5x-1 := $(subst .,,$(COMPILER5x))

COMPILER5x-2 := $(strip $(COMPILER5x-1))

COMPILER5x-3 := $(shell if test $(COMPILER5x-2) -lt 100 ; then echo 1; fi)

COMPILERVERSION5x := $(if $(COMPILER5x-3),$(COMPILER5x-2)0,$(COMPILER5x-2))
else
COMPILERVERSION5x :=
endif

ifneq ($(COMPILER4x),)
ifneq ($(COMPILER4x),32-bit)

COMPILER4x-1 := $(subst .,,$(COMPILER4x))

COMPILER4x-2 := $(strip $(COMPILER4x-1))

COMPILER4x-3 := $(shell if test $(COMPILER4x-2) -lt 100 ; then echo 1; fi)

COMPILERVERSION4x := $(if $(COMPILER4x-3),$(COMPILER4x-2)0,$(COMPILER4x-2))
else
COMPILERVERSION4x :=
endif
else
COMPILERVERSION4x :=
endif

COMPILERVERSION := $(COMPILERVERSION4x)

COMPILERVERSION := $(if $(COMPILERVERSION),$(COMPILERVERSION),$(COMPILERVERSION5x))

COMPILERVERSION := $(if $(COMPILERVERSION),$(COMPILERVERSION),$(error could not determine compiler version))

$(warning Got Compiler Version : $(COMPILERVERSION))

### Defines #######################################################

# For QT
QT_PLATTFORMDEF := -DQT_NO_STL -DQT_DLL -DQT_THREAD_SUPPORT        \
                   -DQT_ACCESSIBILITY_SUPPORT -DQT_NO_DEBUG

SOURCE_DEFINES   := $(CONFIGURED_PACKAGE_DEFS)

SYSTEM_DEFINES   := -DWIN32 -D_WINDOWS 				                 \
				    -DWINVER=0x0400 -D_WIN32_WINDOWS=0x0410 	     \
                    -D_OSG_HAVE_CONFIGURED_H_                        \
                    -D__INTEL_COMPILER_VERSION=$(COMPILERVERSION)

ifeq ($(COMPILERVERSION),501)
SYSTEM_DEFINES   := $(SYSTEM_DEFINES) -DOSG_SUPPORT_NO_GEO_INTERFACE=1
endif

ifeq ($(LNK),lnk)
RUNTIME_DEFINES  = 
else
RUNTIME_DEFINES  = -DOSG_BUILD_DLL -DOSG_NEW_DLLS
endif


### Warnings #######################################################

WARNINGS	   		= -W4

WARNINGS_C_OFF		= # -woff 835

WARNINGS_CPP_OFF 	:= -Qwd985 -Qwd530 -Qwd981 -Qwd193

# 444 : Destructor not virtual for baseclass
# 279 : Controlling expression is constant
#       have to rely on IRIX, or find a way to disable it in certain situations

WARNINGS_CPP_OFF 	:= $(WARNINGS_CPP_OFF) -Qwd444 -Qwd279

WARN_ERR_CPP        := -Qwe698  -Qwe47 -Qwe373 -Qwe171 -Qwe373

ifeq ($(COMPILERVERSION),501)
WARN_ERR_CPP        := $(WARN_ERR_CPP) -Qwe1125
endif

#-Qwe383

### Language #######################################################

LANG_FLAGS          = 

COMPILER    		= -Qvc6 -GX -Gi- -FD -Qansi -GR

ifeq ($(LNK),lnk)
COMPILER_RUNTIME_DBG    = -MTd
COMPILER_RUNTIME_OPT    = -MT
else
COMPILER_RUNTIME_DBG    = -MDd
COMPILER_RUNTIME_OPT    = -MD
endif

CCFLAGS_EXT_OPT  := -O2 -Ob1
CCFLAGS_EXT_DBG  := -ZI -Od -GZ -D_DEBUG

### Optimize / Debug ###############################################

ifeq ($(PRINT_INLINE), 1)
COMP_INLINE :=
endif

ifeq ($(DEBUG_VERSION), 0)
	COMP_OPTIMIZE    =  -O2 -Ob1
	COMP_DEBUG       = 
    COMPILER_RUNTIME = $(COMPILER_RUNTIME_OPT)
else
	COMP_OPTIMIZE    =
	COMP_DEBUG       =  -ZI -Od -GZ -D_DEBUG
    COMPILER_RUNTIME = $(COMPILER_RUNTIME_DBG)
endif

### Compiler Flags ################################################


DEFINES     = $(SOURCE_DEFINES) $(SYSTEM_DEFINES) $(RUNTIME_DEFINES)    \
              $(QT_PLATTFORMDEF)

# C Compiler Flags

CFLAGS   := $(WARNINGS) $(WARNINGS_C_OFF) -D__STDC__ 						\
		    $(DEFINES) $(COMPILER) $(COMPILER_RUNTIME)                      \
            $(COMP_OPTIMIZE) $(COMP_DEBUG)

# CPP Compiler Flags

CCFLAGS  := $(WARNINGS) $(WARNINGS_CPP_OFF) $(WARN_ERR_CPP) $(DEFINES)      \
		    $(COMPILER) $(COMPILER_RUNTIME) $(COMP_OPTIMIZE) $(COMP_DEBUG) 

CCFLAGS_EXT         := $(WARNINGS_CPP_OFF) $(WARN_ERR_CPP) $(SYSTEM_DEFINES) $(RUNTIME_DEFINES) $(COMPILER)
QT_PLATTFORMDEF_EXT := $(QT_PLATTFORMDEF)

# Assembler Flags

ASFLAGS  := $(WARNINGS) $(WARNINGS_C_OFF) $(DEFINES) 	\
	 	    $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG) 


# Linker Flags

ifeq ($(PRINT_INLINE), 1)
LINK_INLINE :=
endif

ifeq ($(DEBUG_VERSION), 0)
	LINK_OPTIMIZE    = 
	AR_FLAGS         = 
	LINK_DEBUG       = 
else
	LINK_OPTIMIZE    =
	AR_FLAGS         = -Debug
	LINK_DEBUG       = -Debug 
endif

LD_FLAGS += $(LINK_OPTIMIZE) $(LINK_DEBUG)

LD_FLAGS_EXT     := -NODEFAULTLIB
LD_FLAGS_EXT_OPT := 
LD_FLAGS_EXT_DBG := -Debug






