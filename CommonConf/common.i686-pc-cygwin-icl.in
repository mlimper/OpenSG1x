
LIBPATH_OPTION       := -LIBPATH:
LIBLNK_OPTION        := 

OBJ_OPTION           := -Fo

NO_STDINC_DEP_OPTION := -X

COMPONLY_OPTION      := -c

DEPEND_OPTION        := -QM -nologo

LD_OUTOPT            := -out:

LD_OUTSPACE          :=

DIR_SEP              := /

II_FILESDIR          := 

### Compiler Version ##############################################

COMPILER5x := $(shell $(CC) 2>&1 | head -1 | cut -d' ' -f 8)
COMPILER4x := $(shell $(CC) 2>&1 | head -1 | cut -d' ' -f 5)

ifneq ($(COMPILER5x),)
COMPILER5x-1 := $(subst .,,$(COMPILER5x))

COMPILER5x-2 := $(strip $(COMPILER5x-1))

COMPILER5x-3 := $(shell if test $(COMPILER5x-2) -lt 100 ; then echo 1; fi)

COMPILERVERSION5x := $(if $(COMPILER5x-3),$(COMPILER5x-2)0,$(COMPILER5x-2))
else
COMPILERVERSION5x :=
endif

ifneq ($(COMPILER4x),)
ifneq ($(COMPILER4x),32-bit)

COMPILER4x-1 := $(subst .,,$(COMPILER4x))

COMPILER4x-2 := $(strip $(COMPILER4x-1))

COMPILER4x-3 := $(shell if test $(COMPILER4x-2) -lt 100 ; then echo 1; fi)

COMPILERVERSION4x := $(if $(COMPILER4x-3),$(COMPILER4x-2)0,$(COMPILER4x-2))
else
COMPILERVERSION4x :=
endif
else
COMPILERVERSION4x :=
endif

COMPILERVERSION := $(COMPILERVERSION4x)

COMPILERVERSION := $(if $(COMPILERVERSION),$(COMPILERVERSION),$(COMPILERVERSION5x))

COMPILERVERSION := $(if $(COMPILERVERSION),$(COMPILERVERSION),$(error could not determine compiler version))

$(warning Got Compiler Version : $(COMPILERVERSION))

### Defines #######################################################

# For QT
DEP_PLATTFORMDEF = -DQT_CLEAN_NAMESPACE -D_STANDARD_C_PLUS_PLUS 

SOURCE_DEFINES   = $(CONFIGURED_PACKAGE_DEFS)

SYSTEM_DEFINES   = -DWIN32 -D_DEBUG -D_WINDOWS 				      \
				   -DWINVER=0x0400 -D_WIN32_WINDOWS=0x0410 	      \
				   -DVSC_BUILD_DLL -DOSG_BUILD_DLL -DOSG_NEW_DLLS \
                   -D_OSG_HAVE_CONFIGURED_H_                      \
                   -D__INTEL_COMPILER_VERSION=$(COMPILERVERSION)



### Warnings #######################################################

WARNINGS	   		= -W4

WARNINGS_C_OFF		= # -woff 835

# 1110 : statement is unreachable
# 1174 : Variable declared but never referenced
# 1375 : Base class Destructor not virtual
# 1376 : class has no accessible constructors
# 1424 : The template parameter is not used in declaring the argument types
# 1682 : overloaded virtual function is only partially overridden
# rubens
# warning(3322): omission of explicit type is nonstandard ("int" assumed)

WARNINGS_CPP_OFF 	= -Qwd985 -Qwd530

WARN_ERR_CPP        = -Qwe698


### Language #######################################################

LANG_FLAGS          = 

COMPILER    		= -Qvc6 -MDd -GX -Gi- -ZI -Od -FD -GZ -Qansi -GR

### Optimize / Debug ###############################################

ifeq ($(PRINT_INLINE), 1)
COMP_INLINE :=
endif

ifeq ($(DEBUG_VERSION), 0)
	COMP_OPTIMIZE    = 
	COMP_DEBUG       = 
else
	COMP_OPTIMIZE    =
	COMP_DEBUG       = 
endif

### Compiler Flags ################################################


DEFINES     = $(SOURCE_DEFINES) $(SYSTEM_DEFINES) 

# C Compiler Flags

CFLAGS   := $(WARNINGS) $(WARNINGS_C_OFF) -D__STDC__ 						\
		    $(DEFINES) $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG)

# CPP Compiler Flags

CCFLAGS  := $(WARNINGS) $(WARNINGS_CPP_OFF) $(WARN_ERR_CPP) $(DEFINES) \
		    $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG) 

# Assembler Flags

ASFLAGS  := $(WARNINGS) $(WARNINGS_C_OFF) $(DEFINES) 	\
	 	    $(COMPILER) $(COMP_OPTIMIZE) $(COMP_DEBUG) 


# Linker Flags

ifeq ($(PRINT_INLINE), 1)
LINK_INLINE :=
endif

ifeq ($(DEBUG_VERSION), 0)
	LINK_OPTIMIZE    = 
	AR_FLAGS         = 
	LINK_DEBUG       = 
else
	LINK_OPTIMIZE    =
	AR_FLAGS         = -Debug
	LINK_DEBUG       = -Debug 
endif

LD_FLAGS += $(LINK_OPTIMIZE) $(LINK_DEBUG)