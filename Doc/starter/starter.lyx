#LyX 1.1 created this file. For more info see http://www.lyx.org/
\lyxformat 218
\textclass book
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single 
\papersize Default
\paperpackage a4
\use_geometry 0
\use_amsmath 0
\paperorientation portrait
\secnumdepth 3
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\quotes_times 2
\papercolumns 1
\papersides 2
\paperpagestyle default

\layout Title

OpenSG Starter guide
\layout Standard


\begin_inset LatexCommand \tableofcontents{}

\end_inset 


\layout Chapter

Introduction
\layout Section

What is OpenSG
\layout Standard

OpenSG is a real-time rendering system based on a scenegraph metaphor.
 It works along the lines of OpenInventor, Performer or Java3D, although
 it is probably closest to Performer.
 It supports parallel processing, albeit in a more general way, and will
 drive multiple displays for multi-screen stereo projection systems.
 The goal is to have something that handles multi-threaded data structures
 as simply as possible without compromising performance too much.
 It should also support heterogeneous multi-pipe applications, i.e.
 multiple different graphics cards running one application.
 Many things are quite easy to do with a little program, but are sometimes
 hard to fit into an existing system.
 Thus accessibility is an important goal, and we're striving to make OpenSG
 very extend-able.
\layout Standard

It works on different Unix systems and Windows.
 
\layout Standard

It's primary use (i.e.
 what we are doing with it) is for VR applications, mainly in the automotive
 context.
 But it can be used for any kind of application needing fast and general
 3D graphics.
 
\layout Section

What is OpenSG not
\layout Standard

OpenSG is not a complete VR system.
 Things like device access and interaction are left out on purpose, there
 are other systems for that.
\layout Section

Where do get it
\layout Standard

www.OpenSG.org blabla
\layout Section

How to compile and install
\layout Standard

INSTALL/README blabla
\layout Section

How do use it
\layout Subsection

Own projects
\layout Standard

Makefile blabla
\layout Subsection

Extending OpenSG
\layout Standard

Makefile blabla
\layout Standard

test files
\layout Chapter

Working with OpenSG
\layout Standard

only overview, look at the doxygen files for detailed description blabla
\layout Section

Base types
\layout Standard

Platform Independence blabla
\layout Subsection

Log
\layout Subsection

Math (vector,point,matrix,quaternion)
\layout Subsection

Image
\layout Subsection

Threads
\layout Section

Fields and FieldContainer
\layout Standard

container for everything that is thread-save
\layout Subsection

Createing new Field Container classes
\layout Standard

fcdEdit (see image 
\begin_inset LatexCommand \ref{fcdEditFig}

\end_inset 


\begin_float fig 
\layout Standard
\align center 

\begin_inset Figure size 267 177
file fcd.eps
width 4 90
flags 9

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{fcdEditFig}

\end_inset 

FcdEdit blabla
\end_float 
 ) stuff
\layout Subsection

Creating a FieldContainer instance
\layout Standard

factory,prototype blabla
\layout Subsection

Changing field values
\layout Standard

changelist blabla
\layout Subsection

FieldContainer attachments
\layout Standard

attachment blabla
\layout Section

Nodes and NodeCores
\layout Standard

single (see image 
\begin_inset LatexCommand \ref{singleParentFig}

\end_inset 


\begin_float fig 
\layout Standard
\align center 

\begin_inset Figure size 238 304
file node_core_share.eps
width 4 80
flags 9

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{singleParentFig}

\end_inset 

Single Parent Scene
\end_float 
) /multi-parent (see image 
\begin_inset LatexCommand \ref{multiParentFig}

\end_inset 


\begin_float fig 
\layout Standard
\align center 

\begin_inset Figure size 238 286
file tree_multiparent.eps
width 4 80
flags 9

\end_inset 


\layout Caption


\begin_inset LatexCommand \label{multiParentFig}

\end_inset 

Multi Parent Scene
\end_float 
) stuff
\layout Subsection

Node 
\layout Standard

volume stuff, toWord matrix
\layout Subsection

NodeCore 
\layout Subsubsection

Special Node Cores
\layout Description

Material chunk stuff
\layout Description

Geometry property stuff
\layout Section

Action and Traversals
\layout Subsection

Usage
\layout Subsection

Write our own action handler
\layout Subsubsection

Camera and Window
\layout Section

Loader
\layout Subsection

Usage
\layout Subsubsection

Scene
\layout Subsubsection

Image
\layout Subsection

Write our own
\layout Subsubsection

Scene
\layout Subsubsection

Image
\the_end
