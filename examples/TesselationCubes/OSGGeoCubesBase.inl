/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                     Copyright 2000,2001 by OpenSG Forum                   *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class GeoCubes!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OpenSG/OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &GeoCubesBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 GeoCubesBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
GeoCubesPtr GeoCubesBase::create(void) 
{
    GeoCubesPtr fc; 

    if(getClassType().getPrototype() != osg::NullFC) 
    {
        fc = GeoCubesPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
GeoCubesPtr GeoCubesBase::createEmpty(void) 
{ 
    GeoCubesPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

inline
MFPnt3f *GeoCubesBase::getMFPosition(void)
{
    return &_mfPosition;
}

inline
MFReal32 *GeoCubesBase::getMFLength(void)
{
    return &_mfLength;
}

inline
MFColor3f *GeoCubesBase::getMFColor(void)
{
    return &_mfColor;
}



inline
Pnt3f &GeoCubesBase::getPosition(const UInt32 index)
{
    return _mfPosition[index];
}

inline
MFPnt3f &GeoCubesBase::getPosition(void)
{
    return _mfPosition;
}

inline
const MFPnt3f &GeoCubesBase::getPosition(void) const
{
    return _mfPosition;
}

inline
Real32 &GeoCubesBase::getLength(const UInt32 index)
{
    return _mfLength[index];
}

inline
MFReal32 &GeoCubesBase::getLength(void)
{
    return _mfLength;
}

inline
const MFReal32 &GeoCubesBase::getLength(void) const
{
    return _mfLength;
}

inline
Color3f &GeoCubesBase::getColor(const UInt32 index)
{
    return _mfColor[index];
}

inline
MFColor3f &GeoCubesBase::getColor(void)
{
    return _mfColor;
}

inline
const MFColor3f &GeoCubesBase::getColor(void) const
{
    return _mfColor;
}


OSG_END_NAMESPACE

#define OSGGEOCUBESBASE_INLINE_CVSID "@(#)$Id: OSGGeoCubesBase.inl,v 1.1 2002/05/13 10:53:40 dirk Exp $"

