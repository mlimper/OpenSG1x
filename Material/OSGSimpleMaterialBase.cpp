/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                 Copyright (C) 2000 by the OpenSG Forum                    *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SimpleMaterial!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------


#include <stdlib.h>
#include <stdio.h>

#include "OSGConfig.h"

#ifdef OSG_STREAM_IN_STD_NAMESPACE
#include <iostream>
#else
#include <iostream.h>
#endif

#define OSG_COMPILEMATERIAL
#define OSG_COMPILESIMPLEMATERIALINST

#include "OSGSimpleMaterialBase.h"
#include "OSGSimpleMaterial.h"

OSG_USING_NAMESPACE


/***************************************************************************\
 *                               Types                                     *
\***************************************************************************/


/***************************************************************************\
 *                           Class variables                               *
\***************************************************************************/

const OSG::UInt32		SimpleMaterialBase::AmbientFieldId;
const OSG::BitVector	SimpleMaterialBase::AmbientFieldMask;

const OSG::UInt32		SimpleMaterialBase::DiffuseFieldId;
const OSG::BitVector	SimpleMaterialBase::DiffuseFieldMask;

const OSG::UInt32		SimpleMaterialBase::SpecularFieldId;
const OSG::BitVector	SimpleMaterialBase::SpecularFieldMask;

const OSG::UInt32		SimpleMaterialBase::ShininessFieldId;
const OSG::BitVector	SimpleMaterialBase::ShininessFieldMask;

const OSG::UInt32		SimpleMaterialBase::EmissionFieldId;
const OSG::BitVector	SimpleMaterialBase::EmissionFieldMask;

const OSG::UInt32		SimpleMaterialBase::TransparencyFieldId;
const OSG::BitVector	SimpleMaterialBase::TransparencyFieldMask;


const OSG::UInt32    	SimpleMaterialBase::NextFieldId; 
const OSG::BitVector 	SimpleMaterialBase::NextFieldMask;


char SimpleMaterialBase::cvsid[] = "@(#)$Id: OSGSimpleMaterialBase.cpp,v 1.1 2001/04/15 01:57:09 dirk Exp $";

/** \brief Group field description
 */

FieldDescription SimpleMaterialBase::_desc[] = 
{
    FieldDescription(SFColor3f::getClassType(), 
                     "ambient", 
                     AmbientFieldId, AmbientFieldMask,
                     false,
                     (FieldAccessMethod) &SimpleMaterialBase::getSFAmbient),
    FieldDescription(SFColor3f::getClassType(), 
                     "diffuse", 
                     DiffuseFieldId, DiffuseFieldMask,
                     false,
                     (FieldAccessMethod) &SimpleMaterialBase::getSFDiffuse),
    FieldDescription(SFColor3f::getClassType(), 
                     "specular", 
                     SpecularFieldId, SpecularFieldMask,
                     false,
                     (FieldAccessMethod) &SimpleMaterialBase::getSFSpecular),
    FieldDescription(SFReal32::getClassType(), 
                     "shininess", 
                     ShininessFieldId, ShininessFieldMask,
                     false,
                     (FieldAccessMethod) &SimpleMaterialBase::getSFShininess),
    FieldDescription(SFColor3f::getClassType(), 
                     "emission", 
                     EmissionFieldId, EmissionFieldMask,
                     false,
                     (FieldAccessMethod) &SimpleMaterialBase::getSFEmission),
    FieldDescription(SFReal32::getClassType(), 
                     "transparency", 
                     TransparencyFieldId, TransparencyFieldMask,
                     false,
                     (FieldAccessMethod) &SimpleMaterialBase::getSFTransparency)
};

/** \brief SimpleMaterial type
 */

FieldContainerType SimpleMaterialBase::_type(
    "SimpleMaterial",
    "ChunkMaterial",
    NULL,
    (PrototypeCreateF) &SimpleMaterialBase::createEmpty,
    SimpleMaterial::initMethod,
    _desc,
    sizeof(_desc));


/***************************************************************************\
 *                           Class methods                                 *
\***************************************************************************/

/*-------------------------------------------------------------------------*\
 -  public                                                                 -
\*-------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------*\
 -  protected                                                              -
\*-------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------*\
 -  private                                                                -
\*-------------------------------------------------------------------------*/

/***************************************************************************\
 *                           Instance methods                              *
\***************************************************************************/

/*-------------------------------------------------------------------------*\
 -  public                                                                 -
\*-------------------------------------------------------------------------*/

//OSG_FIELD_CONTAINER_DEF(SimpleMaterialBase, SimpleMaterialPtr)

FieldContainerType &SimpleMaterialBase::getType(void) 
{
    return _type; 
} 

const FieldContainerType &SimpleMaterialBase::getType(void) const 
{
    return _type;
} 

FieldContainerPtr SimpleMaterialBase::shallowCopy(void) const 
{ 
    SimpleMaterialPtr returnValue; 

    newPtr(returnValue, dynamic_cast<const SimpleMaterial *>(this)); 

    return returnValue; 
}

UInt32 SimpleMaterialBase::getSize(void) const 
{ 
    return sizeof(SimpleMaterialBase); 
}

/*------------- constructors & destructors --------------------------------*/

/** \brief Constructor
 */

SimpleMaterialBase::SimpleMaterialBase(void) :
	_ambient	(Color3f(0,0,0)), 
	_diffuse	(Color3f(0,0,0)), 
	_specular	(Color3f(0,0,0)), 
	_shininess	(Real32(1)), 
	_emission	(Color3f(0,0,0)), 
	_transparency	(Real32(0)), 
	Inherited() 
{
}

/** \brief Copy Constructor
 */

SimpleMaterialBase::SimpleMaterialBase(const SimpleMaterialBase &source) :
	_ambient		(source._ambient), 
	_diffuse		(source._diffuse), 
	_specular		(source._specular), 
	_shininess		(source._shininess), 
	_emission		(source._emission), 
	_transparency		(source._transparency), 
	Inherited        (source)
{
}

/** \brief Destructor
 */

SimpleMaterialBase::~SimpleMaterialBase(void)
{
}

/*------------------------------ access -----------------------------------*/

/*------------------------------- dump ----------------------------------*/

/*-------------------------------------------------------------------------*\
 -  protected                                                              -
\*-------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------*\
 -  private                                                                -
\*-------------------------------------------------------------------------*/

