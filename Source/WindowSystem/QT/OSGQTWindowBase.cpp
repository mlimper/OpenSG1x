/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class QTWindow!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#define OSG_COMPILEQTWINDOWINST

#include <stdlib.h>
#include <stdio.h>

#include <OSGConfig.h>

#include "OSGQTWindowBase.h"
#include "OSGQTWindow.h"


OSG_USING_NAMESPACE

#ifdef __sgi
#pragma set woff 1174
#endif

namespace
{
    static Char8 cvsid_cpp       [] = "@(#)$Id: $";
    static Char8 cvsid_hpp       [] = OSGQTWINDOWBASE_HEADER_CVSID;
    static Char8 cvsid_inl       [] = OSGQTWINDOWBASE_INLINE_CVSID;

    static Char8 cvsid_fields_hpp[] = OSGQTWINDOWFIELDS_HEADER_CVSID;
}

#ifdef __sgi
#pragma reset woff 1174
#endif

const OSG::BitVector  QTWindowBase::GlWidgetFieldMask = 
    (1 << QTWindowBase::GlWidgetFieldId);



// Field descriptions

/*! \var OSGQGLWidgetP   QTWindowBase::_sfGlWidget
    
*/
//! QTWindow description

FieldDescription *QTWindowBase::_desc[] = 
{
    new FieldDescription(SFOSGQGLWidgetP::getClassType(), 
                     "GlWidget", 
                     GlWidgetFieldId, GlWidgetFieldMask,
                     true,
                     (FieldAccessMethod) &QTWindowBase::getSFGlWidget)
};

//! QTWindow type

FieldContainerType QTWindowBase::_type(
    "QTWindow",
#ifdef WIN32
    "WIN32Window",
#else
    "XWindow",
#endif
    NULL,
    (PrototypeCreateF) &QTWindowBase::createEmpty,
    QTWindow::initMethod,
    _desc,
    sizeof(_desc));

//OSG_FIELD_CONTAINER_DEF(QTWindowBase, QTWindowPtr)

/*------------------------------ get -----------------------------------*/

FieldContainerType &QTWindowBase::getType(void) 
{
    return _type; 
} 

const FieldContainerType &QTWindowBase::getType(void) const 
{
    return _type;
} 


FieldContainerPtr QTWindowBase::shallowCopy(void) const 
{ 
    QTWindowPtr returnValue; 

    newPtr(returnValue, dynamic_cast<const QTWindow *>(this)); 

    return returnValue; 
}

UInt32 QTWindowBase::getContainerSize(void) const 
{ 
    return sizeof(QTWindowBase); 
}


void QTWindowBase::executeSync(      FieldContainer &other,
                                    const BitVector      &whichField)
{
    this->executeSyncImpl((QTWindowBase *) &other, whichField);
}

/*------------------------- constructors ----------------------------------*/

//! Constructor

#ifdef OSG_WIN32_ICL
#pragma warning (disable : 383)
#endif

QTWindowBase::QTWindowBase(void) :
    _sfGlWidget               (OSGQGLWidgetP(NULL)), 
    Inherited() 
{
}

#ifdef OSG_WIN32_ICL
#pragma warning (default : 383)
#endif

//! Copy Constructor

QTWindowBase::QTWindowBase(const QTWindowBase &source) :
    _sfGlWidget               (source._sfGlWidget               ), 
    Inherited                 (source)
{
}

/*-------------------------- destructors ----------------------------------*/

//! Destructor

QTWindowBase::~QTWindowBase(void)
{
}

/*------------------------------ access -----------------------------------*/

UInt32 QTWindowBase::getBinSize(const BitVector &whichField)
{
    UInt32 returnValue = Inherited::getBinSize(whichField);

    if(FieldBits::NoField != (GlWidgetFieldMask & whichField))
    {
        returnValue += _sfGlWidget.getBinSize();
    }


    return returnValue;
}

void QTWindowBase::copyToBin(      BinaryDataHandler &pMem,
                                  const BitVector         &whichField)
{
    Inherited::copyToBin(pMem, whichField);

    if(FieldBits::NoField != (GlWidgetFieldMask & whichField))
    {
        _sfGlWidget.copyToBin(pMem);
    }


}

void QTWindowBase::copyFromBin(      BinaryDataHandler &pMem,
                                    const BitVector    &whichField)
{
    Inherited::copyFromBin(pMem, whichField);

    if(FieldBits::NoField != (GlWidgetFieldMask & whichField))
    {
        _sfGlWidget.copyFromBin(pMem);
    }


}

void QTWindowBase::executeSyncImpl(      QTWindowBase *pOther,
                                        const BitVector         &whichField)
{

    Inherited::executeSyncImpl(pOther, whichField);

    if(FieldBits::NoField != (GlWidgetFieldMask & whichField))
        _sfGlWidget.syncWith(pOther->_sfGlWidget);


}


#include <OSGMFieldTypeDef.inl>
#include <OSGSFieldTypeDef.inl>

OSG_BEGIN_NAMESPACE

DataType FieldDataTraits<QTWindowPtr>::_type("QTWindowPtr", "WindowPtr");

OSG_DLLEXPORT_SFIELD_DEF1(QTWindowPtr, OSG_WINDOWQTLIB_DLLTMPLMAPPING);
OSG_DLLEXPORT_MFIELD_DEF1(QTWindowPtr, OSG_WINDOWQTLIB_DLLTMPLMAPPING);

OSG_END_NAMESPACE
