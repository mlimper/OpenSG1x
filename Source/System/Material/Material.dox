#include <OSGConfig.h>

using namespace OSG;

/*! \defgroup GrpSystemMaterial Materials
    \ingroup GrpSystem
    
materials.

See \ref PageSystemSystemMaterial for details.
*/

/*! \page PageSystemMaterial Materials

\latexonly Starter:NewChapter \endlatexonly

Materials define the surface properties of the geometry. For the standard
Phong lighting model that OpenGL uses these are ambient, diffuse and specular
color as well as shininess. However, this is an area where extensions are
added at an amazing pace. The purpose of materials is to add a level of
abstraction and give the user an easy to use interface to define surface
properties without having to worry about how to realize this.

Thus, every geometry needs to have a material associated with it by means of
the material field.

This area is quickly expanding, so what we have right now is just the
beginning.

\section PageSystemMaterialTypes Material types

Right now there are only the simple materials that OpenGL supports. 

\subsection PageSystemMaterialSimpleMaterial SimpleMaterial

SimpleMaterial is a pretty direct mapping from OpenGL. It has colors for
ambient, diffuse, specular and emission properties, and a shininess value. In
addition to that it has a transparency setting, ranging from 0 for opaque to 1
for fully transparent. 

There are two other attributes in a SimpleMaterial that control the appearance
of an object. One is the lit attribute, which defines if the material is
influenced by light sources at all. If it isn't, the color is directly taken
from the diffuseColor component and other color attributes are ignored. 

The other attribute is the colorMaterial field, which defines how colors that
are given in the geometry influence the lighting calculation. By default they
replace the diffuse color only. Possible values are taken from the
glColorMaterial() call, the most useful being GL_DIFFUSE_AND_SPECULAR. One
possible value that is not used by glColorMaterial() is GL_NONE, which
switches off the color material handling and thus ignores colors that are
given in the geometry.

\subsection PageSystemMaterialTexturedSimpleMaterial TexturedSimpleMaterial

TexturedSimpleMaterial is derived from SimpleMaterial and adds a texture. The
texture is defined by an image (see [sec:image] for details on how to define
or load an image). 

Additionally there are some parameters to define the behavior of a texture.
magFilter and minFilter define how to scale the texture image up or down,
legal values taken from glTexParameter(). The most useful ones are GL_NEAREST
or GL_LINEAR for magFilter, and additionally GL_LINEAR_MIPMAP_LINEAR for
minFilter. 

envMode defines how a color from the texture is combined with a color from the
lighting calculation. The default is GL_REPLACE which completely ignores the
lighting color. Other useful values are GL_MODULATE, which just multiplies the
two, and GL_DECAL, which interpolates between lighting and texture based on
the texture's alpha channel.

Finally, a texture can be used as a spherical environment map to simulate a
reflective object by setting the envMap field to true. Spherical environment
maps need to display the image of a reflective sphere in the middle of the
environment that is being reflected. 

*/
