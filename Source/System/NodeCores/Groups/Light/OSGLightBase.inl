/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                     Copyright 2000,2001 by OpenSG Forum                   *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Light!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &LightBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 LightBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 


/*------------------------------ get -----------------------------------*/

inline
SFColor4f *LightBase::getSFAmbient(void)
{
    return &_sfAmbient;
}

inline
SFColor4f *LightBase::getSFDiffuse(void)
{
    return &_sfDiffuse;
}

inline
SFColor4f *LightBase::getSFSpecular(void)
{
    return &_sfSpecular;
}

inline
SFNodePtr *LightBase::getSFBeacon(void)
{
    return &_sfBeacon;
}

inline
SFBool *LightBase::getSFOn(void)
{
    return &_sfOn;
}

inline
SFReal32 *LightBase::getSFConstantAttenuation(void)
{
    return &_sfConstantAttenuation;
}

inline
SFReal32 *LightBase::getSFLinearAttenuation(void)
{
    return &_sfLinearAttenuation;
}

inline
SFReal32 *LightBase::getSFQuadraticAttenuation(void)
{
    return &_sfQuadraticAttenuation;
}


inline
Color4f &LightBase::getAmbient(void)
{
    return _sfAmbient.getValue();
}

inline
const Color4f &LightBase::getAmbient(void) const
{
    return _sfAmbient.getValue();
}

inline
void LightBase::setAmbient(const Color4f &value)
{
    _sfAmbient.setValue(value);
}

inline
Color4f &LightBase::getDiffuse(void)
{
    return _sfDiffuse.getValue();
}

inline
const Color4f &LightBase::getDiffuse(void) const
{
    return _sfDiffuse.getValue();
}

inline
void LightBase::setDiffuse(const Color4f &value)
{
    _sfDiffuse.setValue(value);
}

inline
Color4f &LightBase::getSpecular(void)
{
    return _sfSpecular.getValue();
}

inline
const Color4f &LightBase::getSpecular(void) const
{
    return _sfSpecular.getValue();
}

inline
void LightBase::setSpecular(const Color4f &value)
{
    _sfSpecular.setValue(value);
}

inline
NodePtr &LightBase::getBeacon(void)
{
    return _sfBeacon.getValue();
}

inline
const NodePtr &LightBase::getBeacon(void) const
{
    return _sfBeacon.getValue();
}

inline
void LightBase::setBeacon(const NodePtr &value)
{
    _sfBeacon.setValue(value);
}

inline
bool &LightBase::getOn(void)
{
    return _sfOn.getValue();
}

inline
const bool &LightBase::getOn(void) const
{
    return _sfOn.getValue();
}

inline
void LightBase::setOn(const bool &value)
{
    _sfOn.setValue(value);
}

inline
Real32 &LightBase::getConstantAttenuation(void)
{
    return _sfConstantAttenuation.getValue();
}

inline
const Real32 &LightBase::getConstantAttenuation(void) const
{
    return _sfConstantAttenuation.getValue();
}

inline
void LightBase::setConstantAttenuation(const Real32 &value)
{
    _sfConstantAttenuation.setValue(value);
}

inline
Real32 &LightBase::getLinearAttenuation(void)
{
    return _sfLinearAttenuation.getValue();
}

inline
const Real32 &LightBase::getLinearAttenuation(void) const
{
    return _sfLinearAttenuation.getValue();
}

inline
void LightBase::setLinearAttenuation(const Real32 &value)
{
    _sfLinearAttenuation.setValue(value);
}

inline
Real32 &LightBase::getQuadraticAttenuation(void)
{
    return _sfQuadraticAttenuation.getValue();
}

inline
const Real32 &LightBase::getQuadraticAttenuation(void) const
{
    return _sfQuadraticAttenuation.getValue();
}

inline
void LightBase::setQuadraticAttenuation(const Real32 &value)
{
    _sfQuadraticAttenuation.setValue(value);
}


OSG_END_NAMESPACE

#define OSGLIGHTBASE_INLINE_CVSID "@(#)$Id: $"

