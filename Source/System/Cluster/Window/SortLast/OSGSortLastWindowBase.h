/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class SortLastWindow
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGSORTLASTWINDOWBASE_H_
#define _OSGSORTLASTWINDOWBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OSGConfig.h>
#include <OSGSystemDef.h>

#include <OSGBaseTypes.h>
#include <OSGRefPtr.h>
#include <OSGCoredNodePtr.h>

#include <OSGClusterWindow.h> // Parent

#include <OSGNodeFields.h> // GroupNodes type
#include <OSGUInt32Fields.h> // GroupLengths type
#include <OSGBoolFields.h> // GroupsChanged type

#include <OSGSortLastWindowFields.h>

OSG_BEGIN_NAMESPACE

class SortLastWindow;
class BinaryDataHandler;

//! \brief SortLastWindow Base Class.

class OSG_SYSTEMLIB_DLLMAPPING SortLastWindowBase : public ClusterWindow
{
  private:

    typedef ClusterWindow    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef SortLastWindowPtr  Ptr;

    enum
    {
        GroupNodesFieldId    = Inherited::NextFieldId,
        GroupLengthsFieldId  = GroupNodesFieldId    + 1,
        GroupsChangedFieldId = GroupLengthsFieldId  + 1,
        NextFieldId          = GroupsChangedFieldId + 1
    };

    static const OSG::BitVector GroupNodesFieldMask;
    static const OSG::BitVector GroupLengthsFieldMask;
    static const OSG::BitVector GroupsChangedFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           MFNodePtr           *getMFGroupNodes     (void);
           MFUInt32            *getMFGroupLengths   (void);
           SFBool              *getSFGroupsChanged  (void);

           bool                &getGroupsChanged  (void);
     const bool                &getGroupsChanged  (void) const;
           NodePtr             &getGroupNodes     (const UInt32 index);
           MFNodePtr           &getGroupNodes     (void);
     const MFNodePtr           &getGroupNodes     (void) const;
           UInt32              &getGroupLengths   (const UInt32 index);
           MFUInt32            &getGroupLengths   (void);
     const MFUInt32            &getGroupLengths   (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setGroupsChanged  ( const bool &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  SortLastWindowPtr      create          (void); 
    static  SortLastWindowPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    MFNodePtr           _mfGroupNodes;
    MFUInt32            _mfGroupLengths;
    SFBool              _sfGroupsChanged;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    SortLastWindowBase(void);
    SortLastWindowBase(const SortLastWindowBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~SortLastWindowBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      SortLastWindowBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const SortLastWindowBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef SortLastWindowBase *SortLastWindowBaseP;

typedef osgIF<SortLastWindowBase::isNodeCore,
              CoredNodePtr<SortLastWindow>,
              FieldContainer::attempt_to_create_CoredNodePtr_on_non_NodeCore_FC
              >::_IRet SortLastWindowNodePtr;

typedef RefPtr<SortLastWindowPtr> SortLastWindowRefPtr;

OSG_END_NAMESPACE

#define OSGSORTLASTWINDOWBASE_HEADER_CVSID "@(#)$Id: FCBaseTemplate_h.h,v 1.36 2005/05/26 21:53:01 dirk Exp $"

#endif /* _OSGSORTLASTWINDOWBASE_H_ */
