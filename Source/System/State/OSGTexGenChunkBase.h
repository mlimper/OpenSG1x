/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TexGenChunk
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGTEXGENCHUNKBASE_H_
#define _OSGTEXGENCHUNKBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OSGConfig.h>
#include <OSGSystemDef.h>

#include <OSGBaseTypes.h>

#include <OSGStateChunk.h> // Parent

#include <OSGUInt32Fields.h> // GenFuncS type
#include <OSGUInt32Fields.h> // GenFuncT type
#include <OSGUInt32Fields.h> // GenFuncR type
#include <OSGUInt32Fields.h> // GenFuncQ type
#include <OSGVec4fFields.h> // GenFuncSPlane type
#include <OSGVec4fFields.h> // GenFuncTPlane type
#include <OSGVec4fFields.h> // GenFuncRPlane type
#include <OSGVec4fFields.h> // GenFuncQPlane type

#include <OSGTexGenChunkFields.h>

OSG_BEGIN_NAMESPACE

class TexGenChunk;
class BinaryDataHandler;

//! \brief TexGenChunk Base Class.

class OSG_SYSTEMLIB_DLLMAPPING TexGenChunkBase : public StateChunk
{
  private:

    typedef StateChunk Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    enum
    {
        GenFuncSFieldId      = Inherited::NextFieldId,
        GenFuncTFieldId      = GenFuncSFieldId      + 1,
        GenFuncRFieldId      = GenFuncTFieldId      + 1,
        GenFuncQFieldId      = GenFuncRFieldId      + 1,
        GenFuncSPlaneFieldId = GenFuncQFieldId      + 1,
        GenFuncTPlaneFieldId = GenFuncSPlaneFieldId + 1,
        GenFuncRPlaneFieldId = GenFuncTPlaneFieldId + 1,
        GenFuncQPlaneFieldId = GenFuncRPlaneFieldId + 1,
        NextFieldId          = GenFuncQPlaneFieldId + 1
    };

    static const OSG::BitVector GenFuncSFieldMask;
    static const OSG::BitVector GenFuncTFieldMask;
    static const OSG::BitVector GenFuncRFieldMask;
    static const OSG::BitVector GenFuncQFieldMask;
    static const OSG::BitVector GenFuncSPlaneFieldMask;
    static const OSG::BitVector GenFuncTPlaneFieldMask;
    static const OSG::BitVector GenFuncRPlaneFieldMask;
    static const OSG::BitVector GenFuncQPlaneFieldMask;


    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFUInt32            *getSFGenFuncS       (void);
           SFUInt32            *getSFGenFuncT       (void);
           SFUInt32            *getSFGenFuncR       (void);
           SFUInt32            *getSFGenFuncQ       (void);
           SFVec4f             *getSFGenFuncSPlane  (void);
           SFVec4f             *getSFGenFuncTPlane  (void);
           SFVec4f             *getSFGenFuncRPlane  (void);
           SFVec4f             *getSFGenFuncQPlane  (void);

           UInt32              &getGenFuncS       (void);
     const UInt32              &getGenFuncS       (void) const;
           UInt32              &getGenFuncT       (void);
     const UInt32              &getGenFuncT       (void) const;
           UInt32              &getGenFuncR       (void);
     const UInt32              &getGenFuncR       (void) const;
           UInt32              &getGenFuncQ       (void);
     const UInt32              &getGenFuncQ       (void) const;
           Vec4f               &getGenFuncSPlane  (void);
     const Vec4f               &getGenFuncSPlane  (void) const;
           Vec4f               &getGenFuncTPlane  (void);
     const Vec4f               &getGenFuncTPlane  (void) const;
           Vec4f               &getGenFuncRPlane  (void);
     const Vec4f               &getGenFuncRPlane  (void) const;
           Vec4f               &getGenFuncQPlane  (void);
     const Vec4f               &getGenFuncQPlane  (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setGenFuncS       ( const UInt32 &value );
     void setGenFuncT       ( const UInt32 &value );
     void setGenFuncR       ( const UInt32 &value );
     void setGenFuncQ       ( const UInt32 &value );
     void setGenFuncSPlane  ( const Vec4f &value );
     void setGenFuncTPlane  ( const Vec4f &value );
     void setGenFuncRPlane  ( const Vec4f &value );
     void setGenFuncQPlane  ( const Vec4f &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  TexGenChunkPtr      create          (void); 
    static  TexGenChunkPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUInt32            _sfGenFuncS;
    SFUInt32            _sfGenFuncT;
    SFUInt32            _sfGenFuncR;
    SFUInt32            _sfGenFuncQ;
    SFVec4f             _sfGenFuncSPlane;
    SFVec4f             _sfGenFuncTPlane;
    SFVec4f             _sfGenFuncRPlane;
    SFVec4f             _sfGenFuncQPlane;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    TexGenChunkBase(void);
    TexGenChunkBase(const TexGenChunkBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~TexGenChunkBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      TexGenChunkBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const TexGenChunkBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef TexGenChunkBase *TexGenChunkBaseP;

OSG_END_NAMESPACE

#define OSGTEXGENCHUNKBASE_HEADER_CVSID "@(#)$Id: $"

#endif /* _OSGTEXGENCHUNKBASE_H_ */
