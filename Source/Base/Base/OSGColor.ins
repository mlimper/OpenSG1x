/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                  Copyright (C) 2008 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

OSG_BEGIN_NAMESPACE

// To support IO for additional value types include this file into
// a .cpp and use the macros below to generate explicit instantiations
// of the operators - cf. OSGColor.cpp

// Color input/ouput operator implementations

template <class ValueTypeT> OSG_DLL_EXPORT
std::ostream &operator <<(
    std::ostream &os, const Color3<ValueTypeT> &obj)
{
    VecToStreamWriter< Color3<ValueTypeT>,
                       ValueTypeT,
                       3                   >::apply(os, obj);

    return os;
}

template <class ValueTypeT> OSG_DLL_EXPORT
std::istream &operator >>(
    std::istream &is, Color3<ValueTypeT> &obj)
{
    VecFromStreamReader< Color3<ValueTypeT>,
                         ValueTypeT,
                         3                   >::apply(is, obj);

    return is;
}


template <class ValueTypeT> OSG_DLL_EXPORT
std::ostream &operator <<(
    std::ostream &os, const Color4<ValueTypeT> &obj)
{
    VecToStreamWriter< Color4<ValueTypeT>,
                       ValueTypeT,
                       4                   >::apply(os, obj);

    return os;
}

template <class ValueTypeT> OSG_DLL_EXPORT
std::istream &operator >>(
    std::istream &is, Color4<ValueTypeT> &obj)
{
    VecFromStreamReader< Color4<ValueTypeT>,
                         ValueTypeT,
                         4                   >::apply(is, obj);

    return is;
}


// Macros to generate explicit instantiations

#define OSG_COLOR3_OUTPUT_OP_INST(OSG_VALUE_TYPE)                       \
template OSG_DLL_EXPORT                                                 \
std::ostream &operator <<(                                              \
    std::ostream &os, const Color3< OSG_VALUE_TYPE > &obj)

#define OSG_COLOR3_INPUT_OP_INST(OSG_VALUE_TYPE)                        \
template OSG_DLL_EXPORT                                                 \
std::istream &operator >>(                                              \
    std::istream &is, Color3< OSG_VALUE_TYPE > &obj);


#define OSG_COLOR4_OUTPUT_OP_INST(OSG_VALUE_TYPE)                       \
template OSG_DLL_EXPORT                                                 \
std::ostream &operator <<(                                              \
    std::ostream &os, const Color4< OSG_VALUE_TYPE > &obj)

#define OSG_COLOR4_INPUT_OP_INST(OSG_VALUE_TYPE)                        \
template OSG_DLL_EXPORT                                                 \
std::istream &operator >>(                                              \
    std::istream &is, Color4< OSG_VALUE_TYPE > &obj)

OSG_END_NAMESPACE
