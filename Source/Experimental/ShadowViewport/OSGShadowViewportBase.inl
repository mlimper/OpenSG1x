/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class ShadowViewport!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &ShadowViewportBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 ShadowViewportBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
ShadowViewportPtr ShadowViewportBase::create(void) 
{
    ShadowViewportPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = ShadowViewportPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
ShadowViewportPtr ShadowViewportBase::createEmpty(void) 
{ 
    ShadowViewportPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the ShadowViewport::_sfOffBias field.
inline
SFReal32 *ShadowViewportBase::getSFOffBias(void)
{
    return &_sfOffBias;
}

//! Get the ShadowViewport::_sfOffFactor field.
inline
SFReal32 *ShadowViewportBase::getSFOffFactor(void)
{
    return &_sfOffFactor;
}

//! Get the ShadowViewport::_sfSceneRoot field.
inline
SFNodePtr *ShadowViewportBase::getSFSceneRoot(void)
{
    return &_sfSceneRoot;
}

//! Get the ShadowViewport::_sfMapSize field.
inline
SFUInt32 *ShadowViewportBase::getSFMapSize(void)
{
    return &_sfMapSize;
}

//! Get the ShadowViewport::_mfLightNodes field.
inline
MFNodePtr *ShadowViewportBase::getMFLightNodes(void)
{
    return &_mfLightNodes;
}

//! Get the ShadowViewport::_mfExcludeNodes field.
inline
MFNodePtr *ShadowViewportBase::getMFExcludeNodes(void)
{
    return &_mfExcludeNodes;
}

//! Get the ShadowViewport::_sfMapAutoUpdate field.
inline
SFBool *ShadowViewportBase::getSFMapAutoUpdate(void)
{
    return &_sfMapAutoUpdate;
}

//! Get the ShadowViewport::_sfShadowMode field.
inline
SFUInt32 *ShadowViewportBase::getSFShadowMode(void)
{
    return &_sfShadowMode;
}

//! Get the ShadowViewport::_sfRange field.
inline
SFReal32 *ShadowViewportBase::getSFRange(void)
{
    return &_sfRange;
}

//! Get the ShadowViewport::_sfShadowOn field.
inline
SFBool *ShadowViewportBase::getSFShadowOn(void)
{
    return &_sfShadowOn;
}

//! Get the ShadowViewport::_sfAutoSearchForLights field.
inline
SFBool *ShadowViewportBase::getSFAutoSearchForLights(void)
{
    return &_sfAutoSearchForLights;
}

//! Get the ShadowViewport::_sfGlobalShadowIntensity field.
inline
SFReal32 *ShadowViewportBase::getSFGlobalShadowIntensity(void)
{
    return &_sfGlobalShadowIntensity;
}


//! Get the value of the ShadowViewport::_sfOffBias field.
inline
Real32 &ShadowViewportBase::getOffBias(void)
{
    return _sfOffBias.getValue();
}

//! Get the value of the ShadowViewport::_sfOffBias field.
inline
const Real32 &ShadowViewportBase::getOffBias(void) const
{
    return _sfOffBias.getValue();
}

//! Set the value of the ShadowViewport::_sfOffBias field.
inline
void ShadowViewportBase::setOffBias(const Real32 &value)
{
    _sfOffBias.setValue(value);
}

//! Get the value of the ShadowViewport::_sfOffFactor field.
inline
Real32 &ShadowViewportBase::getOffFactor(void)
{
    return _sfOffFactor.getValue();
}

//! Get the value of the ShadowViewport::_sfOffFactor field.
inline
const Real32 &ShadowViewportBase::getOffFactor(void) const
{
    return _sfOffFactor.getValue();
}

//! Set the value of the ShadowViewport::_sfOffFactor field.
inline
void ShadowViewportBase::setOffFactor(const Real32 &value)
{
    _sfOffFactor.setValue(value);
}

//! Get the value of the ShadowViewport::_sfSceneRoot field.
inline
NodePtr &ShadowViewportBase::getSceneRoot(void)
{
    return _sfSceneRoot.getValue();
}

//! Get the value of the ShadowViewport::_sfSceneRoot field.
inline
const NodePtr &ShadowViewportBase::getSceneRoot(void) const
{
    return _sfSceneRoot.getValue();
}

//! Set the value of the ShadowViewport::_sfSceneRoot field.
inline
void ShadowViewportBase::setSceneRoot(const NodePtr &value)
{
    _sfSceneRoot.setValue(value);
}

//! Get the value of the ShadowViewport::_sfMapSize field.
inline
UInt32 &ShadowViewportBase::getMapSize(void)
{
    return _sfMapSize.getValue();
}

//! Get the value of the ShadowViewport::_sfMapSize field.
inline
const UInt32 &ShadowViewportBase::getMapSize(void) const
{
    return _sfMapSize.getValue();
}

//! Set the value of the ShadowViewport::_sfMapSize field.
inline
void ShadowViewportBase::setMapSize(const UInt32 &value)
{
    _sfMapSize.setValue(value);
}

//! Get the value of the ShadowViewport::_sfMapAutoUpdate field.
inline
bool &ShadowViewportBase::getMapAutoUpdate(void)
{
    return _sfMapAutoUpdate.getValue();
}

//! Get the value of the ShadowViewport::_sfMapAutoUpdate field.
inline
const bool &ShadowViewportBase::getMapAutoUpdate(void) const
{
    return _sfMapAutoUpdate.getValue();
}

//! Set the value of the ShadowViewport::_sfMapAutoUpdate field.
inline
void ShadowViewportBase::setMapAutoUpdate(const bool &value)
{
    _sfMapAutoUpdate.setValue(value);
}

//! Get the value of the ShadowViewport::_sfShadowMode field.
inline
UInt32 &ShadowViewportBase::getShadowMode(void)
{
    return _sfShadowMode.getValue();
}

//! Get the value of the ShadowViewport::_sfShadowMode field.
inline
const UInt32 &ShadowViewportBase::getShadowMode(void) const
{
    return _sfShadowMode.getValue();
}

//! Set the value of the ShadowViewport::_sfShadowMode field.
inline
void ShadowViewportBase::setShadowMode(const UInt32 &value)
{
    _sfShadowMode.setValue(value);
}

//! Get the value of the ShadowViewport::_sfRange field.
inline
Real32 &ShadowViewportBase::getRange(void)
{
    return _sfRange.getValue();
}

//! Get the value of the ShadowViewport::_sfRange field.
inline
const Real32 &ShadowViewportBase::getRange(void) const
{
    return _sfRange.getValue();
}

//! Set the value of the ShadowViewport::_sfRange field.
inline
void ShadowViewportBase::setRange(const Real32 &value)
{
    _sfRange.setValue(value);
}

//! Get the value of the ShadowViewport::_sfShadowOn field.
inline
bool &ShadowViewportBase::getShadowOn(void)
{
    return _sfShadowOn.getValue();
}

//! Get the value of the ShadowViewport::_sfShadowOn field.
inline
const bool &ShadowViewportBase::getShadowOn(void) const
{
    return _sfShadowOn.getValue();
}

//! Set the value of the ShadowViewport::_sfShadowOn field.
inline
void ShadowViewportBase::setShadowOn(const bool &value)
{
    _sfShadowOn.setValue(value);
}

//! Get the value of the ShadowViewport::_sfAutoSearchForLights field.
inline
bool &ShadowViewportBase::getAutoSearchForLights(void)
{
    return _sfAutoSearchForLights.getValue();
}

//! Get the value of the ShadowViewport::_sfAutoSearchForLights field.
inline
const bool &ShadowViewportBase::getAutoSearchForLights(void) const
{
    return _sfAutoSearchForLights.getValue();
}

//! Set the value of the ShadowViewport::_sfAutoSearchForLights field.
inline
void ShadowViewportBase::setAutoSearchForLights(const bool &value)
{
    _sfAutoSearchForLights.setValue(value);
}

//! Get the value of the ShadowViewport::_sfGlobalShadowIntensity field.
inline
Real32 &ShadowViewportBase::getGlobalShadowIntensity(void)
{
    return _sfGlobalShadowIntensity.getValue();
}

//! Get the value of the ShadowViewport::_sfGlobalShadowIntensity field.
inline
const Real32 &ShadowViewportBase::getGlobalShadowIntensity(void) const
{
    return _sfGlobalShadowIntensity.getValue();
}

//! Set the value of the ShadowViewport::_sfGlobalShadowIntensity field.
inline
void ShadowViewportBase::setGlobalShadowIntensity(const Real32 &value)
{
    _sfGlobalShadowIntensity.setValue(value);
}


//! Get the value of the \a index element the ShadowViewport::_mfLightNodes field.
inline
NodePtr &ShadowViewportBase::getLightNodes(const UInt32 index)
{
    return _mfLightNodes[index];
}

//! Get the ShadowViewport::_mfLightNodes field.
inline
MFNodePtr &ShadowViewportBase::getLightNodes(void)
{
    return _mfLightNodes;
}

//! Get the ShadowViewport::_mfLightNodes field.
inline
const MFNodePtr &ShadowViewportBase::getLightNodes(void) const
{
    return _mfLightNodes;
}

//! Get the value of the \a index element the ShadowViewport::_mfExcludeNodes field.
inline
NodePtr &ShadowViewportBase::getExcludeNodes(const UInt32 index)
{
    return _mfExcludeNodes[index];
}

//! Get the ShadowViewport::_mfExcludeNodes field.
inline
MFNodePtr &ShadowViewportBase::getExcludeNodes(void)
{
    return _mfExcludeNodes;
}

//! Get the ShadowViewport::_mfExcludeNodes field.
inline
const MFNodePtr &ShadowViewportBase::getExcludeNodes(void) const
{
    return _mfExcludeNodes;
}

OSG_END_NAMESPACE

#define OSGSHADOWVIEWPORTBASE_INLINE_CVSID "@(#)$Id: OSGShadowViewportBase.inl,v 1.5 2006/05/03 16:20:32 yjung Exp $"

