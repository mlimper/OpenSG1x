/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000-2002 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class IntersectActor
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#ifndef _OSGINTERSECTACTORBASE_H_
#define _OSGINTERSECTACTORBASE_H_
#ifdef __sgi
#pragma once
#endif

#include <OSGConfig.h>

#include <OSGSystemDef.h>

#include <OSGActorBase.h>               // Parent
#include <OSGMultiFunctorStore.h>      // EnterStore
#include <OSGMultiFunctorStore.h>      // LeaveStore

#include <OSGBaseTypes.h>   // HitDistance type
#include <OSGNodePtr.h>   // HitObject type
#include <OSGBaseTypes.h>   // HitTriangleIndex type
#include <OSGVector.h>   // HitNormal type
#include <OSGBaseTypes.h>   // MaxDistance type
#include <OSGBaseTypes.h>   // ScaleFactor type
#include <OSGLine.h>   // Ray type

OSG_BEGIN_NAMESPACE

class OSG_SYSTEMLIB_DLLMAPPING IntersectActorBase : public ActorBase
{
    /*==========================  PUBLIC  =================================*/
  public:
    /*---------------------------------------------------------------------*/
    /*! \name    Types                                                     */
    /*! \{                                                                 */

    typedef ActorBase::ResultE ResultE;
    typedef ActorBase::Functor Functor;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name    Destructor                                                */
    /*! \{                                                                 */

    virtual ~IntersectActorBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name    Start/Stop                                                */
    /*! \{                                                                 */

    virtual ResultE start(void);
    virtual ResultE stop (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name    Apply                                                     */
    /*! \{                                                                 */

    virtual ResultE applyEnter(const NodePtr &pNode);
    virtual ResultE applyLeave(const NodePtr &pNode);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name    Enter Registration                                        */
    /*! \{                                                                 */

    static void regClassEnter         (const Functor            &refFunc,
                                       const FieldContainerType &refType );
           void regEnter              (const Functor            &refFunc,
                                       const FieldContainerType &refType );
    static void regDefaultClassEnter  (const Functor            &refFunc );
           void regDefaultEnter       (const Functor            &refFunc );

    static void unregClassEnter       (const FieldContainerType &refType );
           void unregEnter            (const FieldContainerType &refType );
    static void unregDefaultClassEnter(      void                        );
           void unregDefaultEnter     (      void                        );
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name    Leave Registration                                        */
    /*! \{                                                                 */

    static void regClassLeave         (const Functor            &refFunc,
                                       const FieldContainerType &refType );
           void regLeave              (const Functor            &refFunc,
                                       const FieldContainerType &refType );
    static void regDefaultClassLeave  (const Functor            &refFunc );
           void regDefaultLeave       (const Functor            &refFunc );

    static void unregClassLeave       (const FieldContainerType &refType );
           void unregLeave            (const FieldContainerType &refType );
    static void unregDefaultClassLeave(      void                        );
           void unregDefaultLeave     (      void                        );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name    Public State Access                                       */
    /*! \{                                                                 */

    inline const bool &getHit(void                                ) const;
    inline       void               setHit(const bool &stateVal);
    inline const Real32 &getHitDistance(void                                ) const;
    inline       void               setHitDistance(const Real32 &stateVal);
    inline const NodePtr &getHitObject(void                                ) const;
    inline       void               setHitObject(const NodePtr &stateVal);
    inline const Int32 &getHitTriangleIndex(void                                ) const;
    inline       void               setHitTriangleIndex(const Int32 &stateVal);
    inline const Vec3f &getHitNormal(void                                ) const;
    inline       void               setHitNormal(const Vec3f &stateVal);
    inline const Real32 &getMaxDistance(void                                ) const;
    inline       void               setMaxDistance(const Real32 &stateVal);
    inline const Real32 &getScaleFactor(void                                ) const;
    inline       void               setScaleFactor(const Real32 &stateVal);
    inline const Line &getRay(void                                ) const;
    inline       void               setRay(const Line &stateVal);

    /*! \}                                                                  */
    /*=========================  PROTECTED  ================================*/
  protected:
    /*----------------------------------------------------------------------*/
    /*! \name    Types                                                      */
    /*! \{                                                                  */

    class   IntersectActorBaseState;

    typedef IntersectActorBaseState     StateType;
    typedef MultiFunctorStore EnterStoreType;
    typedef MultiFunctorStore LeaveStoreType;

    /*! \}                                                                  */
    /*----------------------------------------------------------------------*/
    /*! \name    State Class                                                */
    /*! \{                                                                  */

    class OSG_SYSTEMLIB_DLLMAPPING IntersectActorBaseState : public ActorBase::StateType
    {
      public:
        inline   IntersectActorBaseState(void                                );
        inline   IntersectActorBaseState(const IntersectActorBaseState &source);

        virtual ~IntersectActorBaseState(void                                );

        virtual ActorBaseState *clone(MemoryHandle pMemHandle) const;

        virtual bool            empty(void                   ) const;
        virtual UInt32          size (void                   ) const;

        inline const Real32 &getScaleFactor(void) const;
        inline       Real32 &getScaleFactor(void);
        inline const Line &getRay(void) const;
        inline       Line &getRay(void);

      private:
        Real32 _stateScaleFactor;
        Line _stateRay;
    };

    /*! \}                                                                  */
    /*----------------------------------------------------------------------*/
    /*! \name    Constructor                                                */
    /*! \{                                                                  */

    IntersectActorBase(void);

    /*! \}                                                                  */
    /*----------------------------------------------------------------------*/
    /*! \name    Events                                                     */
    /*! \{                                                                  */

    virtual void attachEvent(NewAction *pAction, UInt32 uiActorId);
    virtual void detachEvent(NewAction *pAction, UInt32 uiActorId);

    /*! \}                                                                  */
    /*----------------------------------------------------------------------*/
    /*! \name    State Access                                               */
    /*! \{                                                                  */

    inline const IntersectActorBaseState *getCastStatePtr(void) const;
    inline       IntersectActorBaseState *getCastStatePtr(void);


    virtual void createState(void);
    virtual void deleteState(void);

    /*! \}                                                                  */
    /*===========================  PRIVATE  ================================*/
  private:
    typedef ActorBase Inherited;

    static EnterStoreType *_pClassEnterStore;
    static LeaveStoreType *_pClassLeaveStore;

    EnterStoreType         _instanceEnterStore;
    LeaveStoreType         _instanceLeaveStore;

    bool _stateHit;
    Real32 _stateHitDistance;
    NodePtr _stateHitObject;
    Int32 _stateHitTriangleIndex;
    Vec3f _stateHitNormal;
    Real32 _stateMaxDistance;
};

OSG_END_NAMESPACE

#include <OSGIntersectActorBase.inl>

#define OSGINTERSECTACTORBASE_HEADER_CVSID "@(#)$Id:"

#endif /* _OSGINTERSECTACTORBASE_H_ */
