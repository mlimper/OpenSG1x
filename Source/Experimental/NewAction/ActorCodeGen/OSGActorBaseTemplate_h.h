/* This is a template file for actorEdit.
 * To create it from sample source,  cut'n'paste the source and apply the following
 * substitutions:
 * s|\|\\|g 
 * s|"|\"|g 
 * s|^|"| 
 * s|$|",|
 */

char *ActorBaseTemplate_h[] = 
{
"/*---------------------------------------------------------------------------*\\",
" *                                OpenSG                                     * ",
" *                                                                           * ",
" *                                                                           * ",
" *           Copyright (C) 2000,2001,2002 by the OpenSG Forum                * ",
" *                                                                           * ",
" *                            www.opensg.org                                 * ",
" *                                                                           * ",
" *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          * ",
" *                                                                           * ",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                License                                    * ",
" *                                                                           * ",
" * This library is free software; you can redistribute it and/or modify it   * ",
" * under the terms of the GNU Library General Public License as published    * ",
" * by the Free Software Foundation, version 2.                               * ",
" *                                                                           * ",
" * This library is distributed in the hope that it will be useful, but       * ",
" * WITHOUT ANY WARRANTY; without even the implied warranty of                * ",
" * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         * ",
" * Library General Public License for more details.                          * ",
" *                                                                           * ",
" * You should have received a copy of the GNU Library General Public         * ",
" * License along with this library; if not, write to the Free Software       * ",
" * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 * ",
" *                                                                           * ",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                Changes                                    * ",
" *                                                                           * ",
" *                                                                           * ",
" *                                                                           * ",
" *                                                                           * ",
" *                                                                           * ",
" *                                                                           * ",
"\\*---------------------------------------------------------------------------*/",
"",
"#ifndef _OSG@!CLASSNAME!@BASE_H_",
"#define _OSG@!CLASSNAME!@BASE_H_",
"#ifdef __sgi",
"#pragma once",
"#endif",
"",
"#include <@!HeaderPrefix!@OSGConfig.h>",
"",
"@@if Library",
"@@if UseLocalIncludes",
"#include \"OSG@!Libname!@Def.h\"",
"@@else",
"#include <OSG@!Libname!@Def.h>",
"@@endif",
"@@endif",
"",
"@@if UseLocalIncludes",
"#include \"@!ParentHeaderPrefix!@@!ParentHeader!@\"               // Parent",
"#include \"@!HeaderPrefix!@OSG@!EnterStore!@FunctorStore.h\"      // EnterStore",
"#include \"@!HeaderPrefix!@OSG@!LeaveStore!@FunctorStore.h\"      // LeaveStore",
"@@else",
"#include <@!ParentHeaderPrefix!@@!ParentHeader!@>               // Parent",
"#include <@!HeaderPrefix!@OSG@!EnterStore!@FunctorStore.h>      // EnterStore",
"#include <@!HeaderPrefix!@OSG@!LeaveStore!@FunctorStore.h>      // LeaveStore",
"@@endif",
"",
"@@BeginStateLoop@@",
"@@if StateElemHasInclude",
"@@if UseLocalIncludes",
"#include \"@!HeaderPrefix!@@!StateElemHeader!@\"   // @!StateElemName!@ type",
"@@else",
"#include <@!HeaderPrefix!@@!StateElemHeader!@>   // @!StateElemName!@ type",
"@@endif",
"@@endif",
"@@EndStateLoop@@",
"",
"OSG_BEGIN_NAMESPACE",
"",
"@@if Library",
"class OSG_@!LIBNAME!@LIB_DLLMAPPING @!Classname!@Base : ",
"    public  @!ParentName!@,",
"    private @!EnterStore!@FunctorStore<EnterTag>,",
"    private @!LeaveStore!@FunctorStore<LeaveTag>",
"@@else",
"class @!Classname!@Base :",
"    public  @!ParentName!@,",
"    private @!EnterStore!@FunctorStore<EnterTag>,",
"    private @!LeaveStore!@FunctorStore<LeaveTag>",
"@@endif",
"{",
"    /*==========================  PUBLIC  =================================*/",
"  public:",
"    typedef @!ParentName!@     Inherited;",
"    typedef Inherited::Functor Functor;",
"",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                       Destructor                             */",
"    /*! \\{                                                                 */",
"",
"    virtual ~@!Classname!@Base(void);",
"",
"@@if EnterStore_EQ_Simple",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Enter Registration                        */",
"    /*! \\{                                                                 */",
"",
"    static void regClassEnter  (const Functor &refFunc);",
"           void regEnter       (const Functor &refFunc);",
"    ",
"    static void unregClassEnter(      void            );",
"           void unregEnter     (      void            );",
"@@endif",
"@@if EnterStore_EQ_Single",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Enter Registration                        */",
"    /*! \\{                                                                 */",
"",
"    static void regClassEnter         (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"           void regEnter              (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"    static void regDefaultClassEnter  (const Functor            &refFunc );",
"           void regDefaultEnter       (const Functor            &refFunc );",
"",
"    static void unregClassEnter       (const FieldContainerType &refType );",
"           void unregEnter            (const FieldContainerType &refType );",
"    static void unregDefaultClassEnter(void                              );",
"           void unregDefaultEnter     (void                              );",
"@@endif",
"@@if EnterStore_EQ_Multi",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Enter Registration                        */",
"    /*! \\{                                                                 */",
"",
"    static void regClassEnter         (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"           void regEnter              (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"    static void regDefaultClassEnter  (const Functor            &refFunc );",
"           void regDefaultEnter       (const Functor            &refFunc );",
"",
"    static void unregClassEnter       (const FieldContainerType &refType );",
"           void unregEnter            (const FieldContainerType &refType );",
"    static void unregDefaultClassEnter(void                              );",
"           void unregDefaultEnter     (void                              );",
"@@endif",
"@@if LeaveStore_EQ_Simple",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Leave Registration                        */",
"    /*! \\{                                                                 */",
"",
"    static void regClassLeave  (const Functor &refFunc);",
"           void regLeave       (const Functor &refFunc);",
"    ",
"    static void unregClassLeave(      void            );",
"           void unregLeave     (      void            );",
"@@endif",
"@@if LeaveStore_EQ_Single",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Leave Registration                        */",
"    /*! \\{                                                                 */",
"",
"    static void regClassLeave         (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"           void regLeave              (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"    static void regDefaultClassLeave  (const Functor            &refFunc );",
"           void regDefaultLeave       (const Functor            &refFunc );",
"",
"    static void unregClassLeave       (const FieldContainerType &refType );",
"           void unregLeave            (const FieldContainerType &refType );",
"    static void unregDefaultClassLeave(void                              );",
"           void unregDefaultLeave     (void                              );",
"@@endif",
"@@if LeaveStore_EQ_Multi",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Leave Registration                        */",
"    /*! \\{                                                                 */",
"",
"    static void regClassLeave         (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"           void regLeave              (const Functor            &refFunc,",
"                                       const FieldContainerType &refType );",
"    static void regDefaultClassLeave  (const Functor            &refFunc );",
"           void regDefaultLeave       (const Functor            &refFunc );",
"",
"    static void unregClassLeave       (const FieldContainerType &refType );",
"           void unregLeave            (const FieldContainerType &refType );",
"    static void unregDefaultClassLeave(void                              );",
"           void unregDefaultLeave     (void                              );",
"@@endif",
"",
"@@if !EnterStore_EQ_Empty",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                      Apply Enter                             */",
"    /*! \\{                                                                 */",
"",
"    virtual ResultE applyEnter(NodeCorePtr pNodeCore);",
"@@endif",
"",
"@@if !LeaveStore_EQ_Empty",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                      Apply Leave                             */",
"    /*! \\{                                                                 */",
"",
"    virtual ResultE applyLeave(NodeCorePtr pNodeCore);",
"@@endif",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Property Queries                          */",
"    /*! \\{                                                                 */",
"",
"    virtual bool hasEnterMethod (void                   ) const;",
"    virtual bool hasLeaveMethod (void                   ) const;",
"",
"    virtual bool hasOrderedState(void                   ) const;",
"",
"    virtual bool acceptsIterator(IteratorBase *pIterator) const;",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                  Public State Access                         */",
"    /*! \\{                                                                 */",
"",
"@@BeginStateLoop@@",
"@@if StateElemIsPublic",
"    inline const @!StateElemType!@ &get@!StateElemName!@(void) const;",
"    inline       void               set@!StateElemName!@(const @!StateElemType!@ &stateVal);",
"@@endif",
"@@EndStateLoop@@",
"",
"    /*! \\}                                                                  */",
"    /*=========================  PROTECTED  ================================*/",
"  protected:",
"    class @!Classname!@StateBase;",
"",
"    typedef @!Classname!@StateBase               StateType;",
"    typedef @!EnterStore!@FunctorStore<EnterTag> EnterStoreType;",
"    typedef @!LeaveStore!@FunctorStore<LeaveTag> LeaveStoreType;",
"",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    State Class                               */",
"    /*! \\{                                                                 */",
"",
"    class OSG_@!LIBNAME!@LIB_DLLMAPPING @!Classname!@StateBase : public Inherited::StateType",
"    {",
"      public:",
"        @!Classname!@StateBase(void                                );",
"        @!Classname!@StateBase(const @!Classname!@StateBase &source);",
"",
"        virtual ~@!Classname!@StateBase(void);",
"",
"        virtual ActorStateBase *clone(void);",
"        ",
"@@BeginStateLoop@@",
"@@if StateElemIsOrdered",
"        inline const @!StateElemType!@ &get@!StateElemName!@(void) const;",
"        inline       @!StateElemType!@ &get@!StateElemName!@(void);",
"@@endif",
"@@EndStateLoop@@",
"",
"@@if HasOrderedStateElems",
"        enum",
"        {",
"            bHasStateElems = 1",
"        };",
"@@else",
"        enum",
"        {",
"            bHasStateElems = Inherited::StateType::bHasStateElems",
"        };",
"@@endif",
"",
"      private:",
"@@BeginStateLoop@@",
"@@if StateElemIsOrdered",
"        @!StateElemType!@ _as@!StateElemName!@;",
"@@endif",
"@@EndStateLoop@@",
"    };",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"",
"    enum",
"    {",
"        bHasEnterMethod  = Inherited     ::bHasEnterMethod  |",
"                           EnterStoreType::bHasFunctors,",
"        bHasLeaveMethod  = Inherited     ::bHasLeaveMethod  |",
"                           LeaveStoreType::bHasFunctors,",
"        bHasOrderedState = Inherited     ::bHasOrderedState |",
"                           StateType     ::bHasStateElems",
"    };",
"",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Constructor                               */",
"    /*! \\{                                                                 */",
"    ",
"    @!Classname!@Base(void);",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    StatePtr Access                           */",
"    /*! \\{                                                                 */",
"",
"    inline const @!Classname!@StateBase *getCastStatePtr(void) const;",
"    inline       @!Classname!@StateBase *getCastStatePtr(void);",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                      Create State                            */",
"    /*! \\{                                                                 */",
"",
"    virtual void createState(void);",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                  Protected State Access                      */",
"    /*! \\{                                                                 */",
"",
"@@BeginStateLoop@@",
"@@if StateElemIsProtected",
"    inline const @!StateElemType!@ &get@!StateElemName!@(void) const;",
"    inline       void               set@!StateElemName!@(const @!StateElemType!@ &stateVal);",
"@@endif",
"@@EndStateLoop@@",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"",
"    static EnterStoreType *_pClassEnterStore;",
"    static LeaveStoreType *_pClassLeaveStore;",
"",
"@@BeginStateLoop@@",
"@@if !StateElemIsOrdered",
"    @!StateElemType!@ _as@!StateElemName!@;",
"@@endif",
"@@EndStateLoop@@",
"};",
"",
"OSG_END_NAMESPACE",
"",
"@@if UseLocalIncludes",
"#include \"OSG@!Classname!@Base.inl\"",
"@@else",
"#include <OSG@!Classname!@Base.inl>",
"@@endif",
"",
"#define OSG@!CLASSNAME!@BASE_HEADER_CVSID \"@(#)$Id:\"",
"",
"#endif /* _OSG@!CLASSNAME!@BASE_H_ */",
NULL
};
