/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class CGChunk
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGCGCHUNKBASE_H_
#define _OSGCGCHUNKBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OSGConfig.h>
#include <OSGContribDef.h>

#include <OSGBaseTypes.h>

#include <OSGStateChunk.h> // Parent

#include <OSGStringFields.h> // VertexProgram type
#include <OSGStringFields.h> // FragmentProgram type
#include <OSGStringFields.h> // ParamNames type
#include <OSGVec4fFields.h> // ParamValues type
#include <OSGUInt32Fields.h> // GLId type

#include <OSGCGChunkFields.h>

OSG_BEGIN_NAMESPACE

class CGChunk;
class BinaryDataHandler;

//! \brief CGChunk Base Class.

class OSG_CONTRIBLIB_DLLMAPPING CGChunkBase : public StateChunk
{
  private:

    typedef StateChunk    Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    typedef CGChunkPtr  Ptr;

    enum
    {
        VertexProgramFieldId   = Inherited::NextFieldId,
        FragmentProgramFieldId = VertexProgramFieldId   + 1,
        ParamNamesFieldId      = FragmentProgramFieldId + 1,
        ParamValuesFieldId     = ParamNamesFieldId      + 1,
        GLIdFieldId            = ParamValuesFieldId     + 1,
        NextFieldId            = GLIdFieldId            + 1
    };

    static const OSG::BitVector VertexProgramFieldMask;
    static const OSG::BitVector FragmentProgramFieldMask;
    static const OSG::BitVector ParamNamesFieldMask;
    static const OSG::BitVector ParamValuesFieldMask;
    static const OSG::BitVector GLIdFieldMask;


    static const OSG::BitVector MTInfluenceMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

           SFString            *getSFVertexProgram  (void);
           SFString            *getSFFragmentProgram(void);
           MFString            *getMFParamNames     (void);
           MFVec4f             *getMFParamValues    (void);
           SFUInt32            *getSFGLId           (void);

           std::string         &getVertexProgram  (void);
     const std::string         &getVertexProgram  (void) const;
           std::string         &getFragmentProgram(void);
     const std::string         &getFragmentProgram(void) const;
           UInt32              &getGLId           (void);
     const UInt32              &getGLId           (void) const;
           std::string         &getParamNames     (const UInt32 index);
           MFString            &getParamNames     (void);
     const MFString            &getParamNames     (void) const;
           Vec4f               &getParamValues    (const UInt32 index);
           MFVec4f             &getParamValues    (void);
     const MFVec4f             &getParamValues    (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

     void setVertexProgram  ( const std::string &value );
     void setFragmentProgram( const std::string &value );
     void setGLId           ( const UInt32 &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  CGChunkPtr      create          (void); 
    static  CGChunkPtr      createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFString            _sfVertexProgram;
    SFString            _sfFragmentProgram;
    MFString            _mfParamNames;
    MFVec4f             _mfParamValues;
    SFUInt32            _sfGLId;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    CGChunkBase(void);
    CGChunkBase(const CGChunkBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~CGChunkBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      CGChunkBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const CGChunkBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef CGChunkBase *CGChunkBaseP;

OSG_END_NAMESPACE

#define OSGCGCHUNKBASE_HEADER_CVSID "@(#)$Id: FCBaseTemplate_h.h,v 1.34 2003/10/29 08:43:55 vossg Exp $"

#endif /* _OSGCGCHUNKBASE_H_ */
