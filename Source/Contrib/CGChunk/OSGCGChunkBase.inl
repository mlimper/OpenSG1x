/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2002 by the OpenSG Forum                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class CGChunk!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &CGChunkBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 CGChunkBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline
CGChunkPtr CGChunkBase::create(void) 
{
    CGChunkPtr fc; 

    if(getClassType().getPrototype() != OSG::NullFC) 
    {
        fc = CGChunkPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline
CGChunkPtr CGChunkBase::createEmpty(void) 
{ 
    CGChunkPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

//! Get the CGChunk::_sfVertexProgram field.
inline
SFString *CGChunkBase::getSFVertexProgram(void)
{
    return &_sfVertexProgram;
}

//! Get the CGChunk::_sfFragmentProgram field.
inline
SFString *CGChunkBase::getSFFragmentProgram(void)
{
    return &_sfFragmentProgram;
}

//! Get the CGChunk::_sfActiveLightIndex field.
inline
SFUInt8 *CGChunkBase::getSFActiveLightIndex(void)
{
    return &_sfActiveLightIndex;
}

//! Get the CGChunk::_sfGLId field.
inline
SFUInt32 *CGChunkBase::getSFGLId(void)
{
    return &_sfGLId;
}


//! Get the value of the CGChunk::_sfVertexProgram field.
inline
std::string &CGChunkBase::getVertexProgram(void)
{
    return _sfVertexProgram.getValue();
}

//! Get the value of the CGChunk::_sfVertexProgram field.
inline
const std::string &CGChunkBase::getVertexProgram(void) const
{
    return _sfVertexProgram.getValue();
}

//! Set the value of the CGChunk::_sfVertexProgram field.
inline
void CGChunkBase::setVertexProgram(const std::string &value)
{
    _sfVertexProgram.setValue(value);
}

//! Get the value of the CGChunk::_sfFragmentProgram field.
inline
std::string &CGChunkBase::getFragmentProgram(void)
{
    return _sfFragmentProgram.getValue();
}

//! Get the value of the CGChunk::_sfFragmentProgram field.
inline
const std::string &CGChunkBase::getFragmentProgram(void) const
{
    return _sfFragmentProgram.getValue();
}

//! Set the value of the CGChunk::_sfFragmentProgram field.
inline
void CGChunkBase::setFragmentProgram(const std::string &value)
{
    _sfFragmentProgram.setValue(value);
}

//! Get the value of the CGChunk::_sfActiveLightIndex field.
inline
UInt8 &CGChunkBase::getActiveLightIndex(void)
{
    return _sfActiveLightIndex.getValue();
}

//! Get the value of the CGChunk::_sfActiveLightIndex field.
inline
const UInt8 &CGChunkBase::getActiveLightIndex(void) const
{
    return _sfActiveLightIndex.getValue();
}

//! Set the value of the CGChunk::_sfActiveLightIndex field.
inline
void CGChunkBase::setActiveLightIndex(const UInt8 &value)
{
    _sfActiveLightIndex.setValue(value);
}

//! Get the value of the CGChunk::_sfGLId field.
inline
UInt32 &CGChunkBase::getGLId(void)
{
    return _sfGLId.getValue();
}

//! Get the value of the CGChunk::_sfGLId field.
inline
const UInt32 &CGChunkBase::getGLId(void) const
{
    return _sfGLId.getValue();
}

//! Set the value of the CGChunk::_sfGLId field.
inline
void CGChunkBase::setGLId(const UInt32 &value)
{
    _sfGLId.setValue(value);
}


OSG_END_NAMESPACE

#define OSGCGCHUNKBASE_INLINE_CVSID "@(#)$Id: $"

