/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                     Copyright 2000,2001 by OpenSG Forum                   *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TextureChunk!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline OSG::FieldContainerType &TextureChunkBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline OSG::UInt32 TextureChunkBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline TextureChunkPtr TextureChunkBase::create(void) 
{
    TextureChunkPtr fc; 

    if(getClassType().getPrototype() != osg::NullFC) 
    {
        fc = TextureChunkPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline TextureChunkPtr TextureChunkBase::createEmpty(void) 
{ 
    TextureChunkPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

OSG_SYSTEMLIB_DLLMAPPING
SFImageP *TextureChunkBase::getSFImage(void)
{
	return &_sfImage;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFInternalFormat(void)
{
	return &_sfInternalFormat;
}

OSG_SYSTEMLIB_DLLMAPPING
SFBool *TextureChunkBase::getSFScale(void)
{
	return &_sfScale;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFFrame(void)
{
	return &_sfFrame;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFMinFilter(void)
{
	return &_sfMinFilter;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFMagFilter(void)
{
	return &_sfMagFilter;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFWrapS(void)
{
	return &_sfWrapS;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFWrapT(void)
{
	return &_sfWrapT;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFWrapR(void)
{
	return &_sfWrapR;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFEnvMode(void)
{
	return &_sfEnvMode;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFGenFuncS(void)
{
	return &_sfGenFuncS;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFGenFuncT(void)
{
	return &_sfGenFuncT;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFGenFuncR(void)
{
	return &_sfGenFuncR;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFGenFuncQ(void)
{
	return &_sfGenFuncQ;
}

OSG_SYSTEMLIB_DLLMAPPING
SFPlane *TextureChunkBase::getSFGenFuncSPlane(void)
{
	return &_sfGenFuncSPlane;
}

OSG_SYSTEMLIB_DLLMAPPING
SFPlane *TextureChunkBase::getSFGenFuncTPlane(void)
{
	return &_sfGenFuncTPlane;
}

OSG_SYSTEMLIB_DLLMAPPING
SFPlane *TextureChunkBase::getSFGenFuncRPlane(void)
{
	return &_sfGenFuncRPlane;
}

OSG_SYSTEMLIB_DLLMAPPING
SFPlane *TextureChunkBase::getSFGenFuncQPlane(void)
{
	return &_sfGenFuncQPlane;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *TextureChunkBase::getSFGLId(void)
{
	return &_sfGLId;
}


OSG_SYSTEMLIB_DLLMAPPING
ImageP &TextureChunkBase::getImage(void)
{
	return _sfImage.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const ImageP &TextureChunkBase::getImage(void) const
{
	return _sfImage.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setImage(const ImageP &value)
{
	_sfImage.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getInternalFormat(void)
{
	return _sfInternalFormat.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getInternalFormat(void) const
{
	return _sfInternalFormat.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setInternalFormat(const UInt32 &value)
{
	_sfInternalFormat.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Bool &TextureChunkBase::getScale(void)
{
	return _sfScale.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Bool &TextureChunkBase::getScale(void) const
{
	return _sfScale.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setScale(const Bool &value)
{
	_sfScale.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getFrame(void)
{
	return _sfFrame.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getFrame(void) const
{
	return _sfFrame.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setFrame(const UInt32 &value)
{
	_sfFrame.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getMinFilter(void)
{
	return _sfMinFilter.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getMinFilter(void) const
{
	return _sfMinFilter.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setMinFilter(const UInt32 &value)
{
	_sfMinFilter.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getMagFilter(void)
{
	return _sfMagFilter.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getMagFilter(void) const
{
	return _sfMagFilter.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setMagFilter(const UInt32 &value)
{
	_sfMagFilter.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getWrapS(void)
{
	return _sfWrapS.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getWrapS(void) const
{
	return _sfWrapS.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setWrapS(const UInt32 &value)
{
	_sfWrapS.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getWrapT(void)
{
	return _sfWrapT.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getWrapT(void) const
{
	return _sfWrapT.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setWrapT(const UInt32 &value)
{
	_sfWrapT.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getWrapR(void)
{
	return _sfWrapR.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getWrapR(void) const
{
	return _sfWrapR.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setWrapR(const UInt32 &value)
{
	_sfWrapR.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getEnvMode(void)
{
	return _sfEnvMode.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getEnvMode(void) const
{
	return _sfEnvMode.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setEnvMode(const UInt32 &value)
{
	_sfEnvMode.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getGenFuncS(void)
{
	return _sfGenFuncS.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getGenFuncS(void) const
{
	return _sfGenFuncS.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncS(const UInt32 &value)
{
	_sfGenFuncS.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getGenFuncT(void)
{
	return _sfGenFuncT.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getGenFuncT(void) const
{
	return _sfGenFuncT.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncT(const UInt32 &value)
{
	_sfGenFuncT.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getGenFuncR(void)
{
	return _sfGenFuncR.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getGenFuncR(void) const
{
	return _sfGenFuncR.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncR(const UInt32 &value)
{
	_sfGenFuncR.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getGenFuncQ(void)
{
	return _sfGenFuncQ.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getGenFuncQ(void) const
{
	return _sfGenFuncQ.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncQ(const UInt32 &value)
{
	_sfGenFuncQ.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Plane &TextureChunkBase::getGenFuncSPlane(void)
{
	return _sfGenFuncSPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Plane &TextureChunkBase::getGenFuncSPlane(void) const
{
	return _sfGenFuncSPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncSPlane(const Plane &value)
{
	_sfGenFuncSPlane.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Plane &TextureChunkBase::getGenFuncTPlane(void)
{
	return _sfGenFuncTPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Plane &TextureChunkBase::getGenFuncTPlane(void) const
{
	return _sfGenFuncTPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncTPlane(const Plane &value)
{
	_sfGenFuncTPlane.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Plane &TextureChunkBase::getGenFuncRPlane(void)
{
	return _sfGenFuncRPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Plane &TextureChunkBase::getGenFuncRPlane(void) const
{
	return _sfGenFuncRPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncRPlane(const Plane &value)
{
	_sfGenFuncRPlane.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Plane &TextureChunkBase::getGenFuncQPlane(void)
{
	return _sfGenFuncQPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Plane &TextureChunkBase::getGenFuncQPlane(void) const
{
	return _sfGenFuncQPlane.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGenFuncQPlane(const Plane &value)
{
	_sfGenFuncQPlane.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &TextureChunkBase::getGLId(void)
{
	return _sfGLId.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &TextureChunkBase::getGLId(void) const
{
	return _sfGLId.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void TextureChunkBase::setGLId(const UInt32 &value)
{
	_sfGLId.setValue(value);
}



OSG_END_NAMESPACE

#define OSGTEXTURECHUNKBASE_INLINE_CVSID "@(#)$Id: OSGTextureChunkBase.inl,v 1.8 2001/09/17 14:15:07 vossg Exp $"

