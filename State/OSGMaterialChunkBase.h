/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class MaterialChunk
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGMATERIALCHUNKBASE_H_
#define _OSGMATERIALCHUNKBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OSGConfig.h>
#include <OSGSystemDef.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>

#include <OSGStateChunk.h> // Parent

#include <OSGColor4fFields.h> // Diffuse type
#include <OSGColor4fFields.h> // Ambient type
#include <OSGColor4fFields.h> // Specular type
#include <OSGColor4fFields.h> // Emission type
#include <OSGReal32Fields.h> // Shininess type
#include <OSGBoolFields.h> // Lit type
#include <OSGUInt32Fields.h> // ColorMaterial type

#include <OSGMaterialChunkFields.h>

OSG_BEGIN_NAMESPACE

class MaterialChunk;
class BinaryDataHandler;

/*! \brief MaterialChunk Base Class. */

class OSG_SYSTEMLIB_DLLMAPPING MaterialChunkBase : public StateChunk
{
  private:

    typedef StateChunk Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    enum
    {
        DiffuseFieldId       = Inherited::NextFieldId,
        AmbientFieldId       = DiffuseFieldId       + 1,
        SpecularFieldId      = AmbientFieldId       + 1,
        EmissionFieldId      = SpecularFieldId      + 1,
        ShininessFieldId     = EmissionFieldId      + 1,
        LitFieldId           = ShininessFieldId     + 1,
        ColorMaterialFieldId = LitFieldId           + 1,
        NextFieldId          = ColorMaterialFieldId + 1
    };

    static const osg::BitVector DiffuseFieldMask;
    static const osg::BitVector AmbientFieldMask;
    static const osg::BitVector SpecularFieldMask;
    static const osg::BitVector EmissionFieldMask;
    static const osg::BitVector ShininessFieldMask;
    static const osg::BitVector LitFieldMask;
    static const osg::BitVector ColorMaterialFieldMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static const  char               *getClassname(void);

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Get                                    */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

    inline       SFColor4f           *getSFDiffuse        (void);
    inline       SFColor4f           *getSFAmbient        (void);
    inline       SFColor4f           *getSFSpecular       (void);
    inline       SFColor4f           *getSFEmission       (void);
    inline       SFReal32            *getSFShininess      (void);
    inline       SFBool              *getSFLit            (void);
    inline       SFUInt32            *getSFColorMaterial  (void);

    inline       Color4f             &getDiffuse        (void);
    inline const Color4f             &getDiffuse        (void) const;
    inline       Color4f             &getAmbient        (void);
    inline const Color4f             &getAmbient        (void) const;
    inline       Color4f             &getSpecular       (void);
    inline const Color4f             &getSpecular       (void) const;
    inline       Color4f             &getEmission       (void);
    inline const Color4f             &getEmission       (void) const;
    inline       Real32              &getShininess      (void);
    inline const Real32              &getShininess      (void) const;
    inline       Bool                &getLit            (void);
    inline const Bool                &getLit            (void) const;
    inline       UInt32              &getColorMaterial  (void);
    inline const UInt32              &getColorMaterial  (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

    inline void setDiffuse        ( const Color4f &value );
    inline void setAmbient        ( const Color4f &value );
    inline void setSpecular       ( const Color4f &value );
    inline void setEmission       ( const Color4f &value );
    inline void setShininess      ( const Real32 &value );
    inline void setLit            ( const Bool &value );
    inline void setColorMaterial  ( const UInt32 &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void         executeSync(      FieldContainer &other,
                                     const BitVector      &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32       getBinSize (const BitVector    &whichField);
    virtual void copyToBin  (      BinaryDataHandler &pMem,
                             const BitVector    &whichField);
    virtual void copyFromBin(      BinaryDataHandler &pMem,
                             const BitVector    &whichField);


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  MaterialChunkPtr    create          (void); 
    static  MaterialChunkPtr    createEmpty     (void); 

    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerPtr     shallowCopy     (void) const; 

    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFColor4f        	_sfDiffuse;
    SFColor4f        	_sfAmbient;
    SFColor4f        	_sfSpecular;
    SFColor4f        	_sfEmission;
    SFReal32         	_sfShininess;
    SFBool           	_sfLit;
    SFUInt32         	_sfColorMaterial;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    MaterialChunkBase(void);
    MaterialChunkBase(const MaterialChunkBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~MaterialChunkBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      MaterialChunkBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)

    void operator =(const MaterialChunk &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef MaterialChunkBase *MaterialChunkBaseP;

OSG_END_NAMESPACE

#define OSGMATERIALCHUNKBASE_HEADER_CVSID "@(#)$Id: OSGMaterialChunkBase.h,v 1.14 2001/09/19 14:36:41 mroth Exp $"

#endif /* _OSGMATERIALCHUNKBASE_H_ */
