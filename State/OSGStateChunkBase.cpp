/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class StateChunk!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#define OSG_COMPILESYSTEMLIB
#define OSG_COMPILESTATECHUNKINST

#include <stdlib.h>
#include <stdio.h>

#include <OSGConfig.h>

#include "OSGStateChunkBase.h"
#include "OSGStateChunk.h"


OSG_BEGIN_NAMESPACE

DataType FieldDataTraits<StateChunkPtr>::_type("StateChunkPtr", true);

#if defined(__sgi)

#pragma instantiate SField<StateChunkPtr>::_fieldType
#pragma instantiate MField<StateChunkPtr>::_fieldType

#else

OSG_DLLEXPORT_DEF1(SField, StateChunkPtr, OSG_SYSTEMLIB_DLLTMPLMAPPING)
OSG_DLLEXPORT_DEF1(MField, StateChunkPtr, OSG_SYSTEMLIB_DLLTMPLMAPPING)

#endif

OSG_END_NAMESPACE

OSG_USING_NAMESPACE


char StateChunkBase::cvsid[] = "@(#)$Id: OSGStateChunkBase.cpp,v 1.10 2001/09/13 16:21:03 dirk Exp $";

//! StateChunk type

FieldContainerType StateChunkBase::_type(
    "StateChunk",
    "FieldContainer",
    NULL,
    NULL, 
    StateChunk::initMethod,
    NULL,
    0);

//OSG_FIELD_CONTAINER_DEF(StateChunkBase, StateChunkPtr)

/*------------------------------ get -----------------------------------*/

static const char *getClassname(void)
{
    return "StateChunk"; 
}

FieldContainerType &StateChunkBase::getType(void) 
{
    return _type; 
} 

const FieldContainerType &StateChunkBase::getType(void) const 
{
    return _type;
} 
/*! \}                                                                 */

UInt32 StateChunkBase::getContainerSize(void) const 
{ 
    return sizeof(StateChunkBase); 
}


void StateChunkBase::executeSync(      FieldContainer &other,
                                    const BitVector      &whichField)
{
    this->executeSyncImpl((StateChunkBase *) &other, whichField);
}

/*------------------------- constructors ----------------------------------*/

//! Constructor

StateChunkBase::StateChunkBase(void) :
	Inherited() 
{
}

//! Copy Constructor

StateChunkBase::StateChunkBase(const StateChunkBase &source) :
	Inherited                 (source)
{
}

/*-------------------------- destructors ----------------------------------*/

//! Destructor

StateChunkBase::~StateChunkBase(void)
{
}

/*------------------------------ access -----------------------------------*/

UInt32 StateChunkBase::getBinSize(const BitVector &whichField)
{
    UInt32 returnValue = Inherited::getBinSize(whichField);


    return returnValue;
}

MemoryHandle StateChunkBase::copyToBin(      MemoryHandle  pMem,
                                          const BitVector    &whichField)
{
    pMem = Inherited::copyToBin(pMem, whichField);


    return pMem;
}

MemoryHandle StateChunkBase::copyFromBin(      MemoryHandle  pMem,
                                            const BitVector    &whichField)
{
    pMem = Inherited::copyFromBin(pMem, whichField);


    return pMem;
}

void StateChunkBase::executeSyncImpl(      StateChunkBase *pOther,
                                        const BitVector         &whichField)
{

    Inherited::executeSyncImpl(pOther, whichField);


}

