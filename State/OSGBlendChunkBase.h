/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class BlendChunk
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGBLENDCHUNKBASE_H_
#define _OSGBLENDCHUNKBASE_H_
#ifdef __sgi
#pragma once
#endif

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------

#include <OSGConfig.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>
#include <OSGSystemDef.h>
#include <OSGStateChunk.h>
#include <OSGUInt32Fields.h>	// SrcFactor type
#include <OSGUInt32Fields.h>	// DestFactor type
#include <OSGColor4fFields.h>	// Color type
#include <OSGUInt32Fields.h>	// GLId type

#include <OSGBlendChunkFields.h>

OSG_BEGIN_NAMESPACE

//---------------------------------------------------------------------------
//  Forward References
//---------------------------------------------------------------------------

class BlendChunk;

//---------------------------------------------------------------------------
//   Types
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//  Class
//---------------------------------------------------------------------------

/*! BlendChunk Base Class. */

class OSG_SYSTEMLIB_DLLMAPPING BlendChunkBase : public StateChunk
{
  private:

    typedef StateChunk Inherited;

  public:

    //-----------------------------------------------------------------------
    //   constants                                                           
    //-----------------------------------------------------------------------
    
    enum
    {
        SrcFactorFieldId = Inherited::NextFieldId,
        DestFactorFieldId = SrcFactorFieldId + 1,
        ColorFieldId = DestFactorFieldId + 1,
        GLIdFieldId = ColorFieldId + 1
    };

    static const osg::BitVector SrcFactorFieldMask;
    static const osg::BitVector DestFactorFieldMask;
    static const osg::BitVector ColorFieldMask;
    static const osg::BitVector GLIdFieldMask;

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    static const char *getClassname(void) { return "BlendChunkBase"; };

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    /*-------------- general fieldcontainer declaration --------------------*/

    virtual       OSG::FieldContainerType &getType(void); 
    virtual const OSG::FieldContainerType &getType(void) const; 
    
    static OSG::FieldContainerType &getClassType  (void); 
    static OSG::UInt32              getClassTypeId(void); 
    static BlendChunkPtr         create        (void); 
    static BlendChunkPtr         createEmpty   (void); 

    virtual OSG::FieldContainerPtr shallowCopy(void) const; 
    virtual OSG::UInt32            getSize    (void) const;

    virtual void                   executeSync(FieldContainer &other,
                                               BitVector       whichField);
    /*--------------------------- access fields ----------------------------*/

    //! Return the fields.

    inline SFUInt32	*getSFSrcFactor(void);
    inline SFUInt32	*getSFDestFactor(void);
    inline SFColor4f	*getSFColor(void);
    inline SFUInt32	*getSFGLId(void);

    /*----------------------------- access ----------------------------------*/

    //!@{ Return the fields' values.

    inline       UInt32	&getSrcFactor(void);
    inline const UInt32	&getSrcFactor(void) const;
    inline       void	             setSrcFactor( UInt32 value );
    inline       UInt32	&getDestFactor(void);
    inline const UInt32	&getDestFactor(void) const;
    inline       void	             setDestFactor( UInt32 value );
    inline       Color4f	&getColor(void);
    inline const Color4f	&getColor(void) const;
    inline       void	             setColor( Color4f value );
    inline       UInt32	&getGLId(void);
    inline const UInt32	&getGLId(void) const;
    inline       void	             setGLId( UInt32 value );


    //!@}

    /*-------------------------- transformation ----------------------------*/

    /*------------------------------ volume -------------------------------*/

    /*------------------------------ dump -----------------------------------*/

  protected:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //! The fields storing the data.

    /*! The incoming pixel is multiplied by the source factor. Legal values are directly 	taken from the glBlendFunc() manpage.
     */
    SFUInt32	_sfSrcFactor;
    /*! The frame buffer pixel is multiplied by the destination factor. Legal values are  	directly taken from the glBlendFunc() manpage.
     */
    SFUInt32	_sfDestFactor;
    /*! This is the constant color used by blend modes *_CONSTANT_*.
     */
    SFColor4f	_sfColor;
    /*! 
     */
    SFUInt32	_sfGLId;

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    BlendChunkBase(void);
    BlendChunkBase(const BlendChunkBase &source);
    virtual ~BlendChunkBase(void); 
    

    void executeSyncImpl(BlendChunkBase *pOther,
                         BitVector          whichField);

  private:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   friend classes                                                      
    //-----------------------------------------------------------------------

    friend class FieldContainer;

    //-----------------------------------------------------------------------
    //   friend functions                                                    
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    static char cvsid[];

    static FieldDescription   _desc[];

    static FieldContainerType _type;


    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------
    

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    // prohibit default functions (move to 'public' if you need one)

    void operator =(const BlendChunk &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


/** \brief class pointer
 */
typedef BlendChunkBase *BlendChunkBaseP;

OSG_END_NAMESPACE

#endif /* _OSGBLENDCHUNKBASE_H_ */
