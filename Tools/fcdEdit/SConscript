# fcdCompile and fcdEdit

import os.path

Import('*')

sources = Split("""
    FieldContainer.cpp
    Field.cpp
    main.cpp
    ParseComandLine.cpp
""")

def custom(env):
    env['CXXFILESUFFIX'] = '.cpp'
    env['QT_HPREFIX'] = 'uic_'
    env.Append(CPPPATH = ['$OSG_OBJDIR'])
    env['OSG_PROGDIR'] = os.path.join('..', 'fcdEdit')

if tc.is_win32():
    dep_LIBS = ['OSGWindowWIN32']
else:
    dep_LIBS = ['OSGWindowX']


BuildProgram(tc, 'fcdCompile', sources, tools=[],
             updates=[custom, OpenSGLibrary(['OSGBase'])],
             CPPPATH=[Dir('.'), Dir('$OSG_OBJDIR'), env['PREFIX'].Dir('include')],
             CPPDEFINES=['FCD_TERM', 'OSG_BUILD_DLL'])

#BuildProgram(tc, 'fcdEdit', sources + ['FieldContainerViewCtl.cpp', 'FieldContainerView.ui'], tools=['qt'],
#             updates=[custom, OpenSGLibrary(['OSGWindowQT', 'OSGSystem', 'OSGBase'] + dep_LIBS)],
#             CPPPATH=[Dir('.'), Dir('$OSG_OBJDIR'), env['PREFIX'].Dir('include')],
#             CPPDEFINES=['OSG_WITH_QT', 'OSG_BUILD_DLL'])
