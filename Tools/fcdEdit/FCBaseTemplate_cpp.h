/* This is a template file for fcdEdit.
 * To create it from sample source,  cut'n'paste the source and apply the following
 * substitutions:
 * s|\|\\|g 
 * s|"|\"|g 
 * s|^|"| 
 * s|$|",|
 */

char *FCBaseTemplate_cpp[]={
"/*---------------------------------------------------------------------------*\\",
" *                                OpenSG                                     *",
" *                                                                           *",
" *                                                                           *",
" *             Copyright (C) 2000,2001 by the OpenSG Forum                   *",
" *                                                                           *",
" *                            www.opensg.org                                 *",
" *                                                                           *",
" *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                License                                    *",
" *                                                                           *",
" * This library is free software; you can redistribute it and/or modify it   *",
" * under the terms of the GNU Library General Public License as published    *",
" * by the Free Software Foundation, version 2.                               *",
" *                                                                           *",
" * This library is distributed in the hope that it will be useful, but       *",
" * WITHOUT ANY WARRANTY; without even the implied warranty of                *",
" * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *",
" * Library General Public License for more details.                          *",
" *                                                                           *",
" * You should have received a copy of the GNU Library General Public         *",
" * License along with this library; if not, write to the Free Software       *",
" * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                Changes                                    *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"",
"/*****************************************************************************\\",
" *****************************************************************************",
" **                                                                         **",
" **                  This file is automatically generated.                  **",
" **                                                                         **",
" **          Any changes made to this file WILL be lost when it is          **",
" **           regenerated, which can become necessary at any time.          **",
" **                                                                         **",
" **     Do not change this file, changes should be done in the derived      **",
" **     class @!Classname!@!",
" **                                                                         **",
" *****************************************************************************",
"\\*****************************************************************************/",
"",
"//---------------------------------------------------------------------------",
"//  Includes",
"//---------------------------------------------------------------------------",
"",
"",
"#define OSG_COMPILE@!LIBNAME!@LIB",
"#define OSG_COMPILE@!CLASSNAME!@INST",
"",
"#include <stdlib.h>",
"#include <stdio.h>",
"",
"#include <@!HeaderPrefix!@OSGConfig.h>",
"",
"#include \"OSG@!Classname!@Base.h\"",
"#include \"OSG@!Classname!@.h\"",
"",
"@@BeginFieldLoop@@",
"@@if hasDefaultHeader", 
"#include @!FieldDefaultHeader!@	// @!Fieldname!@ default header",
"@@endif", 
"@@EndFieldLoop@@",
"",
"OSG_USING_NAMESPACE",
"",
"/***************************************************************************\\",
" *                               Types                                     *",
"\\***************************************************************************/",
"",
"@@if Pointerfield",
"OSG_BEGIN_NAMESPACE",
"",
"#if defined(__sgi)",
"",
"@@if SFPointerfield",
"#pragma instantiate SField<@!Classname!@Ptr>::_fieldType",
"@@endif",
"@@if MFPointerfield",
"#pragma instantiate MField<@!Classname!@Ptr>::_fieldType",
"@@endif",
"",
"#else",
"",
"@@if SFPointerfield",
"OSG_DLLEXPORT_DEF1(SField, @!Classname!@Ptr, OSG_@!LIBNAME!@LIB_DLLTMPLMAPPING)",
"@@endif",
"@@if MFPointerfield",
"OSG_DLLEXPORT_DEF1(MField, @!Classname!@Ptr, OSG_@!LIBNAME!@LIB_DLLTMPLMAPPING)",
"@@endif",
"",
"#endif",
"",
"OSG_END_NAMESPACE",
"@@endif",
"",
"/***************************************************************************\\",
" *                           Class variables                               *",
"\\***************************************************************************/",
"",
"@@if hasFields", 
"@@BeginFieldLoop@@",
"const OSG::BitVector	@!Classname!@Base::@!Fieldname!@FieldMask = ",
"    (1 << @!Classname!@Base::@!Fieldname!@FieldId);",
"",
"@@EndFieldLoop@@",
//"",
//"const OSG::UInt32    	@!Classname!@Base::NextFieldId; ",
//"const OSG::BitVector 	@!Classname!@Base::NextFieldMask;",
"",
"@@endif", 
"",
"char @!Classname!@Base::cvsid[] = \"@(#)$Id: FCBaseTemplate_cpp.h,v 1.11 2001/07/18 01:39:39 vossg Exp $\";",
"",
"@@if hasFields", 
"/** \\brief Group field description",
" */",
"",
"FieldDescription *@!Classname!@Base::_desc[] = ",
"{",
"@@BeginFieldLoop@@",
"    new FieldDescription(@!CARDINALITY!@@!Fieldtype!@::getClassType(), ",
"                     \"@!fieldnameDesc!@\", ",
"                     @!Fieldname!@FieldId, @!Fieldname!@FieldMask,",
"                     @!fieldvisibility!@,",
"                     (FieldAccessMethod) &@!Classname!@Base::get"
							"@!CARDINALITY!@@!Fieldname!@)@!FieldSeparator!@",
"@@EndFieldLoop@@",
"};",
"",
"@@endif", 
"/** \\brief @!Classname!@ type",
" */",
"",
"FieldContainerType @!Classname!@Base::_type(",
"    \"@!Classname!@\",",
"    \"@!Parent!@\",",
"    NULL,",
"@@if abstract", 
"    NULL, ", 
"@@else", 
"    (PrototypeCreateF) &@!Classname!@Base::createEmpty,",
"@@endif", 
"    @!Classname!@::initMethod,",
"@@if hasFields", 
"    _desc,",
"    sizeof(_desc));",
"@@else", 
"    NULL,", 
"    0);", 
"@@endif", 
"",
"",
"/***************************************************************************\\",
" *                           Class methods                                 *",
"\\***************************************************************************/",
"",
"/*-------------------------------------------------------------------------*\\",
" -  public                                                                 -",
"\\*-------------------------------------------------------------------------*/",
"",
"/*-------------------------------------------------------------------------*\\",
" -  protected                                                              -",
"\\*-------------------------------------------------------------------------*/",
"",
"/*-------------------------------------------------------------------------*\\",
" -  private                                                                -",
"\\*-------------------------------------------------------------------------*/",
"",
"/***************************************************************************\\",
" *                           Instance methods                              *",
"\\***************************************************************************/",
"",
"/*-------------------------------------------------------------------------*\\",
" -  public                                                                 -",
"\\*-------------------------------------------------------------------------*/",
"",
"//OSG_FIELD_CONTAINER_DEF(@!Classname!@Base, @!Classname!@Ptr)",
"",
"FieldContainerType &@!Classname!@Base::getType(void) ",
"{",
"    return _type; ",
"} ",
"",
"const FieldContainerType &@!Classname!@Base::getType(void) const ",
"{",
"    return _type;",
"} ",
"",
"@@if !Abstract",
"FieldContainerPtr @!Classname!@Base::shallowCopy(void) const ",
"{ ",
"    @!Classname!@Ptr returnValue; ",
"",
"    newPtr(returnValue, dynamic_cast<const @!Classname!@ *>(this)); ",
"",
"    return returnValue; ",
"}",
"",
"@@endif",
"UInt32 @!Classname!@Base::getSize(void) const ",
"{ ",
"    return sizeof(@!Classname!@Base); ",
"}",
"",
"",
"void @!Classname!@Base::executeSync(      FieldContainer &other,",
"                                    const BitVector      &whichField)",
"{",
"    this->executeSyncImpl((@!Classname!@Base *) &other, whichField);", 
"}",
"",
"/*------------- constructors & destructors --------------------------------*/",
"",
"/** \\brief Constructor",
" */",
"",
"@!Classname!@Base::@!Classname!@Base(void) :",
"@@BeginFieldLoop@@",
"	_@!fieldname!@	(@!FieldTypedDefault!@), ",
"@@EndFieldLoop@@",
"	Inherited() ",
"{",
"}",
"",
"/** \\brief Copy Constructor",
" */",
"",
"@!Classname!@Base::@!Classname!@Base(const @!Classname!@Base &source) :",
"@@BeginFieldLoop@@",
"	_@!fieldname!@		(source._@!fieldname!@), ",
"@@EndFieldLoop@@",
"	Inherited        (source)",
"{",
"}",
"",
"/** \\brief Destructor",
" */",
"",
"@!Classname!@Base::~@!Classname!@Base(void)",
"{",
"}",
"",
"/*------------------------------ access -----------------------------------*/",
"",
"UInt32 @!Classname!@Base::getBinSize(const BitVector &whichField)",
"{",
"    UInt32 returnValue = Inherited::getBinSize(whichField);",
"",
"@@BeginFieldLoop@@",
"    if(FieldBits::NoField != (@!Fieldname!@FieldMask & whichField))",
"    {",
"        returnValue += _@!fieldname!@.getBinSize();",
"    }",
"",
"@@EndFieldLoop@@",
"",
"    return returnValue;",
"}",
"",
"MemoryHandle @!Classname!@Base::copyToBin(      MemoryHandle  pMem,",
"                                          const BitVector    &whichField)",
"{",
"    pMem = Inherited::copyToBin(pMem, whichField);",
"",
"@@BeginFieldLoop@@",
"    if(FieldBits::NoField != (@!Fieldname!@FieldMask & whichField))",
"    {",
"        pMem = _@!fieldname!@.copyToBin(pMem);",
"    }",
"",
"@@EndFieldLoop@@",
"",
"    return pMem;",
"}",
"",
"MemoryHandle @!Classname!@Base::copyFromBin(      MemoryHandle  pMem,",
"                                            const BitVector    &whichField)",
"{",
"    pMem = Inherited::copyFromBin(pMem, whichField);",
"",
"@@BeginFieldLoop@@",
"    if(FieldBits::NoField != (@!Fieldname!@FieldMask & whichField))",
"    {",
"        pMem = _@!fieldname!@.copyFromBin(pMem);",
"    }",
"",
"@@EndFieldLoop@@",
"",
"    return pMem;",
"}",
"",
"/*------------------------------- dump ----------------------------------*/",
"",
"/*-------------------------------------------------------------------------*\\",
" -  protected                                                              -",
"\\*-------------------------------------------------------------------------*/",
"",
"",
"void @!Classname!@Base::executeSyncImpl(      @!Classname!@Base *pOther,",
"                                        const BitVector         &whichField)",
"{",
"",
"    Inherited::executeSyncImpl(pOther, whichField);",
"",
"@@BeginFieldLoop@@",
"    if(FieldBits::NoField != (@!Fieldname!@FieldMask & whichField))",
"    {",
"        _@!fieldname!@.syncWith(pOther->_@!fieldname!@);",
"    }",
"",
"@@EndFieldLoop@@",
"",
"}",
"",
"/*-------------------------------------------------------------------------*\\",
" -  private                                                                -",
"\\*-------------------------------------------------------------------------*/",
"",
NULL };
