/* This is a template file for fcdEdit.
 * To create it from sample source,  cut'n'paste the source and apply the following
 * substitutions:
 * s|\|\\|g 
 * s|"|\"|g 
 * s|^|"| 
 * s|$|",|
 */

char *FCBaseTemplate_h[]={
"/*---------------------------------------------------------------------------*\\",
" *                                OpenSG                                     *",
" *                                                                           *",
" *                                                                           *",
" *             Copyright (C) 2000,2001 by the OpenSG Forum                   *",
" *                                                                           *",
" *                            www.opensg.org                                 *",
" *                                                                           *",
" *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                License                                    *",
" *                                                                           *",
" * This library is free software; you can redistribute it and/or modify it   *",
" * under the terms of the GNU Library General Public License as published    *",
" * by the Free Software Foundation, version 2.                               *",
" *                                                                           *",
" * This library is distributed in the hope that it will be useful, but       *",
" * WITHOUT ANY WARRANTY; without even the implied warranty of                *",
" * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *",
" * Library General Public License for more details.                          *",
" *                                                                           *",
" * You should have received a copy of the GNU Library General Public         *",
" * License along with this library; if not, write to the Free Software       *",
" * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"/*---------------------------------------------------------------------------*\\",
" *                                Changes                                    *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
" *                                                                           *",
"\\*---------------------------------------------------------------------------*/",
"",
"/*****************************************************************************\\",
" *****************************************************************************",
" **                                                                         **",
" **                  This file is automatically generated.                  **",
" **                                                                         **",
" **          Any changes made to this file WILL be lost when it is          **",
" **           regenerated, which can become necessary at any time.          **",
" **                                                                         **",
" **     Do not change this file, changes should be done in the derived      **",
" **     class @!Classname!@",
" **                                                                         **",
" *****************************************************************************",
"\\*****************************************************************************/",
"", 
"",
"#ifndef _OSG@!CLASSNAME!@BASE_H_",
"#define _OSG@!CLASSNAME!@BASE_H_",
"#ifdef __sgi",
"#pragma once",
"#endif",
"",
"",
"#include <@!HeaderPrefix!@OSGConfig.h>",
"#include <OSG@!Libname!@Def.h>",
"",
"#include <@!HeaderPrefix!@OSGBaseTypes.h>",
"#include <@!HeaderPrefix!@OSGFieldDescription.h>",
"#include <@!HeaderPrefix!@OSGFieldContainer.h>",
"",
"#include <@!ParentHeaderPrefix!@OSG@!Parent!@.h> // Parent",
"",
"@@if !Decorator",
"@@BeginFieldLoop@@",
"#include <@!FieldtypeInclude!@> // @!Fieldname!@ type",
"@@EndFieldLoop@@",
"@@else",
"#include <@!ParentHeaderPrefix!@OSG@!Parent!@Fields.h> // Decoratee type",
"@@endif",
"",
"#include <OSG@!Classname!@Fields.h>",
"", 
"OSG_BEGIN_NAMESPACE",
"",
"class @!Classname!@;",
"class BinaryDataHandler;",
"",
"//! \\brief @!Classname!@ Base Class.",
"",
"class OSG_@!LIBNAME!@LIB_DLLMAPPING @!Classname!@Base : public @!Parent!@",
"{",
"  private:",
"",
"    typedef @!Parent!@ Inherited;",
"",
"    /*==========================  PUBLIC  =================================*/",
"  public:",
"",
"@@if Decorator",
"    enum",
"    {",
"        DecorateeFieldId        = Inherited::NextFieldId,",
"        NextFieldId             = DecorateeFieldId          + 1",
"    };",
"",
"    static const osg::BitVector DecorateeFieldMask;",
"@@else",
"@@FieldIdsAndMasksDecl@@",
"@@endif",
"",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Class Get                                 */",
"    /*! \\{                                                                 */",
"",
"    static        FieldContainerType &getClassType    (void); ",
"    static        UInt32              getClassTypeId  (void); ",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                       Get                                    */",
"    /*! \\{                                                                 */",
"",
"    virtual       FieldContainerType &getType  (void); ",
"    virtual const FieldContainerType &getType  (void) const; ",
"",
"    virtual       UInt32              getContainerSize(void) const;",
"",
"    /*! \\}                                                                 */",
"@@if hasPublicFields", 
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Field Get                                 */",
"    /*! \\{                                                                 */",
"",
"@@if decorator", 
"    @!FieldMethodType!@       SF@!Parent!@Ptr *getSFDecoratee(void);",
"@@endif", 
"@@BeginFieldLoop@@",
"@@if isPublic", 
"    @!FieldMethodType!@       @!CARDINALITY!@@!CapsFieldtype:17!@ *get@!CARDINALITY!@@!Fieldname:15!@(void);",
"@@endif", 
"@@EndFieldLoop@@",
"",
"@@if Decorator", 
"    @!FieldMethodType!@       @!Parent!@Ptr &getDecoratee(void);",
"    @!FieldMethodType!@ const @!Parent!@Ptr &getDecoratee(void) const;",
"@@endif", 
"@@BeginSFFieldLoop@@",
"@@if isPublic", 
"    @!FieldMethodType!@       @!Fieldtype:19!@ &get@!Fieldname:15!@(void);",
"    @!FieldMethodType!@ const @!Fieldtype:19!@ &get@!Fieldname:15!@(void) const;",
"@@endif", 
"@@EndSFFieldLoop@@",
"@@BeginMFFieldLoop@@",
"@@if isPublic", 
"    @!FieldMethodType!@       @!Fieldtype:19!@ &get@!Fieldname:15!@(const UInt32 index);",
"    @!FieldMethodType!@       @!CARDINALITY!@@!CapsFieldtype:17!@ &get@!Fieldname:15!@(void);",
"    @!FieldMethodType!@ const @!CARDINALITY!@@!CapsFieldtype:17!@ &get@!Fieldname:15!@(void) const;",
"@@endif", 
"@@EndMFFieldLoop@@",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Field Set                                 */",
"    /*! \\{                                                                 */",
"",
"@@if decorator", 
"    @!FieldMethodType!@ void setDecoratee      ( const @!Parent!@Ptr &value );",
"@@endif", 
"@@BeginSFFieldLoop@@",
"@@if isPublic", 
"    @!FieldMethodType!@ void set@!Fieldname:15!@( const @!Fieldtype!@ &value );",
"@@endif", 
"@@EndSFFieldLoop@@",
"",
"    /*! \\}                                                                 */",
"@@endif", 
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                       Sync                                   */",
"    /*! \\{                                                                 */",
"",
"    virtual void   executeSync(      FieldContainer    &other,",
"                               const BitVector         &whichField);",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                   Binary Access                              */",
"    /*! \\{                                                                 */",
"",
"    virtual UInt32 getBinSize (const BitVector         &whichField);",
"    virtual void   copyToBin  (      BinaryDataHandler &pMem,", 
"                               const BitVector         &whichField);",
"    virtual void   copyFromBin(      BinaryDataHandler &pMem,", 
"                               const BitVector         &whichField);",
"",
"",
"    /*! \\}                                                                 */",
"@@if !Abstract",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                   Construction                               */",
"    /*! \\{                                                                 */",
"",
"    static  @!Classname!@Ptr      create          (void); ",
"    static  @!Classname!@Ptr      createEmpty     (void); ",
"",
"    /*! \\}                                                                 */",
"",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                       Copy                                   */",
"    /*! \\{                                                                 */",
"",
"    virtual FieldContainerPtr     shallowCopy     (void) const; ",
"",
"    /*! \\}                                                                 */",
"@@endif",
"    /*=========================  PROTECTED  ===============================*/",
"  protected:",
"",
"@@if hasFields", 
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                      Fields                                  */",
"    /*! \\{                                                                 */",
"",
"@@if Decorator", 
"    SF@!Parent!@Ptr   _sfDecoratee;",
"@@else", 
"@@BeginFieldLoop@@",
"@@if !isPrivate", 
"    @!CARDINALITY!@@!CapsFieldtype:15!@   _@!fieldname!@;",
"@@endif", 
"@@EndFieldLoop@@",
"@@endif", 
"",
"    /*! \\}                                                                 */",
"@@endif", 
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                   Constructors                               */",
"    /*! \\{                                                                 */",
"",
"    @!Classname!@Base(void);",
"    @!Classname!@Base(const @!Classname!@Base &source);",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                   Destructors                                */",
"    /*! \\{                                                                 */",
"",
"    virtual ~@!Classname!@Base(void); ",
"",
"    /*! \\}                                                                 */",
"@@if hasProtectedFields", 
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Field Get                                 */",
"    /*! \\{                                                                 */",
"",
"@@BeginFieldLoop@@",
"@@if isProtected", 
"    @!FieldMethodType!@       @!CARDINALITY!@@!CapsFieldtype:17!@ *get@!CARDINALITY!@@!Fieldname:15!@(void);",
"@@endif", 
"@@EndFieldLoop@@",
"",
"@@BeginSFFieldLoop@@",
"@@if isProtected", 
"    @!FieldMethodType!@       @!Fieldtype:19!@ &get@!Fieldname:15!@(void);",
"    @!FieldMethodType!@ const @!Fieldtype:19!@ &get@!Fieldname:15!@(void) const;",
"@@endif", 
"@@EndSFFieldLoop@@",
"@@BeginMFFieldLoop@@",
"@@if isProtected", 
"    @!FieldMethodType!@       @!Fieldtype:19!@ &get@!Fieldname:15!@(UInt32 index);",
"    @!FieldMethodType!@       @!CARDINALITY!@@!CapsFieldtype:17!@ &get@!Fieldname:15!@(void);",
"    @!FieldMethodType!@ const @!CARDINALITY!@@!CapsFieldtype:17!@ &get@!Fieldname:15!@(void) const;",
"@@endif", 
"@@EndMFFieldLoop@@",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Field Set                                 */",
"    /*! \\{                                                                 */",
"",
"@@BeginSFFieldLoop@@",
"@@if isProtected", 
"    @!FieldMethodType!@ void set@!Fieldname:15!@(const @!Fieldtype!@ &value);",
"@@endif", 
"@@EndSFFieldLoop@@",
"",
"    /*! \\}                                                                 */",
"@@endif", 
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                       Sync                                   */",
"    /*! \\{                                                                 */",
"",
"    void executeSyncImpl(      @!Classname!@Base *pOther,",
"                         const BitVector         &whichField);",
"",
"    /*! \\}                                                                 */",
"    /*==========================  PRIVATE  ================================*/",
"  private:",
"",
"    friend class FieldContainer;",
"",
"@@if hasFields", 
"    static FieldDescription   *_desc[];",
"@@endif", 
"    static FieldContainerType  _type;",
"",
"@@if hasPrivateFields", 
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                      Fields                                  */",
"    /*! \\{                                                                 */",
"",
"@@if !Decorator", 
"@@BeginFieldLoop@@",
"@@if isPrivate", 
"    @!CARDINALITY!@@!CapsFieldtype:15!@   _@!fieldname!@;",
"@@endif", 
"@@EndFieldLoop@@",
"@@endif", 
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Field Get                                 */",
"    /*! \\{                                                                 */",
"",
"@@BeginFieldLoop@@",
"@@if isPrivate", 
"    @!FieldMethodType!@       @!CARDINALITY!@@!CapsFieldtype:17!@ *get@!CARDINALITY!@@!Fieldname:15!@(void);",
"@@endif", 
"@@EndFieldLoop@@",
"",
"@@BeginSFFieldLoop@@",
"@@if isPrivate", 
"    @!FieldMethodType!@       @!Fieldtype:19!@ &get@!Fieldname:15!@(void);",
"    @!FieldMethodType!@ const @!Fieldtype:19!@ &get@!Fieldname:15!@(void) const;",
"@@endif", 
"@@EndSFFieldLoop@@",
"@@BeginMFFieldLoop@@",
"@@if isPrivate", 
"    @!FieldMethodType!@       @!Fieldtype:19!@ &get@!Fieldname:15!@(UInt32 index);",
"    @!FieldMethodType!@       @!CARDINALITY!@@!CapsFieldtype:17!@ &get@!Fieldname:15!@(void);",
"    @!FieldMethodType!@ const @!CARDINALITY!@@!CapsFieldtype:17!@ &get@!Fieldname:15!@(void) const;",
"@@endif", 
"@@EndMFFieldLoop@@",
"",
"    /*! \\}                                                                 */",
"    /*---------------------------------------------------------------------*/",
"    /*! \\name                    Field Set                                 */",
"    /*! \\{                                                                 */",
"",
"@@BeginSFFieldLoop@@",
"@@if isPrivate", 
"    @!FieldMethodType!@ void set@!Fieldname:15!@(const @!Fieldtype!@ &value);",
"@@endif", 
"@@EndSFFieldLoop@@",
"",
"    /*! \\}                                                                 */",
"@@endif", 
"",
"    // prohibit default functions (move to 'public' if you need one)",
"    void operator =(const @!Classname!@Base &source);",
"};",
"",
"//---------------------------------------------------------------------------",
"//   Exported Types",
"//---------------------------------------------------------------------------",
"",
"",
"typedef @!Classname!@Base *@!Classname!@BaseP;",
"",
"OSG_END_NAMESPACE",
"",
"#define OSG@!CLASSNAME!@BASE_HEADER_CVSID \"@(#)$Id: FCBaseTemplate_h.h,v 1.25 2002/05/13 09:21:11 vossg Exp $\"",
"", 
"#endif /* _OSG@!CLASSNAME!@BASE_H_ */",
NULL };
