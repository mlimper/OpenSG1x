
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl

AC_INIT(Base/OSGConfig.h)

dnl ############# Default Settings #####################

if [[ $srcdir = . ]]; then
	ac_gdz_src_dir=`pwd`
	ac_gdz_lib_src_dir=`pwd`
elif [[ $srcdir = .. ]]; then
    ac_gdz_src_dir=`pwd`/..
    ac_gdz_lib_src_dir=`pwd`/..
else
	ac_gdz_src_dir=$srcdir
	ac_gdz_lib_src_dir=$srcdir
fi

ac_gdz_common_dir=$ac_gdz_src_dir/Common
ac_gdz_commonconf_dir=CommonConf
ac_gdz_so_praefix=
ac_gdz_so_suffix=
ac_gdz_lib_suffix=
ac_gdz_obj_suffix=
ac_gdz_exe_suffix=
ac_gdz_common_patterns=$ac_gdz_commonconf_dir/common.pattern.in
ac_gdz_build_dir=`pwd`
ac_gdz_compiler_exe=
ac_gdz_conf_package_defs=
ac_gdz_conf_package_qt='0'
ac_gdz_conf_package_qt_e1='0'
ac_gdz_conf_package_glut='0'
ac_gdz_conf_package_glut_e1='0'

AC_CONFIG_AUX_DIR($ac_gdz_commonconf_dir) 

dnl ############# Compiler Settings #####################

AC_ARG_WITH(compiler,[  --with-compiler=<compiler> choose one of the following\
 compilers (required)
        IRIX    : CC
        Windows : icl, icl45, icl50, bcc55
        Linux   : g++],
        echo Compiler : $with_compiler;ac_gdz_compiler=$with_compiler;,
        echo ERROR --with-compiler option required; exit 1;) 

dnl ############# STL Settings #####################

AC_ARG_WITH(stl,     [  --with-stl=DIR                     Where to find the stl to use],
			,with_stl=no) 

if [[ "$with_stl" = yes ]]; then
	ac_gdz_stl_dir=
elif [[ "$with_stl" = no ]]; then
	ac_gdz_stl_dir=
else
	ac_gdz_stl_dir=$with_stl
fi

dnl ############# GLUT Settings #####################

AC_ARG_WITH(glut,     [  --with-glut=DIR                    Where to find the glut files to use],
			,with_glut=no) 

if [[ "$with_glut" = yes ]]; then
	ac_gdz_glut_dir=yes
	ac_gdz_conf_package_defs=-DOSG_WITH_GLUT
	ac_gdz_conf_package_glut='1'
	ac_gdz_conf_package_glut_e1='1'
elif [[ "$with_glut" = no ]]; then
	ac_gdz_glut_dir=
else
	ac_gdz_glut_dir=$with_glut
	ac_gdz_conf_package_defs=-DOSG_WITH_GLUT
	ac_gdz_conf_package_glut='1'
	ac_gdz_conf_package_glut_e1='1'
fi

dnl ############# QT Settings #####################

AC_ARG_WITH(qt,     [  --with-qt=DIR                      Where to find the qt files to use],
			,with_qt=no) 

if [[ "$with_qt" = yes ]]; then
	ac_gdz_qt_dir=
	ac_gdz_conf_package_defs=$ac_gdz_conf_package_defs' -DOSG_WITH_QT'
	ac_gdz_conf_package_qt='1'
	ac_gdz_conf_package_qt_e1='1'
elif [[ "$with_qt" = no ]]; then
	ac_gdz_qt_dir=
else
	ac_gdz_qt_dir=$with_qt
	ac_gdz_conf_package_qt='1'
	ac_gdz_conf_package_qt_e1='1'
	ac_gdz_conf_package_defs=$ac_gdz_conf_package_defs' -DOSG_WITH_QT'
fi

dnl ############# TLS Settings #####################

AC_ARG_ENABLE(win-localstorage,     [  --enable-win-localstorage          Use local storage instead of __declspec to get thread local storage on windows],
			,enable_win_localstorage=no) 

dnl ############# Bool=unsigned int Settings #####################

AC_ARG_ENABLE(win-bool-is-unsigned,     [  --enable-win-bool-is-unsigned      Define Bool as unsigned, required to combine the software with Microsoft stuff, since preprocessors ignore namespaces ],
			,enable_win_bool_is_unsigned=no) 

dnl ############# Fullwarn Settings #####################

AC_ARG_ENABLE(compiler-pedantic-errors,     [  --enable-compiler-pedantic-errors  Sets the compiler to generate more errors. WARNING, some external software (e.g. QT or STL) may require some patches to work with these settings ],
			,enable_compiler_pedantic_errors=no) 

dnl ############# Helper #####################

function FK_GDZ_CREATE_PACKAGE_DIRS
{
    ac_gdz_package_dir_build=${1}Lib
    ac_gdz_package_dir_test=${1}Test

    if ! test -w $ac_gdz_package_dir_build; then 
        echo Need $ac_gdz_package_dir_build
	    mkdir $ac_gdz_package_dir_build
    fi

    if ! test -w $ac_gdz_package_dir_build/obj-dbg; then 
	    echo Need $ac_gdz_package_dir_build/obj-dbg
	    mkdir $ac_gdz_package_dir_build/obj-dbg
    fi

    if ! test -w $ac_gdz_package_dir_build/obj-opt; then 
	   	echo Need $ac_gdz_package_dir_build/obj-opt
	    mkdir $ac_gdz_package_dir_build/obj-opt
    fi

    if ! test -w $ac_gdz_package_dir_build/lib-dbg; then 
	  	echo Need $ac_gdz_package_dir_build/lib-dbg
	    mkdir $ac_gdz_package_dir_build/lib-dbg
    fi

    if ! test -w $ac_gdz_package_dir_build/lib-opt; then 
	   	echo Need $ac_gdz_package_dir_build/lib-opt
	    mkdir $ac_gdz_package_dir_build/lib-opt
    fi




    if ! test -w $ac_gdz_package_dir_test; then 
        echo Need $ac_gdz_package_dir_test
	    mkdir $ac_gdz_package_dir_test
    fi

    if ! test -w $ac_gdz_package_dir_test/obj-dbg; then 
	   	echo Need $ac_gdz_package_dir_test/obj-dbg
	    mkdir $ac_gdz_package_dir_test/obj-dbg
    fi

    if ! test -w $ac_gdz_package_dir_test/obj-opt; then 
	   	echo Need $ac_gdz_package_dir_test/obj-opt
	    mkdir $ac_gdz_package_dir_test/obj-opt
    fi

    if ! test -w $ac_gdz_package_dir_test/exe-dbg; then 
	   	echo Need $ac_gdz_package_dir_test/exe-dbg
	    mkdir $ac_gdz_package_dir_test/exe-dbg
    fi

    if ! test -w $ac_gdz_package_dir_test/exe-opt; then 
	   	echo Need $ac_gdz_package_dir_test/exe-opt
	    mkdir $ac_gdz_package_dir_test/exe-opt
    fi
}

dnl ############# Run Tests #####################

AC_CANONICAL_SYSTEM()

ac_gdz_os_base=$build_os
ac_gdz_compiler_base=$ac_gdz_compiler

AC_GDZ_SET_COMPILER_DEFAULTS()

AC_GDZ_EXEEXT()
AC_GDZ_OBJEXT()
AC_GDZ_LIBEXT()
AC_GDZ_SOEXT()
AC_GDZ_SOPRAEFIX()

if test $build_os = cygwin; 
then 

	AC_GDZ_SET_SYSTEM_DIRS()

        case "$ac_gdz_compiler" in
            icl*)
				ac_gdz_compiler_exe='"$(CC_PATH)/'$ac_gdz_compiler_exe'" -nologo'

				ac_gdz_compiler_exe_shared='"$(CC_PATH)/'$ac_gdz_linker_exe'" -dll -map -NODEFAULTLIB'

				ac_gdz_compiler_exe_exe='"$(CC_PATH)/'$ac_gdz_linker_exe'" -NODEFAULTLIB'

				ac_gdz_base_system_libs='user32.lib kernel32.lib MSVCPRTD.lib MSVCRTD.lib libmmd.lib'
				ac_gdz_base_system_libs="$ac_gdz_base_system_libs winmm.lib wsock32.lib"
            ;;
            bcc*)
				ac_gdz_compiler_exe='"$(CC_PATH)/'$ac_gdz_compiler_exe'"'

				ac_gdz_compiler_exe_shared='"$(CC_PATH)/'$ac_gdz_linker_exe'" -WD'

				ac_gdz_compiler_exe_exe='"$(CC_PATH)/'$ac_gdz_linker_exe'"'

				ac_gdz_base_system_libs=
            ;;
        esac


	ac_gdz_flex_exe=flex.exe
	ac_gdz_bison_exe=bison.exe

	ac_gdz_gmake_exe=gmake

	ac_gdz_ln_exe="cp"

	ac_gdz_sed_exe=sed

	ac_gdz_system_incl_dir_e1=`cygpath -w "$ac_gdz_system_incl_dir"`
	ac_gdz_system_lib_dir_e1=`cygpath -w "$ac_gdz_system_lib_dir"`

	ac_gdz_system_incl_dir_e1='"'$ac_gdz_system_incl_dir_e1'"'
	ac_gdz_system_lib_dir_e1='"'$ac_gdz_system_lib_dir_e1'"'

	ac_gdz_compiler_incl=`cygpath -w "$ac_gdz_compiler_incl"`
	ac_gdz_compiler_lib=`cygpath -w "$ac_gdz_compiler_lib"`

	ac_gdz_compiler_incl='"'$ac_gdz_compiler_incl'"'
	ac_gdz_compiler_lib='"'$ac_gdz_compiler_lib'"'

else 
	ac_gdz_compiler_exe_shared='$(CC) -shared'

	ac_gdz_flex_exe=/usr/bin/flex
	ac_gdz_bison_exe=/usr/bin/bison

	ac_gdz_gmake_exe=gmake

	ac_gdz_ln_exe="ln -s"

	ac_gdz_sed_exe=sed

	ac_gdz_systen_incl_dir_e1=
	ac_gdz_system_lib_dir_e1=

	ac_gdz_base_system_libs='-lm'

    if test $build_os = linux-gnu; 
    then 
		ac_gdz_base_system_libs='-pthread '$ac_gdz_base_system_libs
    fi
fi 


if ! test -w Builds; then 
	echo Need Builds
	mkdir Builds
fi

ac_gdz_lib_base_dir=Builds/$build-$ac_gdz_compiler
ac_gdz_commonpackage_dir=$ac_gdz_src_dir/$ac_gdz_lib_base_dir/CommonPackages

if ! test -w $ac_gdz_lib_base_dir; then 
	echo Need $ac_gdz_lib_base_dir
	mkdir $ac_gdz_lib_base_dir
    mkdir $ac_gdz_lib_base_dir/CommonPackages
fi

ac_gdz_common_system=$ac_gdz_commonconf_dir/common.$build-$ac_gdz_compiler_base.in

AC_MSG_CHECKING([project config common.project.in])

if test -r "$ac_gdz_commonconf_dir/common.project.in"; then
    AC_MSG_RESULT("yes")
    . "$ac_gdz_commonconf_dir/common.project.in"
else
    AC_MSG_RESULT("error could not find project config")
	exit
fi

AC_MSG_CHECKING([package config common.libs.in])

if test -r "$ac_gdz_commonconf_dir/common.libs.in"; then
    AC_MSG_RESULT("yes")
    . "$ac_gdz_commonconf_dir/common.libs.in"
else
    AC_MSG_RESULT("error could not find package config")
	exit
fi

ac_gdz_package_sub_dir_out=Builds/$build-$ac_gdz_compiler

AC_CONFIG_HEADER($ac_gdz_package_sub_dir_out/Base/OSGConfigured.h:CommonConf/OSGConfigured.h.in)

if [[ $build_os = cygwin ]]; then 
	if [[ ! -w $ac_gdz_package_sub_dir_out/Base ]]; then
		mkdir $ac_gdz_package_sub_dir_out/Base
	fi
	touch $ac_gdz_package_sub_dir_out/Base/unistd.h
    ac_gdz_gen_base_inc_e1="..\\Base"
else
    ac_gdz_gen_base_inc_e1="../Base"
fi

AC_GDZ_SCAN_PACKET_DESC()

AC_SUBST(ac_gdz_so_praefix)
AC_SUBST(ac_gdz_so_suffix)
AC_SUBST(ac_gdz_lib_suffix)
AC_SUBST(ac_gdz_obj_suffix)
AC_SUBST(ac_gdz_exe_suffix)
AC_SUBST(ac_gdz_os_base)
AC_SUBST(ac_gdz_compiler_base)

AC_SUBST(ac_gdz_compiler_path)
AC_SUBST(ac_gdz_compiler_exe)
AC_SUBST(ac_gdz_compiler_exe_shared)
AC_SUBST(ac_gdz_compiler_exe_exe)
AC_SUBST(ac_gdz_flex_exe)
AC_SUBST(ac_gdz_bison_exe)
AC_SUBST(ac_gdz_gmake_exe)
AC_SUBST(ac_gdz_ln_exe)
AC_SUBST(ac_gdz_sed_exe)

AC_SUBST(ac_gdz_system_incl_dir_e1)
AC_SUBST(ac_gdz_system_lib_dir_e1)

AC_SUBST(ac_gdz_compiler_incl)
AC_SUBST(ac_gdz_compiler_lib)

AC_SUBST(ac_gdz_base_system_libs)
AC_SUBST(ac_gdz_plat_project_praefix)

AC_SUBST(ac_gdz_gen_base_inc_e1)

AC_SUBST(ac_gdz_conf_package_defs)
AC_SUBST(ac_gdz_conf_package_qt_e1)
AC_SUBST(ac_gdz_conf_package_glut_e1)

AC_SUBST_FILE(ac_gdz_common_patterns)
AC_SUBST_FILE(ac_gdz_common_system)

if [[ "$enable_compiler_pedantic_errors" = yes ]]; then
    ac_gdz_ped_errors_e1=1
else
    ac_gdz_ped_errors_e1=0    
fi

AC_SUBST(ac_gdz_ped_errors_e1)

ac_gdz_commonpackage_dir_e1=$ac_gdz_commonpackage_dir

AC_SUBST(ac_gdz_commonpackage_dir_e1)

if [[ "$prefix" = NONE ]]; then
ac_gdz_install_prefix=$ac_gdz_src_dir/$ac_gdz_lib_base_dir
else
if [[ "$prefix" = "" ]]; then
ac_gdz_install_prefix=$ac_gdz_src_dir/$ac_gdz_lib_base_dir
else
ac_gdz_install_prefix=$prefix
fi
fi

ac_gdz_common_platform_in=$ac_gdz_commonconf_dir/common.platform.mk.in
ac_gdz_common_platform=$ac_gdz_common_dir/common.$build-$ac_gdz_compiler.mk

ac_gdz_common_packetmake_in=$ac_gdz_commonconf_dir/Makefile.lib.in
ac_gdz_common_buildsmake_in=$ac_gdz_commonconf_dir/Makefile.builds.in
ac_gdz_common_testmake_in=$ac_gdz_commonconf_dir/Makefile.test.in

AC_OUTPUT($ac_gdz_common_platform:$ac_gdz_common_platform_in)

AC_GDZ_WRITE_COMMON_STL()

AC_GDZ_WRITE_COMMON_GLUT()

AC_GDZ_WRITE_COMMON_QT()

AC_GDZ_WRITE_COMMON_GL()

ac_gdz_package_sys_common_out=common.$build-$ac_gdz_compiler.mk

AC_GDZ_WRITE_PACKET_MAKE()

ac_gdz_lib_package_sys_common_out=common.$build-$ac_gdz_compiler.mk

AC_GDZ_WRITE_BUILDS_MAKE()

if [[ "$enable_win_localstorage" = yes ]]; then
    AC_DEFINE(OSG_ASPECT_USE_LOCALSTORAGE)
else
    AC_DEFINE(OSG_ASPECT_USE_DECLSPEC)
fi

if [[ "$enable_win_bool_is_unsigned" = yes ]]; then
    AC_DEFINE(OSG_BOOL_IS_UNSIGNED)
fi

AC_GDZ_WRITE_SYSTEM_COMMON()




