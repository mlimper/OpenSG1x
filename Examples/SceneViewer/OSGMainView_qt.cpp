/****************************************************************************
** Form implementation generated from reading ui file 'OSGMainView_qt.ui'
**
** Created: Fr 27. Okt 17:35:47 2006
**      by: The User Interface Compiler ($Id: qt/main.cpp   3.3.5   edited Aug 31 12:13 $)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "OSGMainView_qt.h"

#include <qvariant.h>
#include <qapplication.h>
#include <OpenSG/OSGSceneFileHandler.h>
#include <OpenSG/OSGGroup.h>
#include <qtimer.h>
#include <qstring.h>
#include <qmessagebox.h>
#include <OpenSG/OSGLog.h>
#include <OpenSG/OSGNode.h>
#include <OpenSG/OSGNodeCore.h>
#include <OpenSG/OSGRenderAction.h>
#include <OpenSG/OSGShadowViewport.h>
#include <qframe.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qaction.h>
#include <qmenubar.h>
#include <qpopupmenu.h>
#include <qtoolbar.h>
#include <qimage.h>
#include <qpixmap.h>

#include "OSGMainView_qt.ui.h"
static const char* const image0_data[] = { 
"16 16 95 2",
"#p c #497aab",
"#x c #5885b2",
"#s c #628cb7",
"#l c #658eb8",
"#u c #668fb8",
".9 c #6890b9",
"#i c #6991ba",
"#m c #6b93ba",
".M c #707475",
".3 c #7399be",
"#b c #749abf",
".I c #767a7b",
".j c #767a7c",
".7 c #769bc0",
".t c #777b7c",
".6 c #789cc1",
".h c #7c8081",
".W c #818586",
"#g c #82a4c5",
".w c #858889",
".F c #878a8b",
".A c #878a8c",
".a c #898c8d",
".y c #8a8d8f",
"#z c #8aaac9",
"#C c #8cabca",
".m c #909394",
"#o c #90aecc",
".b c #919495",
"#B c #92afcc",
".B c #949798",
".D c #96999a",
"#f c #96b2cf",
".P c #999c9d",
".Q c #9a9d9e",
".e c #9ea0a2",
".x c #9ea1a2",
".S c #9fa2a3",
".4 c #a3bcd5",
".T c #a8aaab",
".z c #a8abac",
".Y c #aaacad",
"#q c #acc3d9",
".d c #b0b2b3",
".K c #b0b3b4",
".Z c #b1b3b4",
".1 c #b6b8b9",
".8 c #b6cadd",
"#a c #becfe1",
".E c #bfc1c1",
".# c #bfc1c2",
"#y c #c1d2e3",
".N c #c5c7c7",
".5 c #c5d5e4",
".n c #c8c9ca",
".2 c #c8d7e5",
"#t c #c8d7e6",
"#k c #cad8e6",
"#e c #cbd9e7",
"#A c #ccdae8",
".o c #cdcecf",
".J c #cdcfcf",
".r c #d0d2d2",
".L c #d3d4d5",
".H c #d4d5d6",
".R c #d5d6d6",
".v c #d6d7d7",
"#v c #d8e2ed",
".c c #dadbdb",
".O c #dadbdc",
"## c #dae4ee",
".i c #dbdcdc",
".l c #dcdddd",
"#w c #dee7f0",
".G c #dfe0e0",
".q c #e0e1e1",
".C c #e1e1e2",
"#r c #e3ebf2",
".p c #e5e5e6",
".V c #e8e9e9",
".U c #eaeaeb",
".0 c #eaebeb",
"#n c #eaf0f5",
".s c #ebebeb",
".g c #ebebec",
"#j c #f0f4f8",
"#h c #f1f5f9",
"#c c #f2f6f9",
".X c #f5f5f5",
".f c #f7f7f7",
"#d c #f8fafc",
".u c #f9fafa",
"#. c #fafbfd",
".k c #fdfdfd",
"Qt c #ffffff",
"QtQtQtQtQtQtQtQtQtQtQtQtQtQtQtQt",
"QtQt.#.a.b.cQtQtQtQtQtQtQtQtQtQt",
"Qt.d.e.f.g.h.iQtQtQtQtQtQtQtQtQt",
"Qt.j.kQtQt.l.m.n.iQt.o.p.q.r.sQt",
"Qt.t.uQtQt.v.w.x.d.y.z.A.B.C.DQt",
"Qt.E.F.G.H.I.J.K.L.M.N.O.PQt.QQt",
"QtQt.R.S.T.U.V.W.d.X.Y.Z.oQt.oQt",
"QtQtQtQtQtQt.0.1QtQtQtQtQtQtQtQt",
"QtQtQtQtQtQtQtQtQtQtQtQtQtQtQtQt",
"QtQtQtQt.2.3.4Qt.5.6.7.8QtQtQtQt",
"QtQtQtQt.9#.###a#b#c#d#eQtQtQtQt",
"QtQtQtQt#f#g#h#i#jQtQtQtQtQtQtQt",
"QtQtQtQtQt#k#l#m#nQt#o#pQtQtQtQt",
"QtQtQtQt#q#r#s#t#u#v#w#xQtQtQtQt",
"QtQtQtQt#y#z#AQt###B#C#yQtQtQtQt",
"QtQtQtQtQtQtQtQtQtQtQtQtQtQtQtQt"};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0x7f, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xed, 0x95, 0x51, 0x0a, 0x00,
    0x21, 0x08, 0x44, 0x75, 0xd9, 0xdb, 0x04, 0x1e, 0xc0, 0xe8, 0xfa, 0x5e,
    0xcb, 0xfd, 0xda, 0x85, 0x2d, 0x4b, 0x11, 0xfa, 0x6b, 0x20, 0x28, 0xa3,
    0x57, 0x0c, 0x53, 0xa1, 0x88, 0xc0, 0x0e, 0xdd, 0x7d, 0x81, 0x99, 0x35,
    0xb2, 0x50, 0x44, 0x70, 0x35, 0x7f, 0x59, 0x45, 0x55, 0x9d, 0x36, 0x00,
    0x00, 0x22, 0x72, 0x0f, 0x60, 0x82, 0x3d, 0x11, 0x91, 0x0b, 0x1f, 0xac,
    0x88, 0xa8, 0x94, 0xf2, 0xf5, 0x99, 0x59, 0x2d, 0x5b, 0x52, 0xe0, 0x5a,
    0xeb, 0x6f, 0x6c, 0xc1, 0x53, 0xe0, 0xd6, 0xda, 0x50, 0xeb, 0xe1, 0x29,
    0x30, 0xe2, 0x32, 0x10, 0x39, 0xf0, 0x9b, 0x0c, 0x6f, 0xb3, 0x54, 0x2a,
    0x22, 0x3a, 0xe0, 0x03, 0x3e, 0xe0, 0x85, 0xcc, 0x2b, 0x1d, 0x79, 0x0b,
    0x3c, 0xe1, 0xae, 0x3f, 0x6f, 0x9b, 0x15, 0x0f, 0x6d, 0x54, 0x33, 0xaf,
    0x8c, 0x7f, 0xa5, 0x08, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xae, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xb5, 0x94, 0x51, 0x0e, 0xc3,
    0x20, 0x0c, 0x43, 0x6d, 0xb4, 0x53, 0x71, 0xb6, 0x69, 0x1f, 0xd3, 0xce,
    0xe6, 0x6b, 0xb1, 0x8f, 0x51, 0x35, 0xa2, 0x19, 0x23, 0x5a, 0xf0, 0x4f,
    0x44, 0x2b, 0x5e, 0x2c, 0x03, 0xa1, 0x24, 0xec, 0x50, 0xd9, 0x42, 0xdd,
    0x09, 0xbe, 0x45, 0x37, 0xd4, 0x5a, 0x9b, 0x5d, 0x4b, 0xe2, 0xf8, 0x5f,
    0x12, 0x43, 0xe0, 0x63, 0x93, 0xd7, 0x48, 0x12, 0x6d, 0x53, 0x66, 0x1d,
    0x9e, 0x85, 0x4a, 0x62, 0x4a, 0xc6, 0x63, 0x3c, 0x40, 0xcf, 0xf8, 0x57,
    0x6e, 0x51, 0x28, 0x00, 0x10, 0x40, 0x6b, 0x0d, 0x00, 0xda, 0xb1, 0x04,
    0xb9, 0xc6, 0x9d, 0x19, 0xe8, 0x87, 0x77, 0x42, 0x01, 0xf6, 0x4e, 0xbc,
    0x7c, 0x8f, 0x34, 0x2f, 0xc6, 0x78, 0xb0, 0xce, 0x55, 0x3c, 0xc7, 0x6b,
    0x75, 0x2e, 0x37, 0xe3, 0x68, 0xd6, 0x9e, 0xdc, 0x8c, 0x2d, 0xf4, 0xf5,
    0x8c, 0x01, 0xef, 0x8f, 0x4f, 0x75, 0x33, 0xfe, 0x17, 0x6a, 0x1e, 0x48,
    0x2e, 0xf4, 0xe2, 0x38, 0x0b, 0x6a, 0xc0, 0xb9, 0xd0, 0xd3, 0x6a, 0x57,
    0x16, 0x14, 0x30, 0x83, 0x3e, 0x13, 0x0a, 0xac, 0xde, 0xf6, 0x2f, 0x9a,
    0xcd, 0x8a, 0xb4, 0x79, 0x3c, 0xea, 0x0d, 0x05, 0x19, 0x70, 0xcd, 0x5b,
    0x32, 0xcc, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};

static const unsigned char image3_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0xad, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xd5, 0x95, 0x31, 0x0e, 0x84,
    0x20, 0x10, 0x45, 0x3f, 0x86, 0x86, 0xc4, 0x82, 0xf3, 0xd0, 0xcc, 0xc5,
    0x8c, 0x85, 0xf1, 0x62, 0x34, 0x73, 0x1e, 0x0b, 0x92, 0x2d, 0x77, 0x0b,
    0x33, 0x86, 0x15, 0x0d, 0x62, 0xd0, 0x84, 0xd7, 0x10, 0x0c, 0xbe, 0x7c,
    0xc6, 0x41, 0x14, 0x33, 0xe3, 0x09, 0x34, 0x00, 0x38, 0xe7, 0xbe, 0x35,
    0xa5, 0xcc, 0xac, 0xb4, 0x4c, 0xe6, 0x69, 0x1d, 0x87, 0x11, 0xf0, 0xde,
    0x17, 0x89, 0x88, 0x68, 0x7b, 0x87, 0x88, 0x00, 0x00, 0x5d, 0xa5, 0x90,
    0x09, 0x3a, 0xbf, 0xe4, 0x18, 0x13, 0x2c, 0x3e, 0xfd, 0xb2, 0xcd, 0x25,
    0xa9, 0x90, 0x4d, 0x6c, 0x82, 0x85, 0x09, 0x36, 0x79, 0x1e, 0x4b, 0x81,
    0xb5, 0x94, 0x52, 0xce, 0x4b, 0xe2, 0xbb, 0x64, 0x4b, 0xb1, 0x4f, 0x76,
    0x95, 0xc7, 0x12, 0xb7, 0x27, 0x4e, 0x6a, 0x3c, 0x4f, 0x69, 0xeb, 0xe4,
    0x88, 0xbb, 0xe1, 0x54, 0x7c, 0xb6, 0xb0, 0x94, 0x77, 0xdb, 0x6d, 0x18,
    0xcb, 0x45, 0xfb, 0x5d, 0xde, 0x3e, 0xd2, 0xf1, 0x8f, 0xea, 0xe8, 0x9b,
    0xb4, 0xd7, 0x6e, 0xed, 0x89, 0x95, 0xdc, 0x79, 0xb5, 0xae, 0x27, 0x66,
    0x56, 0x7f, 0xe2, 0xda, 0xfc, 0x00, 0x45, 0x36, 0x2b, 0xc8, 0xb4, 0x9a,
    0xe4, 0x47, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
    0x60, 0x82
};

static const unsigned char image4_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0x8c, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x8d, 0x95, 0xaf, 0x7b, 0xdb,
    0x30, 0x10, 0x86, 0xdf, 0xec, 0x09, 0x38, 0x31, 0x9b, 0xc5, 0x30, 0xb0,
    0x61, 0x35, 0x0c, 0x2c, 0xf4, 0x58, 0xcb, 0x5a, 0x18, 0xb8, 0x3f, 0x61,
    0x81, 0xa3, 0x63, 0xa3, 0x85, 0x1d, 0xeb, 0xd8, 0x02, 0x0b, 0x1d, 0xd6,
    0xb0, 0x1a, 0x0a, 0xda, 0xcc, 0x62, 0x77, 0x2c, 0x03, 0xb2, 0x1d, 0xe7,
    0xd7, 0xb3, 0x8a, 0x28, 0x96, 0x2e, 0xef, 0x7d, 0xba, 0xef, 0x2c, 0x4f,
    0xca, 0xb2, 0xe4, 0xd2, 0x68, 0xdb, 0x76, 0x2f, 0x22, 0xa4, 0x69, 0x7a,
    0xb4, 0x6e, 0x66, 0x00, 0xa8, 0x2a, 0x00, 0x21, 0x04, 0x92, 0x24, 0xc1,
    0x39, 0x37, 0x19, 0xc7, 0x4d, 0x2f, 0x52, 0x01, 0x11, 0x21, 0xcf, 0xf3,
    0x01, 0x74, 0xba, 0x37, 0x12, 0x80, 0xf7, 0xfe, 0x2c, 0xe6, 0x2a, 0x18,
    0xa0, 0xaa, 0xaa, 0x33, 0xd8, 0x69, 0x22, 0x55, 0xc5, 0x39, 0xf7, 0x79,
    0xf0, 0x25, 0x80, 0x99, 0x9d, 0x25, 0xe8, 0xe7, 0x53, 0xf8, 0x97, 0x2b,
    0xdc, 0xbd, 0x99, 0x0d, 0xc1, 0xce, 0x39, 0x9c, 0x73, 0x47, 0xf5, 0xee,
    0xeb, 0x2f, 0x22, 0x67, 0xf5, 0xbd, 0xaa, 0x58, 0x55, 0x49, 0x92, 0x84,
    0xb6, 0x6d, 0x11, 0x91, 0xc1, 0xa8, 0xf1, 0xb8, 0x74, 0xfc, 0xcf, 0x28,
    0xc6, 0xcc, 0xce, 0x3a, 0x62, 0x0c, 0xed, 0x93, 0x5d, 0x32, 0xf7, 0xaa,
    0xe2, 0x5e, 0xcd, 0x25, 0xa5, 0xe3, 0x75, 0x55, 0x3d, 0xea, 0x90, 0xff,
    0x82, 0xeb, 0xba, 0x66, 0x3e, 0x9f, 0x93, 0x65, 0xd9, 0x55, 0x78, 0x6f,
    0xe4, 0x76, 0xbb, 0x25, 0x84, 0xb0, 0x17, 0x49, 0xc8, 0xb2, 0x74, 0xa8,
    0xf5, 0x11, 0x58, 0x55, 0xf7, 0xde, 0x7b, 0xaa, 0x5d, 0x85, 0x14, 0x82,
    0x88, 0x0c, 0x80, 0xd3, 0xb9, 0x57, 0xda, 0xd6, 0x2d, 0x65, 0x59, 0xd2,
    0x84, 0x86, 0x9b, 0x9b, 0x9b, 0x7d, 0x51, 0x14, 0xa4, 0x69, 0x3a, 0x99,
    0xf4, 0x6f, 0x9e, 0xaa, 0xee, 0xab, 0xca, 0x13, 0xea, 0x06, 0x35, 0x80,
    0xcb, 0x4a, 0x01, 0x9c, 0xa4, 0x08, 0x02, 0x0e, 0x7c, 0xed, 0x79, 0x7f,
    0xdf, 0xd1, 0x34, 0x35, 0xaa, 0xc6, 0x62, 0x31, 0x67, 0xb5, 0x5a, 0x45,
    0xc5, 0xbd, 0xd2, 0xe2, 0xee, 0x0e, 0x97, 0xa6, 0xa8, 0x1a, 0x98, 0x72,
    0x66, 0x8b, 0x19, 0x20, 0x94, 0x6c, 0x79, 0xe3, 0x2f, 0x4b, 0x5b, 0xb2,
    0xfc, 0xc8, 0xa9, 0xaa, 0x1d, 0xa8, 0xe1, 0x80, 0x8f, 0xf7, 0x0f, 0x7e,
    0xe9, 0x33, 0xd3, 0x08, 0x6d, 0x78, 0xf8, 0xfa, 0x40, 0x32, 0x4b, 0xae,
    0xaa, 0xec, 0x47, 0x45, 0xc5, 0x4f, 0x7e, 0xe0, 0xf1, 0xec, 0xd8, 0xf1,
    0x22, 0x2f, 0x14, 0xfe, 0x9e, 0x97, 0xf6, 0x99, 0xba, 0x0e, 0x18, 0x46,
    0xe3, 0x3d, 0xd3, 0xd0, 0x04, 0x9e, 0x9e, 0xee, 0xaf, 0xba, 0x7b, 0x3a,
    0x52, 0x52, 0xee, 0x58, 0x52, 0x22, 0x14, 0x14, 0xdc, 0xde, 0xde, 0x92,
    0x48, 0x46, 0x6b, 0x35, 0xcf, 0x2f, 0xbf, 0x09, 0x21, 0x90, 0xce, 0x52,
    0xa6, 0x06, 0x78, 0x5f, 0xc7, 0x7e, 0x34, 0x03, 0x11, 0x62, 0x8e, 0x98,
    0x48, 0x04, 0x1c, 0x2e, 0x56, 0xdc, 0x14, 0xc4, 0xf1, 0xcd, 0xbe, 0x73,
    0x8f, 0x27, 0xb3, 0x8c, 0x1d, 0x15, 0x98, 0x91, 0x66, 0x59, 0xdc, 0xef,
    0xdc, 0x99, 0xb6, 0x75, 0x8d, 0x17, 0x89, 0xf5, 0x34, 0x63, 0xf0, 0xcd,
    0x41, 0x74, 0xb1, 0x3b, 0x89, 0x33, 0x50, 0x01, 0xe2, 0x9a, 0x00, 0xde,
    0x1a, 0x8c, 0x78, 0x87, 0xf8, 0xaa, 0x1a, 0x3c, 0x71, 0x74, 0xed, 0xd6,
    0x2f, 0x58, 0x0f, 0xc4, 0x86, 0xa6, 0x50, 0xa2, 0x29, 0xb1, 0x9d, 0x87,
    0xc8, 0xa1, 0x73, 0xa4, 0xf7, 0x74, 0x34, 0x14, 0x65, 0x8a, 0x80, 0xb5,
    0xa3, 0x3f, 0x68, 0x27, 0x76, 0x1c, 0x68, 0x80, 0x28, 0xd8, 0xe9, 0x8e,
    0xc3, 0xac, 0xa5, 0x3b, 0x67, 0x7f, 0x36, 0xf2, 0x7c, 0xc9, 0x17, 0x6c,
    0xa4, 0x72, 0x10, 0xab, 0xf1, 0xd1, 0xba, 0xf9, 0x08, 0xea, 0xfa, 0xb0,
    0x0e, 0xda, 0x01, 0xbb, 0x72, 0xce, 0x66, 0x33, 0x56, 0xab, 0xa7, 0xa8,
    0xd8, 0x7b, 0xdf, 0x5b, 0x05, 0x62, 0x10, 0x04, 0x08, 0xd1, 0x39, 0xb3,
    0x88, 0x91, 0x5e, 0x95, 0x1d, 0x60, 0x1c, 0x6a, 0x8e, 0x19, 0x22, 0xb0,
    0x5e, 0xaf, 0xc9, 0xb2, 0x6c, 0x32, 0x9d, 0xcf, 0xe7, 0xbc, 0x6d, 0xde,
    0xf8, 0xb3, 0xd9, 0xa0, 0x6a, 0xc4, 0xfb, 0x47, 0x38, 0x6a, 0x3e, 0x19,
    0x3d, 0xcb, 0x01, 0x39, 0x9c, 0xb3, 0xeb, 0xa6, 0xf5, 0x7a, 0x4d, 0x9e,
    0xe7, 0x13, 0x80, 0xe1, 0x95, 0xae, 0xeb, 0x7a, 0xff, 0xfa, 0xba, 0xa1,
    0xe9, 0xbe, 0x5f, 0x8a, 0x76, 0xa6, 0x1c, 0x9c, 0x39, 0x7c, 0x35, 0x40,
    0xb5, 0x8d, 0xbf, 0x83, 0x91, 0x2f, 0x73, 0x1e, 0x1f, 0x1f, 0x59, 0x2c,
    0x16, 0xc3, 0x25, 0xf4, 0x0f, 0x01, 0x0f, 0x7c, 0xb0, 0x1c, 0x52, 0x64,
    0xd1, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
    0x82
};

static const unsigned char image5_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x04,
    0x8b, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x9d, 0x95, 0x4d, 0x6f, 0x64,
    0x57, 0x11, 0x86, 0x9f, 0xaa, 0x73, 0xee, 0x47, 0xbb, 0xdd, 0xed, 0xf6,
    0x78, 0x7a, 0x6c, 0xc7, 0x9a, 0x84, 0xd1, 0xc8, 0x46, 0x4a, 0x16, 0x51,
    0x40, 0x41, 0x08, 0x01, 0x2b, 0x56, 0x80, 0x90, 0x10, 0x4b, 0xfe, 0x00,
    0xe2, 0x5f, 0xf0, 0x03, 0xf8, 0x19, 0x2c, 0xc2, 0x96, 0x25, 0x5b, 0x34,
    0x48, 0x6c, 0x48, 0x98, 0x68, 0x12, 0x29, 0x19, 0x06, 0xec, 0x71, 0x66,
    0x1c, 0x37, 0xb6, 0xfb, 0xe3, 0x76, 0xdf, 0x7b, 0xcf, 0x47, 0xb1, 0xb0,
    0x85, 0x66, 0x01, 0x1b, 0x4a, 0x3a, 0xd2, 0xa9, 0x53, 0xa5, 0x47, 0xaf,
    0x4a, 0xa5, 0xf7, 0xc8, 0xe4, 0xc3, 0xdf, 0x58, 0x1f, 0x12, 0x21, 0x65,
    0x9c, 0x0a, 0x66, 0x46, 0x51, 0x42, 0x51, 0x38, 0x2c, 0x2b, 0x7d, 0x14,
    0x52, 0x32, 0x44, 0x01, 0x14, 0x0c, 0x40, 0xb8, 0x7b, 0x00, 0x15, 0x10,
    0x01, 0x81, 0x6c, 0xe0, 0x54, 0xa9, 0x2a, 0x87, 0xef, 0x02, 0x44, 0xdb,
    0x23, 0xe4, 0x09, 0xc1, 0x8c, 0xa2, 0xae, 0x38, 0x3e, 0x19, 0xf2, 0xee,
    0xa3, 0x9a, 0xb6, 0x77, 0xfc, 0xed, 0xcb, 0x35, 0xcf, 0xcf, 0x3a, 0x14,
    0x41, 0xe4, 0x96, 0x79, 0x7b, 0xe4, 0x0e, 0xec, 0x6e, 0xe1, 0x0e, 0x32,
    0x00, 0x0b, 0x82, 0xbd, 0xc6, 0x97, 0x5b, 0x25, 0xe2, 0x1f, 0x63, 0xf1,
    0x88, 0xe1, 0x20, 0xf3, 0xde, 0xc9, 0x84, 0x5f, 0xfe, 0x78, 0xca, 0x8f,
    0x3e, 0x1c, 0x32, 0x9b, 0xf7, 0xfc, 0xf6, 0xa3, 0x6b, 0xce, 0xfa, 0x0d,
    0x6d, 0x6b, 0x10, 0x03, 0x68, 0x06, 0xe5, 0x3f, 0x2a, 0x51, 0x07, 0x4e,
    0xc1, 0x03, 0x4e, 0xb0, 0x34, 0xc3, 0x96, 0x17, 0xf8, 0xe9, 0x7e, 0x85,
    0xd5, 0x15, 0xc3, 0xdd, 0x29, 0xbf, 0xfa, 0xc9, 0x88, 0xc7, 0x47, 0x05,
    0x0f, 0xa7, 0x9e, 0x7b, 0x23, 0xa5, 0xe9, 0x3c, 0x27, 0xc7, 0x03, 0x26,
    0x7b, 0x35, 0x7f, 0xfc, 0xa4, 0xe5, 0xe5, 0xd7, 0x0d, 0x66, 0x09, 0x54,
    0xef, 0x46, 0x21, 0xe0, 0x1c, 0x78, 0x01, 0x27, 0x80, 0x22, 0x41, 0xf0,
    0xc1, 0xe3, 0x8b, 0x0a, 0xbe, 0xf1, 0xc8, 0xf1, 0xd3, 0x1f, 0x0e, 0xf9,
    0xd9, 0x77, 0x47, 0x98, 0x19, 0xe7, 0xd7, 0x3d, 0xf1, 0x2a, 0xb3, 0xea,
    0x8c, 0x6f, 0x9d, 0xd4, 0xb4, 0x9d, 0xf1, 0xd6, 0xbe, 0xe3, 0xf7, 0x7f,
    0xce, 0xfc, 0xe3, 0x32, 0xd2, 0x27, 0x40, 0xfd, 0x2d, 0x4c, 0x3d, 0xb8,
    0xbb, 0x7b, 0x54, 0x8a, 0xc1, 0x90, 0xa9, 0xaf, 0xf0, 0x52, 0x95, 0x7c,
    0xff, 0x83, 0x43, 0x1e, 0xdc, 0x2f, 0xf8, 0xf4, 0xbc, 0xe5, 0x72, 0x95,
    0x69, 0x82, 0xe1, 0x9d, 0x90, 0x33, 0x44, 0x94, 0xab, 0xc6, 0xd8, 0x08,
    0xfc, 0xfc, 0x07, 0x3b, 0x7c, 0x72, 0x16, 0x78, 0xfa, 0xda, 0x58, 0x76,
    0x25, 0x4d, 0x52, 0x12, 0x7a, 0xab, 0x5a, 0x85, 0x49, 0x69, 0x3c, 0x2e,
    0x94, 0xad, 0x59, 0xc6, 0xcf, 0x7b, 0xe1, 0x0f, 0x4f, 0x6f, 0xd8, 0x5f,
    0x1e, 0xe2, 0x44, 0xa8, 0x4b, 0x10, 0xe7, 0x08, 0x59, 0xb0, 0x0c, 0xa6,
    0x8e, 0x55, 0x80, 0x18, 0x85, 0xa6, 0x37, 0x2e, 0xd6, 0x25, 0x71, 0xec,
    0xd1, 0x50, 0x52, 0x26, 0xc1, 0xee, 0xb8, 0x28, 0x7c, 0x6f, 0x7f, 0xc3,
    0x3b, 0x69, 0xcd, 0xd9, 0xd5, 0x12, 0xbf, 0x02, 0x9e, 0xcd, 0x33, 0x4f,
    0x5f, 0x0a, 0xc5, 0xdd, 0xba, 0x65, 0xcb, 0x64, 0x73, 0x64, 0x75, 0x64,
    0xe7, 0x49, 0x28, 0x31, 0x1b, 0x90, 0xc0, 0x3b, 0x9c, 0x17, 0x06, 0x1e,
    0x0a, 0x81, 0x41, 0x09, 0xe3, 0x0a, 0x76, 0xca, 0xc8, 0x77, 0xa6, 0x0b,
    0xf2, 0xc5, 0x92, 0xcf, 0x16, 0x37, 0xf8, 0xe2, 0xfa, 0x19, 0x48, 0x24,
    0xd4, 0x5b, 0x70, 0xff, 0x11, 0xa9, 0x1a, 0x11, 0x55, 0xd1, 0x0c, 0x03,
    0x81, 0x6d, 0x35, 0x76, 0x6b, 0x18, 0x17, 0x89, 0xc1, 0xd5, 0x29, 0xa1,
    0x6b, 0xb9, 0x2e, 0xf7, 0x98, 0x8d, 0xf7, 0xe9, 0x0a, 0x78, 0xb8, 0x0d,
    0xef, 0xd7, 0x91, 0xb7, 0xd3, 0x0c, 0xae, 0xcf, 0x38, 0x7f, 0xf6, 0x31,
    0xb1, 0x6d, 0xf0, 0xfe, 0xf5, 0xc7, 0x6c, 0x2d, 0x4e, 0xa9, 0xbb, 0x0b,
    0xf2, 0xe2, 0x84, 0xbc, 0x7b, 0x84, 0x4c, 0x1e, 0x30, 0x2a, 0x6b, 0xf6,
    0x34, 0x71, 0xa0, 0x89, 0xc3, 0xca, 0x51, 0xc7, 0x39, 0xaf, 0x4f, 0xff,
    0x82, 0xc4, 0x1e, 0x3d, 0x78, 0x87, 0x7f, 0x6d, 0x1d, 0xb3, 0x1c, 0x1d,
    0xf1, 0x70, 0xb4, 0xcd, 0x71, 0xbe, 0x41, 0x56, 0x17, 0x7c, 0xf1, 0xd7,
    0x3f, 0x71, 0xfa, 0xf7, 0x2f, 0x69, 0xbb, 0x25, 0xde, 0x6e, 0x2e, 0xb0,
    0xab, 0x57, 0xd4, 0x97, 0xff, 0xa4, 0x1c, 0xdd, 0x23, 0xef, 0x4c, 0xa9,
    0x1e, 0x1c, 0xb1, 0xb7, 0x73, 0x8f, 0x31, 0x81, 0xfb, 0x75, 0x81, 0x48,
    0xe4, 0x7a, 0xb3, 0x66, 0x75, 0xbd, 0xa2, 0x74, 0x89, 0xfb, 0xe9, 0x2b,
    0xf6, 0x56, 0x9f, 0xb1, 0x19, 0x3f, 0xa4, 0xda, 0x39, 0xa0, 0xf7, 0x05,
    0xe7, 0xa7, 0xcf, 0x79, 0xf5, 0xf2, 0x9c, 0xcd, 0x72, 0xce, 0xba, 0x5b,
    0xe2, 0xb3, 0x16, 0xf4, 0x31, 0x70, 0xd3, 0x34, 0x4c, 0xca, 0x0a, 0x77,
    0x1d, 0xa8, 0x53, 0x83, 0xae, 0x46, 0xcc, 0x4d, 0x98, 0x85, 0x8e, 0x14,
    0x23, 0x8b, 0x55, 0x43, 0xdb, 0x05, 0x3e, 0xf8, 0xe6, 0x21, 0x93, 0xad,
    0x92, 0xd0, 0x5d, 0x32, 0x6e, 0x94, 0x55, 0xb3, 0xe2, 0xf3, 0xd9, 0x82,
    0x57, 0x67, 0x2f, 0x58, 0xcc, 0x6f, 0x08, 0x2a, 0xc4, 0x2c, 0xf8, 0x8c,
    0xd2, 0x65, 0x23, 0x85, 0x0e, 0xbf, 0xbe, 0x41, 0x31, 0xac, 0x6b, 0x58,
    0xcd, 0xb7, 0x58, 0xac, 0x36, 0x6c, 0xda, 0x0d, 0xdb, 0x03, 0xc7, 0x68,
    0x58, 0xe2, 0xba, 0xc8, 0xe9, 0x8b, 0x96, 0xc5, 0xec, 0x2b, 0x36, 0x7d,
    0x02, 0x37, 0xa0, 0x4d, 0x35, 0xcd, 0x26, 0xd1, 0xb5, 0x6b, 0xba, 0x18,
    0x89, 0x75, 0x4d, 0xeb, 0x04, 0x9f, 0xb2, 0x61, 0xc9, 0x48, 0x21, 0xb1,
    0xde, 0xb4, 0x64, 0x83, 0xa6, 0x0f, 0x14, 0x6e, 0x8e, 0x98, 0x21, 0x92,
    0xd9, 0xdf, 0x9f, 0x30, 0x3d, 0x54, 0x36, 0x2b, 0xc7, 0xe5, 0xc5, 0x0d,
    0x5f, 0x9c, 0xaf, 0x69, 0x43, 0x26, 0x65, 0xa5, 0xf4, 0x05, 0x75, 0x59,
    0xe0, 0x8a, 0x82, 0xc2, 0x41, 0xb2, 0x35, 0x29, 0x7a, 0xbc, 0xd9, 0x9d,
    0x87, 0xa8, 0x62, 0x59, 0x08, 0x29, 0x33, 0x18, 0x1a, 0xfb, 0x53, 0x61,
    0x50, 0x43, 0xdf, 0x01, 0xe5, 0x9a, 0x98, 0x6b, 0xda, 0xd4, 0x33, 0x3a,
    0x30, 0xaa, 0x50, 0x10, 0x92, 0xe1, 0x55, 0xa8, 0x0a, 0xc5, 0x55, 0xd0,
    0xe6, 0x8e, 0x94, 0x8d, 0xa6, 0xcd, 0x84, 0x95, 0xe1, 0x8f, 0xf7, 0x84,
    0x83, 0x42, 0xd9, 0xf7, 0x8a, 0xaa, 0x90, 0x71, 0x14, 0x43, 0xa1, 0xd8,
    0x36, 0xb2, 0xcf, 0xb8, 0x24, 0xb4, 0x21, 0x32, 0xdb, 0xac, 0xd8, 0x74,
    0x89, 0xf1, 0xc8, 0xe1, 0x8a, 0x4c, 0x5a, 0x1a, 0xbb, 0x3b, 0x0e, 0xc5,
    0x10, 0x17, 0x29, 0x30, 0x42, 0x34, 0x34, 0x67, 0xba, 0x12, 0xfc, 0xf1,
    0x5b, 0x8e, 0xf7, 0x26, 0x9e, 0xe3, 0x71, 0x4f, 0xca, 0x20, 0x26, 0x64,
    0x15, 0x5a, 0x07, 0x1d, 0xb0, 0xe5, 0x84, 0x14, 0xe1, 0xba, 0x31, 0xb2,
    0x40, 0x59, 0x25, 0xc4, 0x09, 0x66, 0x8a, 0x13, 0x23, 0xc5, 0x4c, 0x36,
    0x21, 0x03, 0x4d, 0x9f, 0xb9, 0x2c, 0x8d, 0xe7, 0x80, 0xdf, 0xde, 0x16,
    0xb6, 0x77, 0x61, 0x30, 0x86, 0x10, 0x0d, 0xa2, 0x91, 0x93, 0xa0, 0x2a,
    0xd4, 0x2a, 0x54, 0x05, 0x0c, 0x54, 0x78, 0x7b, 0x47, 0x29, 0x9d, 0xe0,
    0x9d, 0xe1, 0x14, 0xd4, 0x20, 0xe6, 0x4c, 0x8c, 0xb7, 0x3e, 0x1c, 0xb3,
    0xb0, 0xea, 0x8c, 0x17, 0x4d, 0x66, 0x1e, 0x12, 0xbe, 0x4d, 0xc6, 0x4d,
    0x0b, 0xaf, 0x3c, 0x24, 0x83, 0x88, 0x61, 0x09, 0x34, 0x81, 0xf3, 0x02,
    0x66, 0x78, 0xcd, 0x54, 0xa2, 0x54, 0x40, 0x01, 0x14, 0x18, 0x95, 0x2a,
    0xa6, 0x4a, 0x74, 0x10, 0x92, 0x11, 0x30, 0x5a, 0x11, 0x92, 0x08, 0x26,
    0xe0, 0x13, 0x86, 0x49, 0xa6, 0xe9, 0x33, 0xd1, 0x00, 0x67, 0x94, 0x2a,
    0x48, 0x16, 0x42, 0x06, 0xc1, 0xc8, 0xd9, 0x88, 0x92, 0xe8, 0x4c, 0x70,
    0x19, 0x8a, 0x90, 0xf1, 0x62, 0x54, 0x7a, 0x6b, 0x54, 0x6d, 0x6f, 0x44,
    0x13, 0x9c, 0x19, 0x95, 0x38, 0x2c, 0x97, 0xf8, 0x2c, 0xca, 0xd7, 0x8d,
    0x63, 0xad, 0x9e, 0x6c, 0xc2, 0x2f, 0x7e, 0xfd, 0x3b, 0xde, 0x08, 0xe1,
    0xee, 0x97, 0x7b, 0x23, 0xff, 0x6f, 0x61, 0x6f, 0xd6, 0xbf, 0x0d, 0x26,
    0x4f, 0x9e, 0x3c, 0xf9, 0x5f, 0x4d, 0xff, 0x37, 0x18, 0xb0, 0x7f, 0x03,
    0x62, 0xa0, 0x66, 0x69, 0xf1, 0x85, 0x62, 0x46, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image6_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x00,
    0x92, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xb5, 0x53, 0xc1, 0x11, 0x80,
    0x30, 0x08, 0x13, 0xc6, 0x72, 0x06, 0x07, 0x70, 0x44, 0x07, 0x70, 0x06,
    0xd6, 0xd2, 0x57, 0x3d, 0xae, 0xb4, 0x0d, 0x72, 0x90, 0x67, 0x49, 0xd3,
    0x14, 0x02, 0x89, 0xc8, 0x56, 0x01, 0x2e, 0x51, 0xcd, 0x14, 0x3e, 0xe5,
    0x78, 0x96, 0xc2, 0x3d, 0x01, 0x9d, 0xb7, 0xda, 0xb5, 0xdf, 0xa4, 0x39,
    0x8c, 0x08, 0x48, 0x74, 0x06, 0xd8, 0x8a, 0xf6, 0x58, 0xba, 0xb0, 0x47,
    0xb4, 0xfd, 0x52, 0x73, 0x19, 0x11, 0xbc, 0xe8, 0xef, 0x50, 0x56, 0x8e,
    0xa7, 0x8e, 0xd1, 0xd4, 0x91, 0x68, 0x7f, 0xc6, 0xfa, 0xb5, 0x11, 0x61,
    0x55, 0x1b, 0x39, 0x35, 0x8e, 0xa3, 0x98, 0xcd, 0xa3, 0x6c, 0xa5, 0xbf,
    0xe1, 0xad, 0xd2, 0x30, 0xaa, 0xa1, 0xf4, 0x84, 0x52, 0xa1, 0xfb, 0xfe,
    0xab, 0x15, 0x91, 0x15, 0x86, 0xc2, 0x19, 0xa2, 0x46, 0xd8, 0xbb, 0x75,
    0x9e, 0x0d, 0x35, 0x2b, 0xed, 0x75, 0x84, 0xb8, 0xf5, 0x71, 0xcb, 0x46,
    0x99, 0xe3, 0x17, 0x18, 0xb4, 0x77, 0xcf, 0xd8, 0x00, 0x3f, 0x31, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image7_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x16,
    0x08, 0x06, 0x00, 0x00, 0x00, 0xc4, 0xb4, 0x6c, 0x3b, 0x00, 0x00, 0x02,
    0x82, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xb5, 0x94, 0x4b, 0x4f, 0x53,
    0x51, 0x10, 0xc7, 0x7f, 0x2d, 0xb7, 0x0f, 0xda, 0x72, 0x4b, 0x7b, 0x5b,
    0xfb, 0xa0, 0x92, 0x96, 0x02, 0x25, 0xc8, 0x06, 0xc3, 0x42, 0x12, 0x59,
    0x69, 0x5c, 0xb8, 0x40, 0x13, 0x13, 0xfc, 0x0a, 0x1a, 0x17, 0x7e, 0x03,
    0x17, 0x2e, 0xdd, 0xf9, 0x15, 0x58, 0xb8, 0x68, 0x62, 0x34, 0x18, 0x0d,
    0x84, 0x95, 0x9b, 0xc6, 0x08, 0x89, 0x18, 0xa5, 0x69, 0xa9, 0xa4, 0x06,
    0x62, 0x0b, 0xf4, 0xde, 0x52, 0xca, 0xab, 0x4f, 0xae, 0x8b, 0xa6, 0x35,
    0xb1, 0x0f, 0xaa, 0x81, 0x49, 0xce, 0xe2, 0x4c, 0x66, 0x7e, 0xe7, 0x9c,
    0xff, 0x99, 0x19, 0x4d, 0x24, 0x12, 0xe1, 0x32, 0x4c, 0x7b, 0x29, 0x54,
    0x40, 0x38, 0x2f, 0x20, 0xab, 0x84, 0xd5, 0x78, 0x54, 0x25, 0x91, 0x2c,
    0xa2, 0xc8, 0x19, 0xcc, 0xe6, 0x3e, 0xfc, 0x3e, 0x13, 0xfe, 0x61, 0x91,
    0xd1, 0xd0, 0xac, 0xa6, 0x5d, 0x9e, 0xa6, 0x93, 0x14, 0x89, 0xd8, 0x4b,
    0x35, 0xb1, 0x39, 0x84, 0xf3, 0xaa, 0x96, 0x80, 0x4f, 0xac, 0x1d, 0x94,
    0xd9, 0x47, 0xd9, 0x3b, 0x25, 0x91, 0x2c, 0x32, 0x12, 0x30, 0x30, 0x3d,
    0xf3, 0xb0, 0x25, 0xbc, 0x2d, 0x78, 0x23, 0xbe, 0xa0, 0x3a, 0x1c, 0x05,
    0x5c, 0xee, 0x89, 0x86, 0xef, 0x30, 0x7f, 0x00, 0xc0, 0xd1, 0x69, 0xa5,
    0x76, 0xf0, 0x7a, 0x8a, 0xeb, 0x13, 0x71, 0x0c, 0xb6, 0x67, 0x4d, 0xf0,
    0x96, 0x1a, 0x67, 0x95, 0xb0, 0x9a, 0x3f, 0x70, 0x33, 0x32, 0x7a, 0x0b,
    0x51, 0x74, 0x21, 0x8a, 0x2e, 0x0c, 0x7a, 0x33, 0x7d, 0xa2, 0x15, 0x00,
    0x4b, 0x6f, 0x4d, 0xc1, 0xc9, 0xa9, 0x41, 0x3e, 0x46, 0x86, 0xc8, 0x2a,
    0x61, 0xf5, 0x6f, 0x46, 0x4b, 0x8d, 0x65, 0xd9, 0x88, 0x7f, 0xd0, 0x8d,
    0xdf, 0x3f, 0xdc, 0xf0, 0xe5, 0x73, 0x49, 0xb2, 0x39, 0x4b, 0xe3, 0xe6,
    0x96, 0x5e, 0x01, 0xce, 0x6c, 0x8c, 0x0d, 0x4e, 0x10, 0x8f, 0xc6, 0x99,
    0x9e, 0xe9, 0x02, 0xac, 0xec, 0x9d, 0x72, 0xfb, 0xce, 0x4d, 0x74, 0x15,
    0x4b, 0xc3, 0x27, 0xf6, 0xd7, 0x56, 0x3c, 0x76, 0x84, 0xce, 0x7e, 0x4c,
    0xb9, 0x62, 0x46, 0x10, 0x24, 0x6c, 0x92, 0x91, 0xd8, 0xeb, 0xef, 0x4d,
    0x8c, 0x96, 0x52, 0x38, 0x9c, 0x3b, 0x38, 0x1d, 0x87, 0x94, 0x85, 0x34,
    0x00, 0xa5, 0x1e, 0x23, 0xba, 0x8a, 0x07, 0x00, 0x8f, 0xdb, 0xda, 0x88,
    0x33, 0x99, 0xb4, 0xf8, 0x06, 0xaa, 0x04, 0x82, 0x4a, 0x77, 0x60, 0x39,
    0xe3, 0x26, 0x23, 0xf7, 0xa1, 0xab, 0x78, 0x28, 0xf5, 0x18, 0x91, 0x15,
    0x99, 0xcf, 0xdf, 0xbe, 0xa0, 0xd7, 0x8f, 0xf1, 0x73, 0x2b, 0xc5, 0xd6,
    0xaf, 0x02, 0x06, 0xbd, 0x19, 0x80, 0x5c, 0x4e, 0x42, 0xce, 0xb8, 0xbb,
    0x03, 0x4b, 0x57, 0x7a, 0x59, 0x5b, 0x89, 0x50, 0x16, 0xd2, 0xe8, 0xab,
    0x05, 0xbc, 0xfd, 0x16, 0x0c, 0xfa, 0x12, 0xef, 0xde, 0xbf, 0x20, 0xbd,
    0xab, 0xe0, 0x71, 0x49, 0x14, 0x4b, 0xc7, 0x9c, 0x9c, 0x9c, 0xb1, 0x1e,
    0x8d, 0xb6, 0x42, 0xb4, 0x91, 0xc2, 0x51, 0x60, 0x73, 0xe7, 0x2b, 0x00,
    0x65, 0x21, 0x4d, 0x59, 0x48, 0x33, 0x7e, 0x6d, 0xb0, 0x26, 0x85, 0x4b,
    0x02, 0x6a, 0x1f, 0xb8, 0x2f, 0x2b, 0xac, 0xad, 0xae, 0x10, 0x1a, 0x6f,
    0x2e, 0xe5, 0x96, 0x60, 0xbb, 0x34, 0xa7, 0xb1, 0x1a, 0xaa, 0x2c, 0x2d,
    0x2f, 0x90, 0xcf, 0x25, 0x1b, 0x4b, 0xab, 0xa6, 0xd1, 0x09, 0xc7, 0x8d,
    0xb8, 0xed, 0xed, 0x25, 0x02, 0x41, 0x05, 0xbb, 0x34, 0xd7, 0x44, 0x6e,
    0xdb, 0xd2, 0xa3, 0xa1, 0x59, 0x4d, 0x71, 0xff, 0xb9, 0xfa, 0xea, 0x4d,
    0x9e, 0x80, 0x4f, 0x64, 0xc0, 0x75, 0x02, 0x40, 0xb5, 0x92, 0x65, 0x77,
    0x27, 0xc9, 0xea, 0xa7, 0x12, 0x81, 0x20, 0x8c, 0x8c, 0x3d, 0xfd, 0xb7,
    0xce, 0xab, 0x5b, 0x56, 0x09, 0xab, 0xcb, 0x8b, 0x6b, 0x78, 0xbd, 0x66,
    0x52, 0xa9, 0x3f, 0xb7, 0x9d, 0x9c, 0xba, 0xd1, 0x71, 0x56, 0x9c, 0x3b,
    0xdd, 0xea, 0xcf, 0xbc, 0xf7, 0x20, 0xc8, 0xfd, 0xbb, 0x46, 0xbc, 0x03,
    0x51, 0x16, 0x97, 0x92, 0xd8, 0x9d, 0xb6, 0x8e, 0x79, 0xff, 0x3d, 0x36,
    0xeb, 0x6d, 0x7d, 0xe1, 0xe0, 0x7c, 0xde, 0x7e, 0x31, 0xe0, 0xf4, 0xe6,
    0x06, 0x00, 0x89, 0x1f, 0x25, 0x00, 0x4c, 0xaa, 0xb5, 0x53, 0x78, 0x77,
    0xe0, 0x62, 0x75, 0x8c, 0xb7, 0x1f, 0x0a, 0x8d, 0x7d, 0x20, 0x18, 0xc2,
    0xe2, 0x76, 0xb7, 0xfd, 0x38, 0xe8, 0xa2, 0x2a, 0xea, 0x36, 0x3f, 0x3f,
    0xaf, 0x1a, 0x7a, 0x62, 0xa4, 0x76, 0x25, 0x1e, 0x3d, 0x79, 0x4c, 0xaf,
    0xc1, 0x74, 0x31, 0xe0, 0x7f, 0xb5, 0xdf, 0x11, 0x5a, 0xec, 0xa5, 0x08,
    0xf8, 0x05, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};


/*
 *  Constructs a OSGMainView as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 *
 */
OSGMainView::OSGMainView( QWidget* parent, const char* name, WFlags fl )
    : QMainWindow( parent, name, fl ),
      image0( (const char **) image0_data )
{
    (void)statusBar();
    QImage img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    img.loadFromData( image3_data, sizeof( image3_data ), "PNG" );
    image3 = img;
    img.loadFromData( image4_data, sizeof( image4_data ), "PNG" );
    image4 = img;
    img.loadFromData( image5_data, sizeof( image5_data ), "PNG" );
    image5 = img;
    img.loadFromData( image6_data, sizeof( image6_data ), "PNG" );
    image6 = img;
    img.loadFromData( image7_data, sizeof( image7_data ), "PNG" );
    image7 = img;
    if ( !name )
	setName( "OSGMainView" );
    setIcon( image0 );
    setCentralWidget( new QWidget( this, "qt_central_widget" ) );
    OSGMainViewLayout = new QVBoxLayout( centralWidget(), 0, 0, "OSGMainViewLayout"); 

    _main_frame = new QFrame( centralWidget(), "_main_frame" );
    _main_frame->setFrameShape( QFrame::StyledPanel );
    _main_frame->setFrameShadow( QFrame::Raised );
    OSGMainViewLayout->addWidget( _main_frame );

    // actions
    fileNewAction = new QAction( this, "fileNewAction" );
    fileNewAction->setIconSet( QIconSet( image1 ) );
    fileOpenAction = new QAction( this, "fileOpenAction" );
    fileOpenAction->setIconSet( QIconSet( image2 ) );
    fileSaveAction = new QAction( this, "fileSaveAction" );
    fileSaveAction->setIconSet( QIconSet( image3 ) );
    fileSaveAsAction = new QAction( this, "fileSaveAsAction" );
    filePrintAction = new QAction( this, "filePrintAction" );
    filePrintAction->setIconSet( QIconSet( image4 ) );
    fileExitAction = new QAction( this, "fileExitAction" );
    helpContentsAction = new QAction( this, "helpContentsAction" );
    helpIndexAction = new QAction( this, "helpIndexAction" );
    helpAboutAction = new QAction( this, "helpAboutAction" );
    createViewAction = new QAction( this, "createViewAction" );
    createViewAction->setIconSet( QIconSet( image5 ) );
    fileInsertAction = new QAction( this, "fileInsertAction" );
    renderOC = new QActionGroup( this, "renderOC" );
    renderOC->setUsesDropDown( TRUE );
    renderOCOff = new QAction( renderOC, "renderOCOff" );
    renderOCOff->setToggleAction( TRUE );
    renderOCOff->setOn( TRUE );
    renderOCStopAndWait = new QAction( renderOC, "renderOCStopAndWait" );
    renderOCStopAndWait->setToggleAction( TRUE );
    renderOCMultiFrame = new QAction( renderOC, "renderOCMultiFrame" );
    renderOCMultiFrame->setToggleAction( TRUE );
    renderOCHierarchicalMultiFrame = new QAction( renderOC, "renderOCHierarchicalMultiFrame" );
    renderOCHierarchicalMultiFrame->setToggleAction( TRUE );
    renderShadow = new QActionGroup( this, "renderShadow" );
    renderShadow->setUsesDropDown( TRUE );
    renderShadowOff = new QAction( renderShadow, "renderShadowOff" );
    renderShadowOff->setToggleAction( TRUE );
    renderShadowOff->setOn( TRUE );
    renderShadowStandard = new QAction( renderShadow, "renderShadowStandard" );
    renderShadowStandard->setToggleAction( TRUE );
    renderShadowPerspective = new QAction( renderShadow, "renderShadowPerspective" );
    renderShadowPerspective->setToggleAction( TRUE );
    renderShadowDitherF = new QAction( renderShadow, "renderShadowDitherF" );
    renderShadowDitherF->setToggleAction( TRUE );
    renderShadowPCF = new QAction( renderShadow, "renderShadowPCF" );
    renderShadowPCF->setToggleAction( TRUE );
    renderShadowPCSS = new QAction( renderShadow, "renderShadowPCSS" );
    renderShadowPCSS->setToggleAction( TRUE );
    renderShadowVariance = new QAction( renderShadow, "renderShadowVariance" );
    renderShadowVariance->setToggleAction( TRUE );
    statistic = new QAction( this, "statistic" );
    statistic->setToggleAction( TRUE );
    statistic->setIconSet( QIconSet( image6 ) );
    headlight = new QAction( this, "headlight" );
    headlight->setToggleAction( TRUE );
    headlight->setOn( TRUE );
    headlight->setIconSet( QIconSet( image7 ) );


    // toolbars
    toolBar = new QToolBar( QString(""), this, DockTop ); 

    fileNewAction->addTo( toolBar );
    fileOpenAction->addTo( toolBar );
    fileSaveAction->addTo( toolBar );
    Toolbar = new QToolBar( QString(""), this, DockTop ); 

    headlight->addTo( Toolbar );
    statistic->addTo( Toolbar );


    // menubar
    menubar = new QMenuBar( this, "menubar" );


    fileMenu = new QPopupMenu( this );
    fileNewAction->addTo( fileMenu );
    fileOpenAction->addTo( fileMenu );
    fileInsertAction->addTo( fileMenu );
    fileSaveAction->addTo( fileMenu );
    fileSaveAsAction->addTo( fileMenu );
    fileMenu->insertSeparator();
    fileExitAction->addTo( fileMenu );
    menubar->insertItem( QString(""), fileMenu, 1 );

    PopupMenu = new QPopupMenu( this );
    popupMenu_8 = new QPopupMenu( this );
    PopupMenu->insertItem( renderOC->iconSet(), tr( "OcclusionCulling" ), popupMenu_8 );
    renderOCOff->addTo( popupMenu_8 );
    renderOCStopAndWait->addTo( popupMenu_8 );
    renderOCMultiFrame->addTo( popupMenu_8 );
    renderOCHierarchicalMultiFrame->addTo( popupMenu_8 );
    popupMenu_13 = new QPopupMenu( this );
    PopupMenu->insertItem( renderShadow->iconSet(), tr( "Shadow" ), popupMenu_13 );
    renderShadowOff->addTo( popupMenu_13 );
    renderShadowStandard->addTo( popupMenu_13 );
    renderShadowPerspective->addTo( popupMenu_13 );
    renderShadowDitherF->addTo( popupMenu_13 );
    renderShadowPCF->addTo( popupMenu_13 );
    renderShadowPCSS->addTo( popupMenu_13 );
    renderShadowVariance->addTo( popupMenu_13 );
    menubar->insertItem( QString(""), PopupMenu, 2 );

    helpMenu = new QPopupMenu( this );
    helpContentsAction->addTo( helpMenu );
    helpIndexAction->addTo( helpMenu );
    helpMenu->insertSeparator();
    helpAboutAction->addTo( helpMenu );
    menubar->insertItem( QString(""), helpMenu, 3 );

    languageChange();
    resize( QSize(715, 553).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( fileNewAction, SIGNAL( activated() ), this, SLOT( fileNew() ) );
    connect( fileOpenAction, SIGNAL( activated() ), this, SLOT( fileOpen() ) );
    connect( fileSaveAction, SIGNAL( activated() ), this, SLOT( fileSave() ) );
    connect( fileSaveAsAction, SIGNAL( activated() ), this, SLOT( fileSaveAs() ) );
    connect( filePrintAction, SIGNAL( activated() ), this, SLOT( filePrint() ) );
    connect( fileExitAction, SIGNAL( activated() ), this, SLOT( fileExit() ) );
    connect( helpIndexAction, SIGNAL( activated() ), this, SLOT( helpIndex() ) );
    connect( helpContentsAction, SIGNAL( activated() ), this, SLOT( helpContents() ) );
    connect( helpAboutAction, SIGNAL( activated() ), this, SLOT( helpAbout() ) );
    connect( fileInsertAction, SIGNAL( activated() ), this, SLOT( fileInsert() ) );
    connect( statistic, SIGNAL( toggled(bool) ), this, SLOT( setStatistics(bool) ) );
    connect( renderShadowOff, SIGNAL( activated() ), this, SLOT( shadowOff() ) );
    connect( renderShadowStandard, SIGNAL( activated() ), this, SLOT( shadowStandard() ) );
    connect( renderShadowPerspective, SIGNAL( activated() ), this, SLOT( shadowPerspective() ) );
    connect( renderShadowDitherF, SIGNAL( activated() ), this, SLOT( shadowDither() ) );
    connect( renderShadowPCF, SIGNAL( activated() ), this, SLOT( shadowPCF() ) );
    connect( renderShadowPCSS, SIGNAL( activated() ), this, SLOT( shadowPCSS() ) );
    connect( renderShadowVariance, SIGNAL( activated() ), this, SLOT( shadowVariance() ) );
    connect( renderOCOff, SIGNAL( activated() ), this, SLOT( ocOff() ) );
    connect( renderOCStopAndWait, SIGNAL( activated() ), this, SLOT( ocStopAndWait() ) );
    connect( renderOCMultiFrame, SIGNAL( activated() ), this, SLOT( ocMultiFrame() ) );
    connect( renderOCHierarchicalMultiFrame, SIGNAL( activated() ), this, SLOT( ocHierarchicalMultiFrame() ) );
    connect( headlight, SIGNAL( toggled(bool) ), this, SLOT( setHeadlight(bool) ) );
    init();
}

/*
 *  Destroys the object and frees any allocated resources
 */
OSGMainView::~OSGMainView()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void OSGMainView::languageChange()
{
    setCaption( tr( "OpenSG Scene Viewer" ) );
    fileNewAction->setText( tr( "New" ) );
    fileNewAction->setMenuText( tr( "&New" ) );
    fileNewAction->setAccel( tr( "Ctrl+N" ) );
    fileOpenAction->setText( tr( "Open" ) );
    fileOpenAction->setMenuText( tr( "&Open..." ) );
    fileOpenAction->setAccel( tr( "Ctrl+O" ) );
    fileSaveAction->setText( tr( "Save" ) );
    fileSaveAction->setMenuText( tr( "&Save" ) );
    fileSaveAction->setAccel( tr( "Ctrl+S" ) );
    fileSaveAsAction->setText( tr( "Save As" ) );
    fileSaveAsAction->setMenuText( tr( "Save &As..." ) );
    fileSaveAsAction->setAccel( QString::null );
    filePrintAction->setText( tr( "Print" ) );
    filePrintAction->setMenuText( tr( "&Print..." ) );
    filePrintAction->setAccel( tr( "Ctrl+P" ) );
    fileExitAction->setText( tr( "Exit" ) );
    fileExitAction->setMenuText( tr( "E&xit" ) );
    fileExitAction->setAccel( QString::null );
    helpContentsAction->setText( tr( "Contents" ) );
    helpContentsAction->setMenuText( tr( "&Contents..." ) );
    helpContentsAction->setAccel( QString::null );
    helpIndexAction->setText( tr( "Index" ) );
    helpIndexAction->setMenuText( tr( "&Index..." ) );
    helpIndexAction->setAccel( QString::null );
    helpAboutAction->setText( tr( "About" ) );
    helpAboutAction->setMenuText( tr( "&About..." ) );
    helpAboutAction->setAccel( QString::null );
    createViewAction->setText( tr( "Create View" ) );
    createViewAction->setMenuText( tr( "Create View" ) );
    fileInsertAction->setText( tr( "Insert" ) );
    fileInsertAction->setMenuText( tr( "Insert" ) );
    renderOC->setText( tr( "OcclusionCulling" ) );
    renderOC->setMenuText( tr( "OcclusionCulling" ) );
    renderOCOff->setText( tr( "Off" ) );
    renderOCOff->setMenuText( tr( "Off" ) );
    renderOCStopAndWait->setText( tr( "Stop And Wait" ) );
    renderOCStopAndWait->setMenuText( tr( "Stop And Wait" ) );
    renderOCMultiFrame->setText( tr( "Multi Frame" ) );
    renderOCMultiFrame->setMenuText( tr( "Multi Frame" ) );
    renderOCHierarchicalMultiFrame->setText( tr( "Hierarchical Multi Frame" ) );
    renderOCHierarchicalMultiFrame->setMenuText( tr( "Hierarchical Multi Frame" ) );
    renderShadow->setText( tr( "Shadow" ) );
    renderShadow->setMenuText( tr( "Shadow" ) );
    renderShadowOff->setText( tr( "Off" ) );
    renderShadowOff->setMenuText( tr( "Off" ) );
    renderShadowStandard->setText( tr( "Standard" ) );
    renderShadowStandard->setMenuText( tr( "Standard" ) );
    renderShadowPerspective->setText( tr( "Perspective" ) );
    renderShadowPerspective->setMenuText( tr( "Perspective" ) );
    renderShadowDitherF->setText( tr( "Dither" ) );
    renderShadowDitherF->setMenuText( tr( "Dither" ) );
    renderShadowPCF->setText( tr( "PCF" ) );
    renderShadowPCF->setMenuText( tr( "PCF" ) );
    renderShadowPCSS->setText( tr( "PCSS" ) );
    renderShadowPCSS->setMenuText( tr( "PCSS" ) );
    renderShadowVariance->setText( tr( "Variance" ) );
    renderShadowVariance->setMenuText( tr( "Variance" ) );
    statistic->setText( tr( "Statistic" ) );
    statistic->setMenuText( tr( "Statistic" ) );
    headlight->setText( tr( "Headlight" ) );
    headlight->setMenuText( tr( "Headlight" ) );
    toolBar->setLabel( tr( "Tools" ) );
    Toolbar->setLabel( tr( "Toolbar" ) );
    if (menubar->findItem(1))
        menubar->findItem(1)->setText( tr( "&File" ) );
    PopupMenu->changeItem( PopupMenu->idAt( 0 ), tr( "OcclusionCulling" ) );
    PopupMenu->changeItem( PopupMenu->idAt( 1 ), tr( "Shadow" ) );
    if (menubar->findItem(2))
        menubar->findItem(2)->setText( tr( "Render" ) );
    if (menubar->findItem(3))
        menubar->findItem(3)->setText( tr( "&Help" ) );
}

