diff -r -C 3 ARToolKitPlus/include/ARToolKitPlus/TrackerImpl.h ARToolKitPlus.dr/include/ARToolKitPlus/TrackerImpl.h
*** ARToolKitPlus/include/ARToolKitPlus/TrackerImpl.h	2005-08-17 13:36:14.000000000 -0500
--- ARToolKitPlus.dr/include/ARToolKitPlus/TrackerImpl.h	2005-09-05 19:42:34.136533629 -0500
***************
*** 78,90 ****
  		MAX_IMAGE_PATTERNS = __MAX_IMAGE_PATTERNS,
  		WORK_SIZE = 1024*MAX_IMAGE_PATTERNS,
  
- 		PIX_FORMAT = __PIX_FORMAT,
- 
- 		// calculate pixel size from pixel format
- 		PIX_SIZE = PIX_FORMAT==PIXEL_FORMAT_LUM ? 1 :
- 		          (PIX_FORMAT==PIXEL_FORMAT_RGB565 ? 2 :
- 				  ((PIX_FORMAT==PIXEL_FORMAT_RGB || PIX_FORMAT==PIXEL_FORMAT_BGR) ? 3 : 4) ),
- 
  #ifdef SMALL_LUM8_TABLE
  		LUM_TABLE_SIZE = (0xffff >> 6) + 1,
  #else
--- 78,83 ----
***************
*** 92,97 ****
--- 85,97 ----
  #endif
  	};
  
+     // These are used in comparisons with other enums, therefore they
+     // can't be anonymous enums
+     static const int PIX_FORMAT = __PIX_FORMAT;
+     static const int PIX_SIZE = PIX_FORMAT==PIXEL_FORMAT_LUM ? 1 :
+ 		          (PIX_FORMAT==PIXEL_FORMAT_RGB565 ? 2 :
+ 				  ((PIX_FORMAT==PIXEL_FORMAT_RGB || PIX_FORMAT==PIXEL_FORMAT_BGR) ? 3 : 4) );
+ 
  	TrackerImpl();
  	virtual ~TrackerImpl();
  
diff -r -C 3 ARToolKitPlus/include/ARToolKitPlus/TrackerMultiMarkerImpl.h ARToolKitPlus.dr/include/ARToolKitPlus/TrackerMultiMarkerImpl.h
*** ARToolKitPlus/include/ARToolKitPlus/TrackerMultiMarkerImpl.h	2005-08-17 13:36:14.000000000 -0500
--- ARToolKitPlus.dr/include/ARToolKitPlus/TrackerMultiMarkerImpl.h	2005-09-05 18:36:58.000000000 -0500
***************
*** 130,137 ****
  
  	ARMultiMarkerInfoT  *config;
  
! 	int				detectedMarkerIDs[MAX_LOAD_PATTERNS];
! 	ARMarkerInfo	detectedMarkers[MAX_LOAD_PATTERNS];
  };
  
  
--- 130,137 ----
  
  	ARMultiMarkerInfoT  *config;
  
! 	int				detectedMarkerIDs[AR_TEMPL_TRACKER::MAX_LOAD_PATTERNS];
! 	ARMarkerInfo	detectedMarkers[AR_TEMPL_TRACKER::MAX_LOAD_PATTERNS];
  };
  
  
diff -r -C 3 ARToolKitPlus/src/TrackerImpl.cxx ARToolKitPlus.dr/src/TrackerImpl.cxx
*** ARToolKitPlus/src/TrackerImpl.cxx	2005-08-17 13:24:32.000000000 -0500
--- ARToolKitPlus.dr/src/TrackerImpl.cxx	2005-09-05 10:44:37.000000000 -0500
***************
*** 102,108 ****
  	undistMode = UNDIST_STD;
  	undistO2ITable = NULL;
  	//undistI2OTable = NULL;
! 	arParamObserv2Ideal_func = arParamObserv2Ideal_std;
  	//arParamIdeal2Observ_func = arParamIdeal2Observ_std;
  }
  
--- 102,108 ----
  	undistMode = UNDIST_STD;
  	undistO2ITable = NULL;
  	//undistI2OTable = NULL;
! 	arParamObserv2Ideal_func = &AR_TEMPL_TRACKER::arParamObserv2Ideal_std;
  	//arParamIdeal2Observ_func = arParamIdeal2Observ_std;
  }
  
***************
*** 348,364 ****
  	switch(undistMode)
  	{
  	case UNDIST_NONE:
! 		arParamObserv2Ideal_func = arParamObserv2Ideal_none;
  		//arParamIdeal2Observ_func = arParamIdeal2Observ_none;
  		break;
  
  	case UNDIST_STD:
! 		arParamObserv2Ideal_func = arParamObserv2Ideal_std;
  		//arParamIdeal2Observ_func = arParamIdeal2Observ_std;
  		break;
  
  	case UNDIST_LUT:
! 		arParamObserv2Ideal_func = arParamObserv2Ideal_LUT;
  		//arParamIdeal2Observ_func = arParamIdeal2Observ_LUT;
  		break;
  	}
--- 348,364 ----
  	switch(undistMode)
  	{
  	case UNDIST_NONE:
! 		arParamObserv2Ideal_func = &AR_TEMPL_TRACKER::arParamObserv2Ideal_none;
  		//arParamIdeal2Observ_func = arParamIdeal2Observ_none;
  		break;
  
  	case UNDIST_STD:
! 		arParamObserv2Ideal_func = &AR_TEMPL_TRACKER::arParamObserv2Ideal_std;
  		//arParamIdeal2Observ_func = arParamIdeal2Observ_std;
  		break;
  
  	case UNDIST_LUT:
! 		arParamObserv2Ideal_func = &AR_TEMPL_TRACKER::arParamObserv2Ideal_LUT;
  		//arParamIdeal2Observ_func = arParamIdeal2Observ_LUT;
  		break;
  	}
***************
*** 431,439 ****
  #ifdef __INTEL_COMPILER
  	sprintf(compilerstr, "Intel C++ v%d.%d", __INTEL_COMPILER/100, __INTEL_COMPILER%100);
  #   pragma message ( ">> ARToolKitPlus: compiling with Intel Compiler" )
! #else
  	sprintf(compilerstr, "MS C++ v%d.%d", _MSC_VER/100, _MSC_VER%100);
  //#   pragma message ( ">> ARToolKitPlus: compiling with Microsoft Compiler" )
  #endif
  
  //
--- 431,443 ----
  #ifdef __INTEL_COMPILER
  	sprintf(compilerstr, "Intel C++ v%d.%d", __INTEL_COMPILER/100, __INTEL_COMPILER%100);
  #   pragma message ( ">> ARToolKitPlus: compiling with Intel Compiler" )
! #elif _MSC_VER
  	sprintf(compilerstr, "MS C++ v%d.%d", _MSC_VER/100, _MSC_VER%100);
  //#   pragma message ( ">> ARToolKitPlus: compiling with Microsoft Compiler" )
+ #elif __GNUC__
+ 	sprintf(compilerstr, "GCC %d.%d.%d", __GNUC__, __GNUC_MINOR__,  __GNUC_PATCHLEVEL__);
+ #else
+ 	sprintf(compilerstr, "Unknown Compiler");
  #endif
  
  //
diff -r -C 3 ARToolKitPlus/src/TrackerMultiMarkerImpl.cxx ARToolKitPlus.dr/src/TrackerMultiMarkerImpl.cxx
*** ARToolKitPlus/src/TrackerMultiMarkerImpl.cxx	2005-08-17 13:36:14.000000000 -0500
--- ARToolKitPlus.dr/src/TrackerMultiMarkerImpl.cxx	2005-09-05 18:38:28.000000000 -0500
***************
*** 27,41 ****
  ARMM_TEMPL_FUNC
  ARMM_TEMPL_TRACKER::TrackerMultiMarkerImpl(int nWidth, int nHeight)
  {
! 	logger = NULL;
  
! 	screenWidth = nWidth;
! 	screenHeight = nHeight;
  
  	useDetectLite = true;
  	numDetected = 0;
  
! 	thresh = 150;
  }
  
  
--- 27,41 ----
  ARMM_TEMPL_FUNC
  ARMM_TEMPL_TRACKER::TrackerMultiMarkerImpl(int nWidth, int nHeight)
  {
! 	this->logger = NULL;
  
! 	this->screenWidth = nWidth;
! 	this->screenHeight = nHeight;
  
  	useDetectLite = true;
  	numDetected = 0;
  
! 	this->thresh = 150;
  }
  
  
***************
*** 52,62 ****
  {
  	// init some "static" from TrackerMultiMarker
  	//
! 	if(marker_infoTWO==NULL)
  		//marker_infoTWO = new ARMarkerInfo2[MAX_IMAGE_PATTERNS];
! 		marker_infoTWO = artkp_Alloc<ARMarkerInfo2>(MAX_IMAGE_PATTERNS);
  
! 	logger = nLogger;
  
  	if(!loadCameraFile(nCamParamFile, nNearClip, nFarClip))
  		return false;
--- 52,62 ----
  {
  	// init some "static" from TrackerMultiMarker
  	//
! 	if(this->marker_infoTWO==NULL)
  		//marker_infoTWO = new ARMarkerInfo2[MAX_IMAGE_PATTERNS];
! 		this->marker_infoTWO = artkp_Alloc<ARMarkerInfo2>(AR_TEMPL_TRACKER::MAX_IMAGE_PATTERNS);
  
! 	this->logger = nLogger;
  
  	if(!loadCameraFile(nCamParamFile, nNearClip, nFarClip))
  		return false;
***************
*** 64,71 ****
      if((config = arMultiReadConfigFile(nMultiFile)) == NULL )
          return false;
  
! 	if(logger)
! 		logger->artLogEx("INFO: %d markers loaded from config file", config->marker_num);
  
      return true;
  }
--- 64,71 ----
      if((config = arMultiReadConfigFile(nMultiFile)) == NULL )
          return false;
  
! 	if(this->logger)
! 		this->logger->artLogEx("INFO: %d markers loaded from config file", config->marker_num);
  
      return true;
  }
***************
*** 80,91 ****
  
  	if(useDetectLite)
  	{
! 		if(arDetectMarkerLite(const_cast<unsigned char*>(nImage), thresh, &tmp_markers, &tmpNumDetected) < 0)
  			return 0;
  	}
  	else
  	{
! 		if(arDetectMarker(const_cast<unsigned char*>(nImage), thresh, &tmp_markers, &tmpNumDetected) < 0)
  			return 0;
  	}
  
--- 80,91 ----
  
  	if(useDetectLite)
  	{
! 		if(arDetectMarkerLite(const_cast<unsigned char*>(nImage), this->thresh, &tmp_markers, &tmpNumDetected) < 0)
  			return 0;
  	}
  	else
  	{
! 		if(arDetectMarker(const_cast<unsigned char*>(nImage), this->thresh, &tmp_markers, &tmpNumDetected) < 0)
  			return 0;
  	}
  
***************
*** 99,105 ****
      if((arMultiGetTransMat(tmp_markers, tmpNumDetected, config)) < 0)
  		return 0;
  
! 	convertTransformationMatrixToOpenGLStyle(config->trans, gl_para);
  	return tmpNumDetected;
  }
  
--- 99,105 ----
      if((arMultiGetTransMat(tmp_markers, tmpNumDetected, config)) < 0)
  		return 0;
  
! 	convertTransformationMatrixToOpenGLStyle(config->trans, this->gl_para);
  	return tmpNumDetected;
  }
  
***************
*** 139,145 ****
  {
  	size_t size = sizeof(ARMM_TEMPL_TRACKER);
  
! 	size += getDynamicMemoryRequirements();
  
  	return size;
  }
--- 139,145 ----
  {
  	size_t size = sizeof(ARMM_TEMPL_TRACKER);
  
! 	size += AR_TEMPL_TRACKER::getDynamicMemoryRequirements();
  
  	return size;
  }
diff -r -C 3 ARToolKitPlus/src/TrackerSingleMarkerImpl.cxx ARToolKitPlus.dr/src/TrackerSingleMarkerImpl.cxx
*** ARToolKitPlus/src/TrackerSingleMarkerImpl.cxx	2005-06-26 14:50:30.000000000 -0500
--- ARToolKitPlus.dr/src/TrackerSingleMarkerImpl.cxx	2005-09-05 17:00:44.000000000 -0500
***************
*** 19,25 ****
  #error ARToolKitPlus/TrackerSingleMarkerImpl.cxx should not be compiled directly, but only if included from ARToolKitPlus/TrackerSingleMarkerImpl.h
  #endif
  
- 
  namespace ARToolKitPlus
  {
  
--- 19,24 ----
***************
*** 27,38 ****
  ARSM_TEMPL_FUNC
  ARSM_TEMPL_TRACKER::TrackerSingleMarkerImpl(int nWidth, int nHeight)
  {
! 	logger = NULL;
  
! 	screenWidth = nWidth;
! 	screenHeight = nHeight;
  
! 	thresh = 100;
  
  	patt_width     = 80;
  	patt_center[0] = patt_center[1] = 0.0;
--- 26,37 ----
  ARSM_TEMPL_FUNC
  ARSM_TEMPL_TRACKER::TrackerSingleMarkerImpl(int nWidth, int nHeight)
  {
! 	this->logger = NULL;
  
! 	this->screenWidth = nWidth;
! 	this->screenHeight = nHeight;
  
! 	this->thresh = 100;
  
  	patt_width     = 80;
  	patt_center[0] = patt_center[1] = 0.0;
***************
*** 49,67 ****
  ARSM_TEMPL_FUNC bool
  ARSM_TEMPL_TRACKER::init(const char* nCamParamFile, float nNearClip, float nFarClip, ARToolKitPlus::Logger* nLogger)
  {
! 	if(!checkPixelFormat())
  		return false;
  
  	// init some "static" members from artoolkit
  	// (some systems don't like such large global members
  	// so we allocate this manually)
  	//
! 	if(marker_infoTWO==NULL)
  		//marker_infoTWO = new ARMarkerInfo2[MAX_IMAGE_PATTERNS];
! 		marker_infoTWO = artkp_Alloc<ARMarkerInfo2>(MAX_IMAGE_PATTERNS);
  
  	if(nLogger)
! 		logger = nLogger;
  
  	//initialize applications
  	if(nCamParamFile)
--- 48,66 ----
  ARSM_TEMPL_FUNC bool
  ARSM_TEMPL_TRACKER::init(const char* nCamParamFile, float nNearClip, float nFarClip, ARToolKitPlus::Logger* nLogger)
  {
! 	if(!this->checkPixelFormat())
  		return false;
  
  	// init some "static" members from artoolkit
  	// (some systems don't like such large global members
  	// so we allocate this manually)
  	//
! 	if(this->marker_infoTWO==NULL)
  		//marker_infoTWO = new ARMarkerInfo2[MAX_IMAGE_PATTERNS];
! 		this->marker_infoTWO = artkp_Alloc<ARMarkerInfo2>(__MAX_IMAGE_PATTERNS);
  
  	if(nLogger)
! 		this->logger = nLogger;
  
  	//initialize applications
  	if(nCamParamFile)
***************
*** 82,88 ****
  
      // detect the markers in the video frame
  	//
!     if(arDetectMarker(const_cast<unsigned char*>(nImage), thresh, &marker_info, &marker_num) < 0)
          return -1;
  
      // find best visible marker
--- 81,87 ----
  
      // detect the markers in the video frame
  	//
!     if(arDetectMarker(const_cast<unsigned char*>(nImage), this->thresh, &marker_info, &marker_num) < 0)
          return -1;
  
      // find best visible marker
***************
*** 116,122 ****
  		ARFloat  patt_trans[3][4];
  
  		arGetTransMat(&marker_info[k], patt_center, patt_width, patt_trans);
! 		convertTransformationMatrixToOpenGLStyle(patt_trans, gl_para);
  	}
  
  	return marker_info[k].id;
--- 115,121 ----
  		ARFloat  patt_trans[3][4];
  
  		arGetTransMat(&marker_info[k], patt_center, patt_width, patt_trans);
! 		convertTransformationMatrixToOpenGLStyle(patt_trans, this->gl_para);
  	}
  
  	return marker_info[k].id;
***************
*** 130,137 ****
  
      if(patt_id<0)
  	{
! 		if(logger)
! 			logger->artLogEx("ARToolKitPlus: error loading pattern '%s'", nFileName);
  	}
  
  	return patt_id;
--- 129,136 ----
  
      if(patt_id<0)
  	{
! 		if(this->logger)
! 			this->logger->artLogEx("ARToolKitPlus: error loading pattern '%s'", nFileName);
  	}
  
  	return patt_id;
***************
*** 177,183 ****
  {
  	size_t size = sizeof(ARSM_TEMPL_TRACKER);
  
! 	size += getDynamicMemoryRequirements();
  
  	return size;
  }
--- 176,182 ----
  {
  	size_t size = sizeof(ARSM_TEMPL_TRACKER);
  
! 	size += ARSM_TEMPL_TRACKER::getDynamicMemoryRequirements();
  
  	return size;
  }
