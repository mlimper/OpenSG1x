
Before you build OpenSG make sure that the following requirements for 
your plattform are met :

Required Packages : 
===================

Plattform :
===========

    SGI (>= 6.5)
    ------------

        Compiler : > MIPS Pro 7.3.*
        Make     : > gmake 3.78.1
        glut     : 3.7

    Linux (so far only tested on RedHat > 7.0)
    -----

        Compiler : System compiler + 
                   patch gcc/RHBA-2000-132 and glibc/RHBA-2000-079 (RH 7.0).

                   gcc >= 3.0 not yet

        Make     : > gmake 3.78.1
        glut     : 3.7

    NT 
    -----------------

        During this first dynamic developments, where only infrequent builds 
        are done on NT, we do not use VisualStudio or some other
        IDE (of course only if you do not count emacs to be one :-)). So we 
        actually use gmake in combination with cygwin. So when you get a new
        gmake PLEASE DO NOT try to build it with native windows dev tools,
        use the gcc provided by cygwin instead. You can download an build the
        usual unix distribution using the cygwin environment. For OpenSG, 
        please do not try to use a microsoft compiler, even if there are 
        config files available. Believe us, it will fail and we are 
        working on it to find all the ways around their interpretation of
        doing C++ compilations.

        Compiler : Intel C++ > 4.5 + latest patchset
        Cygwin   : >= 1.1.4
        gmake    : >  gmake 3.78.1
        glut     : 3.7

        STL      : The current default is the original Microsoft 
                   implementation. Since there where some problems using
                   other implementations and the MSVC runtime libraries.

OpenSG Configuration :
======================

We actually have a lovely configure script now, but it's still a bit
experimental.

See using_configure on how to use it. Feedback on success
(or failure) welcome!


How to use configure is quite straight forward. But be warned it is still
considered to be experimental. See ./configure --help for available options.


IMPORTANT NOTE
If you created the links required by previous versions of the configure method
delete them and update again.

!! MORE IMPORTANT NOTE !!

As they changed the internal macros from 2.13 to 2.52 and cygwin starts
to ship 2.52 : right now you must not use 2.52, download 2.13, configure it,
install it and use it. 

!!!! MOST IMPORTANT NOTE !!!!

As this file might be slightly out of date, PLEASE refer to ./configure --help
for the lates information.

!!!!!! UNBELIEVABLE IMPORTANT NOTE !!!!!!

The bash command in front of ./configure (CYGWIN) is intended and does not
denote a prompt, include it otherwise it will definitively not work.


All platforms

cd <..../OpenSG>
autoconf

IRIX :

./configure --with-compiler=CC --with-stl=<stl-dir>
		    --with-qt=<qt-dir> --with-glut=<glut-dir>
			--prefix=<install-dir>
cd Builds/mips-sgi-irix6.5-CC
gmake


CYGWIN (ICL4.5, including patch P000223C, P000421C, p000512c, P000616C)
       (ICL5.0)
       (not yet ICL5.0.1)

bash ./configure --with-compiler=icl45 --with-qt=<qtdir> --with-glut=<glut-dir>
                 --prefix=<install-dir>

cd Build/i686-pc-cygwin-icl45
make


Linux (RH 7.0, including patch gcc/RHBA-2000-132, glibc/RHBA-2000-079) 
	  (RH 7.1 out of the box)
      (SuSe 7.1, out of the box)

./configure --with-compiler=g++ --with-glut --with-qt=<qtdir>
			--prefix=<install-dir>
cd Build/i686-pc-linux-g++
make

----
General parameters : 

	--prefix=<install-dir>

		sets the install directory where OpenSG will be installed. If set
		to BUILD the Builds/<system> directory will be used. Defaults to
		/usr/local

On unix system :

	--with-tif[=<dir>]
	--with-gif[=<dir>]
	--with-jpg[=<dir>]
	--with-png[=<dir>]

		enable the named image format and optinally give its location

To make the system:

cd Builds/<system>
gmake
(build BaseLib and SystemLib)
you need to add BaseLib/lib-dbg and SystemLib/lib-dbg to your library path
as an alternative you can do gmake install and add lib/dbg to your path.

to make a test program
cd SystemTest
make testWindowGLUT
./testWindowGLUT ../../../Loader/dino.raw


To make the VRML Loader test program you need to be in SystemTest and
ln -s ../../../Experimental/VRMLLoader/std.wrl .
make testVRMLRender
./testVRMLRender ../../../Experimental/VRMLLoader/tie.wrl
Used keys: a s z x c w ESC


Documentation :
===============

##############################################################################
#### Since we just switched to configure this acutally does not work now #####
##############################################################################

And last, if you like it and want to get a deeper insight build the
documentation to get an overview over the different parts of the system. 
But be aware that the docuentation is by far not complete, it is ok to give
you an overview and browse through the structure but nothing more (Currently).

    make doc

This uses doxygen to create documentation in Doc/Code/html. We use
version 1.2.5, which is pretty new, but 1.2.0 should be ok, too. The
default configuration uses dot, so you need that, too, or you have turn
off the HAVE_DOT option.

There is a workaround for typedefed templates not showing up as classes.
It tricks doxygen into seeing classes that aren't there. So don't be
surprised if you see classes in the documentation that are not in the
code.


   
