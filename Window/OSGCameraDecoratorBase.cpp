/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class CameraDecorator!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#define OSG_COMPILECAMERADECORATORINST

#include <stdlib.h>
#include <stdio.h>

#include <OSGConfig.h>

#include "OSGCameraDecoratorBase.h"
#include "OSGCameraDecorator.h"


OSG_BEGIN_NAMESPACE

DataType FieldDataTraits<CameraDecoratorPtr>::_type("CameraDecoratorPtr", "CameraPtr", true);

#if defined(__sgi)

#pragma instantiate SField<CameraDecoratorPtr>::_fieldType
#pragma instantiate MField<CameraDecoratorPtr>::_fieldType

#else

OSG_DLLEXPORT_DEF1(SField, CameraDecoratorPtr, OSG_SYSTEMLIB_DLLTMPLMAPPING)
OSG_DLLEXPORT_DEF1(MField, CameraDecoratorPtr, OSG_SYSTEMLIB_DLLTMPLMAPPING)

#endif

OSG_END_NAMESPACE

OSG_USING_NAMESPACE

#ifdef __sgi
#pragma set woff 1174
#endif

namespace
{
    static Char8 cvsid_cpp       [] = "@(#)$Id: OSGCameraDecoratorBase.cpp,v 1.17 2001/11/09 08:17:07 vossg Exp $";
    static Char8 cvsid_hpp       [] = OSGCAMERADECORATORBASE_HEADER_CVSID;
    static Char8 cvsid_inl       [] = OSGCAMERADECORATORBASE_INLINE_CVSID;

    static Char8 cvsid_fields_hpp[] = OSGCAMERADECORATORFIELDS_HEADER_CVSID;
}

#ifdef __sgi
#pragma reset woff 1174
#endif

const OSG::BitVector  CameraDecoratorBase::CameraFieldMask = 
    (1 << CameraDecoratorBase::CameraFieldId);



// Field descriptions

/*! \var CameraPtr       CameraDecoratorBase::_sfCamera
    The Camera that is being decorated.
*/
//! CameraDecorator description

FieldDescription *CameraDecoratorBase::_desc[] = 
{
    new FieldDescription(SFCameraPtr::getClassType(), 
                     "camera", 
                     CameraFieldId, CameraFieldMask,
                     false,
                     (FieldAccessMethod) &CameraDecoratorBase::getSFCamera)
};

//! CameraDecorator type

FieldContainerType CameraDecoratorBase::_type(
    "CameraDecorator",
    "Camera",
    NULL,
    NULL, 
    CameraDecorator::initMethod,
    _desc,
    sizeof(_desc));

//OSG_FIELD_CONTAINER_DEF(CameraDecoratorBase, CameraDecoratorPtr)

/*------------------------------ get -----------------------------------*/

FieldContainerType &CameraDecoratorBase::getType(void) 
{
    return _type; 
} 

const FieldContainerType &CameraDecoratorBase::getType(void) const 
{
    return _type;
} 


UInt32 CameraDecoratorBase::getContainerSize(void) const 
{ 
    return sizeof(CameraDecoratorBase); 
}


void CameraDecoratorBase::executeSync(      FieldContainer &other,
                                    const BitVector      &whichField)
{
    this->executeSyncImpl((CameraDecoratorBase *) &other, whichField);
}

/*------------------------- constructors ----------------------------------*/

//! Constructor

#ifdef OSG_WIN32_ICL
#pragma warning (disable : 383)
#endif

CameraDecoratorBase::CameraDecoratorBase(void) :
    _sfCamera                 (), 
    Inherited() 
{
}

#ifdef OSG_WIN32_ICL
#pragma warning (default : 383)
#endif

//! Copy Constructor

CameraDecoratorBase::CameraDecoratorBase(const CameraDecoratorBase &source) :
    _sfCamera                 (source._sfCamera                 ), 
    Inherited                 (source)
{
}

/*-------------------------- destructors ----------------------------------*/

//! Destructor

CameraDecoratorBase::~CameraDecoratorBase(void)
{
}

/*------------------------------ access -----------------------------------*/

UInt32 CameraDecoratorBase::getBinSize(const BitVector &whichField)
{
    UInt32 returnValue = Inherited::getBinSize(whichField);

    if(FieldBits::NoField != (CameraFieldMask & whichField))
    {
        returnValue += _sfCamera.getBinSize();
    }


    return returnValue;
}

void CameraDecoratorBase::copyToBin(      BinaryDataHandler &pMem,
                                  const BitVector         &whichField)
{
    Inherited::copyToBin(pMem, whichField);

    if(FieldBits::NoField != (CameraFieldMask & whichField))
    {
        _sfCamera.copyToBin(pMem);
    }


}

void CameraDecoratorBase::copyFromBin(      BinaryDataHandler &pMem,
                                    const BitVector    &whichField)
{
    Inherited::copyFromBin(pMem, whichField);

    if(FieldBits::NoField != (CameraFieldMask & whichField))
    {
        _sfCamera.copyFromBin(pMem);
    }


}

void CameraDecoratorBase::executeSyncImpl(      CameraDecoratorBase *pOther,
                                        const BitVector         &whichField)
{

    Inherited::executeSyncImpl(pOther, whichField);

    if(FieldBits::NoField != (CameraFieldMask & whichField))
        _sfCamera.syncWith(pOther->_sfCamera);


}

