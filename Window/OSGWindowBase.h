/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                 Copyright (C) 2000 by the OpenSG Forum                    *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Window
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGWINDOWBASE_H_
#define _OSGWINDOWBASE_H_
#ifdef __sgi
#pragma once
#endif

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------

#include <OSGConfig.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>
#include <OSGWindowDef.h>
#include <OSGFieldContainer.h>
#include <OSGUInt16Fields.h>	// Width type
#include <OSGUInt16Fields.h>	// Height type
#include <OSGViewportFields.h>	// Port type
#include <OSGBoolFields.h>	// ResizePending type
#include <OSGUInt32Fields.h>	// GlObjectFlags type

#include <OSGWindowFields.h>

OSG_BEGIN_NAMESPACE

//---------------------------------------------------------------------------
//  Forward References
//---------------------------------------------------------------------------

class Window;

//---------------------------------------------------------------------------
//   Types
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//  Class
//---------------------------------------------------------------------------

/*! Window Base Class. */

class OSG_WINDOW_DLLMAPPING WindowBase : public FieldContainer
{
  private:

    typedef FieldContainer Inherited;

  public:

    //-----------------------------------------------------------------------
    //   constants                                                           
    //-----------------------------------------------------------------------
    
	static const osg::UInt32    WidthFieldId	= Inherited::NextFieldId;
	static const osg::BitVector WidthFieldMask	= Inherited::NextFieldMask;

	static const osg::UInt32    HeightFieldId   = WidthFieldId + 1;
	static const osg::BitVector HeightFieldMask = WidthFieldMask << 1;

	static const osg::UInt32    PortFieldId   = HeightFieldId + 1;
	static const osg::BitVector PortFieldMask = HeightFieldMask << 1;

	static const osg::UInt32    ResizePendingFieldId   = PortFieldId + 1;
	static const osg::BitVector ResizePendingFieldMask = PortFieldMask << 1;

	static const osg::UInt32    GlObjectFlagsFieldId   = ResizePendingFieldId + 1;
	static const osg::BitVector GlObjectFlagsFieldMask = ResizePendingFieldMask << 1;

	static const osg::UInt32	NextFieldId   = GlObjectFlagsFieldId + 1;
	static const osg::BitVector	NextFieldMask = GlObjectFlagsFieldMask << 1;


    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    static const char *getClassname(void) { return "WindowBase"; };

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    /*-------------- general fieldcontainer declaration --------------------*/

    virtual       OSG::FieldContainerType &getType(void); 
    virtual const OSG::FieldContainerType &getType(void) const; 
    
    static OSG::FieldContainerType &getClassType  (void); 
    static OSG::UInt32              getClassTypeId(void); 
    virtual OSG::UInt32            getSize    (void) const;

    /*--------------------------- access fields ----------------------------*/

    //! Return the fields.

    inline SFUInt16	*getSFWidth(void);
    inline SFUInt16	*getSFHeight(void);
    inline MFViewportPtr	*getMFPort(void);
    inline SFBool	*getSFResizePending(void);
    inline MFUInt32	*getMFGlObjectFlags(void);

    /*----------------------------- access ----------------------------------*/

    //!@{ Return the fields' values.

    inline       UInt16	&getWidth(void);
    inline const UInt16	&getWidth(void) const;
    inline       void	             setWidth( UInt16 value );
    inline       UInt16	&getHeight(void);
    inline const UInt16	&getHeight(void) const;
    inline       void	             setHeight( UInt16 value );
    inline       Bool	&getResizePending(void);
    inline const Bool	&getResizePending(void) const;
    inline       void	             setResizePending( Bool value );

    inline       ViewportPtr	               &getPort( UInt32 index );
    inline       MFViewportPtr &getPort(void);
    inline const MFViewportPtr &getPort(void) const;
    inline       UInt32	               &getGlObjectFlags( UInt32 index );
    inline       MFUInt32 &getGlObjectFlags(void);
    inline const MFUInt32 &getGlObjectFlags(void) const;

    //!@}

    /*-------------------------- transformation ----------------------------*/

    /*------------------------------ volume -------------------------------*/

    /*------------------------------ dump -----------------------------------*/

  protected:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //! The fields storing the data.

    /*! 
     */
    SFUInt16	_width;
    /*! 
     */
    SFUInt16	_height;
    /*! 
     */
    MFViewportPtr	_port;
    /*! 
     */
    SFBool	_resizePending;
    /*! This field will have to disappear...
     */
    MFUInt32	_glObjectFlags;

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    WindowBase(void);
    WindowBase(const WindowBase &source);
    virtual ~WindowBase(void); 
    

  private:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   friend classes                                                      
    //-----------------------------------------------------------------------

    friend class FieldContainer;

    //-----------------------------------------------------------------------
    //   friend functions                                                    
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    static char cvsid[];

    static FieldDescription   _desc[];

    static FieldContainerType _type;


    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------
    

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    // prohibit default functions (move to 'public' if you need one)

    void operator =(const Window &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


/** \brief class pointer
 */
typedef WindowBase *WindowBaseP;

OSG_END_NAMESPACE

#endif /* _OSGWINDOWBASE_H_ */
