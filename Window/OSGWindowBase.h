/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Window
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGWINDOWBASE_H_
#define _OSGWINDOWBASE_H_
#ifdef __sgi
#pragma once
#endif


#include <OSGConfig.h>
#include <OSGSystemDef.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>

#include <OSGAttachmentContainer.h> // Parent

#include <OSGUInt16Fields.h> // Width type
#include <OSGUInt16Fields.h> // Height type
#include <OSGViewportFields.h> // Port type
#include <OSGBoolFields.h> // ResizePending type
#include <OSGUInt32Fields.h> // GlObjectStatus type
#include <OSGUInt32Fields.h> // GlObjectInvalidateCounter type
#include <OSGUInt32Fields.h> // GlObjectLastRefresh type
#include <OSGUInt32Fields.h> // GlObjectLastReinitialize type

#include <OSGWindowFields.h>

OSG_BEGIN_NAMESPACE

class Window;
class BinaryDataHandler;

//! \brief Window Base Class.

class OSG_SYSTEMLIB_DLLMAPPING WindowBase : public AttachmentContainer
{
  private:

    typedef AttachmentContainer Inherited;

    /*==========================  PUBLIC  =================================*/
  public:

    enum
    {
        WidthFieldId                     = Inherited::NextFieldId,
        HeightFieldId                    = WidthFieldId                     + 1,
        PortFieldId                      = HeightFieldId                    + 1,
        ResizePendingFieldId             = PortFieldId                      + 1,
        GlObjectStatusFieldId            = ResizePendingFieldId             + 1,
        GlObjectInvalidateCounterFieldId = GlObjectStatusFieldId            + 1,
        GlObjectLastRefreshFieldId       = GlObjectInvalidateCounterFieldId + 1,
        GlObjectLastReinitializeFieldId  = GlObjectLastRefreshFieldId       + 1,
        NextFieldId                      = GlObjectLastReinitializeFieldId  + 1
    };

    static const osg::BitVector WidthFieldMask;
    static const osg::BitVector HeightFieldMask;
    static const osg::BitVector PortFieldMask;
    static const osg::BitVector ResizePendingFieldMask;
    static const osg::BitVector GlObjectStatusFieldMask;
    static const osg::BitVector GlObjectInvalidateCounterFieldMask;
    static const osg::BitVector GlObjectLastRefreshFieldMask;
    static const osg::BitVector GlObjectLastReinitializeFieldMask;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static        FieldContainerType &getClassType    (void); 
    static        UInt32              getClassTypeId  (void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Get                                    */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType  (void); 
    virtual const FieldContainerType &getType  (void) const; 

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */

          SFUInt16            *getSFWidth          (void);
          SFUInt16            *getSFHeight         (void);
          MFViewportPtr       *getMFPort           (void);
          SFBool              *getSFResizePending  (void);
          MFUInt32            *getMFGlObjectStatus (void);
          SFUInt32            *getSFGlObjectInvalidateCounter(void);
          MFUInt32            *getMFGlObjectLastRefresh(void);
          MFUInt32            *getMFGlObjectLastReinitialize(void);

          UInt16              &getWidth          (void);
    const UInt16              &getWidth          (void) const;
          UInt16              &getHeight         (void);
    const UInt16              &getHeight         (void) const;
          bool                &getResizePending  (void);
    const bool                &getResizePending  (void) const;
          UInt32              &getGlObjectInvalidateCounter(void);
    const UInt32              &getGlObjectInvalidateCounter(void) const;
          ViewportPtr         &getPort           (UInt32 index);
          MFViewportPtr       &getPort           (void);
    const MFViewportPtr       &getPort           (void) const;
          UInt32              &getGlObjectStatus (UInt32 index);
          MFUInt32            &getGlObjectStatus (void);
    const MFUInt32            &getGlObjectStatus (void) const;
          UInt32              &getGlObjectLastRefresh(UInt32 index);
          MFUInt32            &getGlObjectLastRefresh(void);
    const MFUInt32            &getGlObjectLastRefresh(void) const;
          UInt32              &getGlObjectLastReinitialize(UInt32 index);
          MFUInt32            &getGlObjectLastReinitialize(void);
    const MFUInt32            &getGlObjectLastReinitialize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

    void setWidth          ( const UInt16 &value );
    void setHeight         ( const UInt16 &value );
    void setResizePending  ( const bool &value );
    void setGlObjectInvalidateCounter( const UInt32 &value );

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void   executeSync(      FieldContainer    &other,
                               const BitVector         &whichField);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual UInt32 getBinSize (const BitVector         &whichField);
    virtual void   copyToBin  (      BinaryDataHandler &pMem,
                               const BitVector         &whichField);
    virtual void   copyFromBin(      BinaryDataHandler &pMem,
                               const BitVector         &whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/
  protected:

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFUInt16            _sfWidth;
    SFUInt16            _sfHeight;
    MFViewportPtr       _mfPort;
    SFBool              _sfResizePending;
    MFUInt32            _mfGlObjectStatus;
    SFUInt32            _sfGlObjectInvalidateCounter;
    MFUInt32            _mfGlObjectLastRefresh;
    MFUInt32            _mfGlObjectLastReinitialize;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    WindowBase(void);
    WindowBase(const WindowBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~WindowBase(void); 

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    void executeSyncImpl(      WindowBase *pOther,
                         const BitVector         &whichField);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:

    friend class FieldContainer;

    static FieldDescription   *_desc[];
    static FieldContainerType  _type;


    // prohibit default functions (move to 'public' if you need one)
    void operator =(const WindowBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


typedef WindowBase *WindowBaseP;

OSG_END_NAMESPACE

#define OSGWINDOWBASE_HEADER_CVSID "@(#)$Id: $"

#endif /* _OSGWINDOWBASE_H_ */
