/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                 Copyright (C) 2000 by the OpenSG Forum                    *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Camera
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGCAMERABASE_H_
#define _OSGCAMERABASE_H_
#ifdef __sgi
#pragma once
#endif

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------

#include <OSGConfig.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>
#include <OSGWindowDef.h>
#include <OSGFieldContainer.h>
#include <OSGNodeFields.h>	// Beacon type
#include <OSGReal32Fields.h>	// Near type
#include <OSGReal32Fields.h>	// Far type

#include <OSGCameraFields.h>

OSG_BEGIN_NAMESPACE

//---------------------------------------------------------------------------
//  Forward References
//---------------------------------------------------------------------------

class Camera;

//---------------------------------------------------------------------------
//   Types
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//  Class
//---------------------------------------------------------------------------

/*! Camera Base Class. */

class OSG_WINDOW_DLLMAPPING CameraBase : public FieldContainer
{
  private:

    typedef FieldContainer Inherited;

  public:

    //-----------------------------------------------------------------------
    //   constants                                                           
    //-----------------------------------------------------------------------
    
	static const osg::UInt32    BeaconFieldId	= Inherited::NextFieldId;
	static const osg::BitVector BeaconFieldMask	= Inherited::NextFieldMask;

	static const osg::UInt32    NearFieldId   = BeaconFieldId + 1;
	static const osg::BitVector NearFieldMask = BeaconFieldMask << 1;

	static const osg::UInt32    FarFieldId   = NearFieldId + 1;
	static const osg::BitVector FarFieldMask = NearFieldMask << 1;

	static const osg::UInt32	NextFieldId   = FarFieldId + 1;
	static const osg::BitVector	NextFieldMask = FarFieldMask << 1;


    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    static const char *getClassname(void) { return "CameraBase"; };

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    /*-------------- general fieldcontainer declaration --------------------*/

    virtual       OSG::FieldContainerType &getType(void); 
    virtual const OSG::FieldContainerType &getType(void) const; 
    
    static OSG::FieldContainerType &getClassType  (void); 
    static OSG::UInt32              getClassTypeId(void); 
    virtual OSG::UInt32            getSize    (void) const;

    /*--------------------------- access fields ----------------------------*/

    //! Return the fields.

    inline SFNodePtr	*getSFBeacon(void);
    inline SFReal32	*getSFNear(void);
    inline SFReal32	*getSFFar(void);

    /*----------------------------- access ----------------------------------*/

    //!@{ Return the fields' values.

    inline       NodePtr	&getBeacon(void);
    inline const NodePtr	&getBeacon(void) const;
    inline       void	             setBeacon( NodePtr value );
    inline       Real32	&getNear(void);
    inline const Real32	&getNear(void) const;
    inline       void	             setNear( Real32 value );
    inline       Real32	&getFar(void);
    inline const Real32	&getFar(void) const;
    inline       void	             setFar( Real32 value );


    //!@}

    /*-------------------------- transformation ----------------------------*/

    /*------------------------------ volume -------------------------------*/

    /*------------------------------ dump -----------------------------------*/

  protected:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //! The fields storing the data.

    /*! The object that define's the camera's coordinate system. The camera is positioned 	at the origin of the system and looks doen the negative z-axis (OpenGL-style).
     */
    SFNodePtr	_beacon;
    /*! The near distance of the camera.
     */
    SFReal32	_near;
    /*! The far distance of the camera.
     */
    SFReal32	_far;

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    CameraBase(void);
    CameraBase(const CameraBase &source);
    virtual ~CameraBase(void); 
    

  private:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   friend classes                                                      
    //-----------------------------------------------------------------------

    friend class FieldContainer;

    //-----------------------------------------------------------------------
    //   friend functions                                                    
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    static char cvsid[];

    static FieldDescription   _desc[];

    static FieldContainerType _type;


    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------
    

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    // prohibit default functions (move to 'public' if you need one)

    void operator =(const Camera &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


/** \brief class pointer
 */
typedef CameraBase *CameraBaseP;

OSG_END_NAMESPACE

#endif /* _OSGCAMERABASE_H_ */
