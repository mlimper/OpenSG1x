/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                     Copyright 2000,2001 by OpenSG Forum                   *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Window!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline
OSG::FieldContainerType &WindowBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline
OSG::UInt32 WindowBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 


/*------------------------------ get -----------------------------------*/

inline
SFUInt16 *WindowBase::getSFWidth(void)
{
    return &_sfWidth;
}

inline
SFUInt16 *WindowBase::getSFHeight(void)
{
    return &_sfHeight;
}

inline
MFViewportPtr *WindowBase::getMFPort(void)
{
    return &_mfPort;
}

inline
SFBool *WindowBase::getSFResizePending(void)
{
    return &_sfResizePending;
}

inline
SFUInt32 *WindowBase::getSFGlObjectEventCounter(void)
{
    return &_sfGlObjectEventCounter;
}

inline
MFUInt32 *WindowBase::getMFGlObjectLastRefresh(void)
{
    return &_mfGlObjectLastRefresh;
}

inline
MFUInt32 *WindowBase::getMFGlObjectLastReinitialize(void)
{
    return &_mfGlObjectLastReinitialize;
}


inline
UInt16 &WindowBase::getWidth(void)
{
    return _sfWidth.getValue();
}

inline
const UInt16 &WindowBase::getWidth(void) const
{
    return _sfWidth.getValue();
}

inline
void WindowBase::setWidth(const UInt16 &value)
{
    _sfWidth.setValue(value);
}

inline
UInt16 &WindowBase::getHeight(void)
{
    return _sfHeight.getValue();
}

inline
const UInt16 &WindowBase::getHeight(void) const
{
    return _sfHeight.getValue();
}

inline
void WindowBase::setHeight(const UInt16 &value)
{
    _sfHeight.setValue(value);
}

inline
bool &WindowBase::getResizePending(void)
{
    return _sfResizePending.getValue();
}

inline
const bool &WindowBase::getResizePending(void) const
{
    return _sfResizePending.getValue();
}

inline
void WindowBase::setResizePending(const bool &value)
{
    _sfResizePending.setValue(value);
}

inline
UInt32 &WindowBase::getGlObjectEventCounter(void)
{
    return _sfGlObjectEventCounter.getValue();
}

inline
const UInt32 &WindowBase::getGlObjectEventCounter(void) const
{
    return _sfGlObjectEventCounter.getValue();
}

inline
void WindowBase::setGlObjectEventCounter(const UInt32 &value)
{
    _sfGlObjectEventCounter.setValue(value);
}


inline
ViewportPtr &WindowBase::getPort(const UInt32 index)
{
    return _mfPort[index];
}

inline
MFViewportPtr &WindowBase::getPort(void)
{
    return _mfPort;
}

inline
const MFViewportPtr &WindowBase::getPort(void) const
{
    return _mfPort;
}

inline
UInt32 &WindowBase::getGlObjectLastRefresh(const UInt32 index)
{
    return _mfGlObjectLastRefresh[index];
}

inline
MFUInt32 &WindowBase::getGlObjectLastRefresh(void)
{
    return _mfGlObjectLastRefresh;
}

inline
const MFUInt32 &WindowBase::getGlObjectLastRefresh(void) const
{
    return _mfGlObjectLastRefresh;
}

inline
UInt32 &WindowBase::getGlObjectLastReinitialize(const UInt32 index)
{
    return _mfGlObjectLastReinitialize[index];
}

inline
MFUInt32 &WindowBase::getGlObjectLastReinitialize(void)
{
    return _mfGlObjectLastReinitialize;
}

inline
const MFUInt32 &WindowBase::getGlObjectLastReinitialize(void) const
{
    return _mfGlObjectLastReinitialize;
}

OSG_END_NAMESPACE

#define OSGWINDOWBASE_INLINE_CVSID "@(#)$Id: OSGWindowBase.inl,v 1.17 2002/06/20 13:02:17 vossg Exp $"

