/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Foreground!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------


#define OSG_COMPILESYSTEMLIB
#define OSG_COMPILEFOREGROUNDINST

#include <stdlib.h>
#include <stdio.h>

#include <OSGConfig.h>

#include "OSGForegroundBase.h"
#include "OSGForeground.h"


OSG_USING_NAMESPACE

/***************************************************************************\
 *                               Types                                     *
\***************************************************************************/

OSG_BEGIN_NAMESPACE

DataType FieldDataTraits<ForegroundPtr>::_type("ForegroundPtr", true);

#if defined(__sgi)

#pragma instantiate SField<ForegroundPtr>::_fieldType
#pragma instantiate MField<ForegroundPtr>::_fieldType

#else

OSG_DLLEXPORT_DEF1(SField, ForegroundPtr, OSG_SYSTEMLIB_DLLTMPLMAPPING)
OSG_DLLEXPORT_DEF1(MField, ForegroundPtr, OSG_SYSTEMLIB_DLLTMPLMAPPING)

#endif

OSG_END_NAMESPACE

/***************************************************************************\
 *                           Class variables                               *
\***************************************************************************/


char ForegroundBase::cvsid[] = "@(#)$Id: $";

/** \brief Foreground type
 */

FieldContainerType ForegroundBase::_type(
    "Foreground",
    "AttachmentContainer",
    NULL,
    NULL, 
    Foreground::initMethod,
    NULL,
    0);


/***************************************************************************\
 *                           Class methods                                 *
\***************************************************************************/

/*-------------------------------------------------------------------------*\
 -  public                                                                 -
\*-------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------*\
 -  protected                                                              -
\*-------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------*\
 -  private                                                                -
\*-------------------------------------------------------------------------*/

/***************************************************************************\
 *                           Instance methods                              *
\***************************************************************************/

/*-------------------------------------------------------------------------*\
 -  public                                                                 -
\*-------------------------------------------------------------------------*/

//OSG_FIELD_CONTAINER_DEF(ForegroundBase, ForegroundPtr)

FieldContainerType &ForegroundBase::getType(void) 
{
    return _type; 
} 

const FieldContainerType &ForegroundBase::getType(void) const 
{
    return _type;
} 

UInt32 ForegroundBase::getContainerSize(void) const 
{ 
    return sizeof(ForegroundBase); 
}


void ForegroundBase::executeSync(      FieldContainer &other,
                                    const BitVector      &whichField)
{
    this->executeSyncImpl((ForegroundBase *) &other, whichField);
}

/*------------- constructors & destructors --------------------------------*/

/** \brief Constructor
 */

ForegroundBase::ForegroundBase(void) :
	Inherited() 
{
}

/** \brief Copy Constructor
 */

ForegroundBase::ForegroundBase(const ForegroundBase &source) :
	Inherited        (source)
{
}

/** \brief Destructor
 */

ForegroundBase::~ForegroundBase(void)
{
}

/*------------------------------ access -----------------------------------*/

UInt32 ForegroundBase::getBinSize(const BitVector &whichField)
{
    UInt32 returnValue = Inherited::getBinSize(whichField);


    return returnValue;
}

MemoryHandle ForegroundBase::copyToBin(      MemoryHandle  pMem,
                                          const BitVector    &whichField)
{
    pMem = Inherited::copyToBin(pMem, whichField);


    return pMem;
}

MemoryHandle ForegroundBase::copyFromBin(      MemoryHandle  pMem,
                                            const BitVector    &whichField)
{
    pMem = Inherited::copyFromBin(pMem, whichField);


    return pMem;
}

/*------------------------------- dump ----------------------------------*/

/*-------------------------------------------------------------------------*\
 -  protected                                                              -
\*-------------------------------------------------------------------------*/


void ForegroundBase::executeSyncImpl(      ForegroundBase *pOther,
                                        const BitVector         &whichField)
{

    Inherited::executeSyncImpl(pOther, whichField);


}

/*-------------------------------------------------------------------------*\
 -  private                                                                -
\*-------------------------------------------------------------------------*/

