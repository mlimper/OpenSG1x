/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                     Copyright 2000,2001 by OpenSG Forum                   *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Particles!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE


//! access the type of the class
inline OSG::FieldContainerType &ParticlesBase::getClassType(void)
{
    return _type; 
} 

//! access the numerical type of the class
inline OSG::UInt32 ParticlesBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

//! create a new instance of the class
inline ParticlesPtr ParticlesBase::create(void) 
{
    ParticlesPtr fc; 

    if(getClassType().getPrototype() != osg::NullFC) 
    {
        fc = ParticlesPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

//! create an empty new instance of the class, do not copy the prototype
inline ParticlesPtr ParticlesBase::createEmpty(void) 
{ 
    ParticlesPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------------------------ get -----------------------------------*/

OSG_SYSTEMLIB_DLLMAPPING
SFGeoPositionsPtr *ParticlesBase::getSFPositions(void)
{
    return &_sfPositions;
}

OSG_SYSTEMLIB_DLLMAPPING
MFVec3f *ParticlesBase::getMFSizes(void)
{
    return &_mfSizes;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoPositionsPtr *ParticlesBase::getSFSecPositions(void)
{
    return &_sfSecPositions;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoColorsPtr *ParticlesBase::getSFColors(void)
{
    return &_sfColors;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoNormalsPtr *ParticlesBase::getSFNormals(void)
{
    return &_sfNormals;
}

OSG_SYSTEMLIB_DLLMAPPING
SFMaterialPtr *ParticlesBase::getSFMaterial(void)
{
    return &_sfMaterial;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *ParticlesBase::getSFPump(void)
{
    return &_sfPump;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *ParticlesBase::getSFMode(void)
{
    return &_sfMode;
}

OSG_SYSTEMLIB_DLLMAPPING
SFUInt32 *ParticlesBase::getSFDrawOrder(void)
{
    return &_sfDrawOrder;
}

OSG_SYSTEMLIB_DLLMAPPING
SFBool *ParticlesBase::getSFDynamic(void)
{
    return &_sfDynamic;
}


OSG_SYSTEMLIB_DLLMAPPING
GeoPositionsPtr &ParticlesBase::getPositions(void)
{
    return _sfPositions.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoPositionsPtr &ParticlesBase::getPositions(void) const
{
    return _sfPositions.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setPositions(const GeoPositionsPtr &value)
{
    _sfPositions.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoPositionsPtr &ParticlesBase::getSecPositions(void)
{
    return _sfSecPositions.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoPositionsPtr &ParticlesBase::getSecPositions(void) const
{
    return _sfSecPositions.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setSecPositions(const GeoPositionsPtr &value)
{
    _sfSecPositions.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoColorsPtr &ParticlesBase::getColors(void)
{
    return _sfColors.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoColorsPtr &ParticlesBase::getColors(void) const
{
    return _sfColors.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setColors(const GeoColorsPtr &value)
{
    _sfColors.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoNormalsPtr &ParticlesBase::getNormals(void)
{
    return _sfNormals.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoNormalsPtr &ParticlesBase::getNormals(void) const
{
    return _sfNormals.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setNormals(const GeoNormalsPtr &value)
{
    _sfNormals.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
MaterialPtr &ParticlesBase::getMaterial(void)
{
    return _sfMaterial.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const MaterialPtr &ParticlesBase::getMaterial(void) const
{
    return _sfMaterial.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setMaterial(const MaterialPtr &value)
{
    _sfMaterial.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &ParticlesBase::getPump(void)
{
    return _sfPump.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &ParticlesBase::getPump(void) const
{
    return _sfPump.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setPump(const UInt32 &value)
{
    _sfPump.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &ParticlesBase::getMode(void)
{
    return _sfMode.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &ParticlesBase::getMode(void) const
{
    return _sfMode.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setMode(const UInt32 &value)
{
    _sfMode.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
UInt32 &ParticlesBase::getDrawOrder(void)
{
    return _sfDrawOrder.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const UInt32 &ParticlesBase::getDrawOrder(void) const
{
    return _sfDrawOrder.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setDrawOrder(const UInt32 &value)
{
    _sfDrawOrder.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Bool &ParticlesBase::getDynamic(void)
{
    return _sfDynamic.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Bool &ParticlesBase::getDynamic(void) const
{
    return _sfDynamic.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void ParticlesBase::setDynamic(const Bool &value)
{
    _sfDynamic.setValue(value);
}


OSG_SYSTEMLIB_DLLMAPPING
Vec3f &ParticlesBase::getSizes(UInt32 index)
{
    return _mfSizes.getValue( index );
}

MFVec3f &ParticlesBase::getSizes(void)
{
    return _mfSizes;
}

const MFVec3f &ParticlesBase::getSizes(void) const
{
    return _mfSizes;
}


OSG_END_NAMESPACE

#define OSGPARTICLESBASE_INLINE_CVSID "@(#)$Id: OSGParticlesBase.inl,v 1.2 2002/01/09 10:41:59 dirk Exp $"

