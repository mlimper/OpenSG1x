/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class VRMLTransform
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGVRMLTRANSFORMBASE_H_
#define _OSGVRMLTRANSFORMBASE_H_
#ifdef __sgi
#pragma once
#endif

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------

#include <OSGConfig.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>
#include <OSGSystemDef.h>
#include <OSGTransform.h>
#include <OSGVec3fFields.h>	// Center type
#include <OSGQuaternionFields.h>	// Rotation type
#include <OSGVec3fFields.h>	// Scale type
#include <OSGQuaternionFields.h>	// ScaleOrientation type
#include <OSGVec3fFields.h>	// Translation type

#include <OSGVRMLTransformFields.h>

OSG_BEGIN_NAMESPACE

//---------------------------------------------------------------------------
//  Forward References
//---------------------------------------------------------------------------

class VRMLTransform;

//---------------------------------------------------------------------------
//   Types
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//  Class
//---------------------------------------------------------------------------

/*! VRMLTransform Base Class. */

class OSG_SYSTEMLIB_DLLMAPPING VRMLTransformBase : public Transform
{
  private:

    typedef Transform Inherited;

  public:

    //-----------------------------------------------------------------------
    //   constants                                                           
    //-----------------------------------------------------------------------
    
    enum
    {
        CenterFieldId = Inherited::NextFieldId,
        RotationFieldId = CenterFieldId + 1,
        ScaleFieldId = RotationFieldId + 1,
        ScaleOrientationFieldId = ScaleFieldId + 1,
        TranslationFieldId = ScaleOrientationFieldId + 1
    };

    static const osg::BitVector CenterFieldMask;
    static const osg::BitVector RotationFieldMask;
    static const osg::BitVector ScaleFieldMask;
    static const osg::BitVector ScaleOrientationFieldMask;
    static const osg::BitVector TranslationFieldMask;

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    static const char *getClassname(void) { return "VRMLTransformBase"; };

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    /*-------------- general fieldcontainer declaration --------------------*/

    virtual       OSG::FieldContainerType &getType(void); 
    virtual const OSG::FieldContainerType &getType(void) const; 
    
    static OSG::FieldContainerType &getClassType  (void); 
    static OSG::UInt32              getClassTypeId(void); 
    static VRMLTransformPtr         create        (void); 
    static VRMLTransformPtr         createEmpty   (void); 

    virtual OSG::FieldContainerPtr shallowCopy(void) const; 
    virtual OSG::UInt32            getSize    (void) const;

    virtual void                   executeSync(      FieldContainer &other,
                                               const BitVector      &whichField);


    virtual UInt32       getBinSize (const BitVector    &whichField);
    virtual MemoryHandle copyToBin  (      MemoryHandle  pMem,
                                     const BitVector    &whichField);
    virtual MemoryHandle copyFromBin(      MemoryHandle  pMem,
                                     const BitVector    &whichField);

    /*--------------------------- access fields ----------------------------*/

    //! Return the fields.

    inline SFVec3f	*getSFCenter(void);
    inline SFQuaternion	*getSFRotation(void);
    inline SFVec3f	*getSFScale(void);
    inline SFQuaternion	*getSFScaleOrientation(void);
    inline SFVec3f	*getSFTranslation(void);

    /*----------------------------- access ----------------------------------*/

    //!@{ Return the fields' values.

    inline       Vec3f	&getCenter(void);
    inline const Vec3f	&getCenter(void) const;
    inline       void	             setCenter( Vec3f value );
    inline       Quaternion	&getRotation(void);
    inline const Quaternion	&getRotation(void) const;
    inline       void	             setRotation( Quaternion value );
    inline       Vec3f	&getScale(void);
    inline const Vec3f	&getScale(void) const;
    inline       void	             setScale( Vec3f value );
    inline       Quaternion	&getScaleOrientation(void);
    inline const Quaternion	&getScaleOrientation(void) const;
    inline       void	             setScaleOrientation( Quaternion value );
    inline       Vec3f	&getTranslation(void);
    inline const Vec3f	&getTranslation(void) const;
    inline       void	             setTranslation( Vec3f value );


    //!@}

    /*-------------------------- transformation ----------------------------*/

    /*------------------------------ volume -------------------------------*/

    /*------------------------------ dump -----------------------------------*/

  protected:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //! The fields storing the data.

    /*! 
     */
    SFVec3f	_sfCenter;
    /*! 
     */
    SFQuaternion	_sfRotation;
    /*! 
     */
    SFVec3f	_sfScale;
    /*! 
     */
    SFQuaternion	_sfScaleOrientation;
    /*! 
     */
    SFVec3f	_sfTranslation;

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    VRMLTransformBase(void);
    VRMLTransformBase(const VRMLTransformBase &source);
    virtual ~VRMLTransformBase(void); 
    

    void executeSyncImpl(      VRMLTransformBase *pOther,
                         const BitVector         &whichField);

  private:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   friend classes                                                      
    //-----------------------------------------------------------------------

    friend class FieldContainer;

    //-----------------------------------------------------------------------
    //   friend functions                                                    
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    static char cvsid[];

    static FieldDescription   _desc[];

    static FieldContainerType _type;


    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------
    

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    // prohibit default functions (move to 'public' if you need one)

    void operator =(const VRMLTransform &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


/** \brief class pointer
 */
typedef VRMLTransformBase *VRMLTransformBaseP;

OSG_END_NAMESPACE

#endif /* _OSGVRMLTRANSFORMBASE_H_ */
