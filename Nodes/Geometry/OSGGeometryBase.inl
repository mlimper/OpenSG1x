/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *                     Copyright 2000,2001 by OpenSG Forum                   *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class Geometry!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------


#include <stdlib.h>
#include <stdio.h>

#include <OSGConfig.h>

OSG_BEGIN_NAMESPACE

/***************************************************************************\
 *                               Types                                     *
\***************************************************************************/

/***************************************************************************\
 *                           Class variables                               *
\***************************************************************************/

/***************************************************************************\
 *                           Class methods                                 *
\***************************************************************************/

/*-------------------------------------------------------------------------*\
 -  public                                                                 -
\*-------------------------------------------------------------------------*/

/*-------------------------------------------------------------------------*\
 -  protected                                                              -
\*-------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------*\
 -  private                                                                -
\*-------------------------------------------------------------------------*/

/***************************************************************************\
 *                           Instance methods                              *
\***************************************************************************/

/*-------------------------------------------------------------------------*\
 -  public                                                                 -
\*-------------------------------------------------------------------------*/

inline OSG::FieldContainerType &GeometryBase::getClassType(void)
{
    return _type; 
} 

inline OSG::UInt32 GeometryBase::getClassTypeId(void) 
{
    return _type.getId(); 
} 

inline GeometryPtr GeometryBase::create(void) 
{
    GeometryPtr fc; 

    if(getClassType(). getPrototype() != osg::NullFC) 
    {
        fc = GeometryPtr::dcast(
            getClassType().getPrototype()-> shallowCopy()); 
    }
    
    return fc; 
}

inline GeometryPtr GeometryBase::createEmpty(void) 
{ 
    GeometryPtr returnValue; 
    
    newPtr(returnValue); 

    return returnValue; 
}


/*------------- constructors & destructors --------------------------------*/

/*--------------------------- type information-----------------------------*/

/*------------------------------ access -----------------------------------*/

OSG_SYSTEMLIB_DLLMAPPING
SFGeoPTypePtr *GeometryBase::getSFTypes(void)
{
	return &_sfTypes;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoPLengthPtr *GeometryBase::getSFLengths(void)
{
	return &_sfLengths;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoPositionPtr *GeometryBase::getSFPositions(void)
{
	return &_sfPositions;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoNormalPtr *GeometryBase::getSFNormals(void)
{
	return &_sfNormals;
}

OSG_SYSTEMLIB_DLLMAPPING
SFBool *GeometryBase::getSFNormalPerVertex(void)
{
	return &_sfNormalPerVertex;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoColorPtr *GeometryBase::getSFColors(void)
{
	return &_sfColors;
}

OSG_SYSTEMLIB_DLLMAPPING
SFBool *GeometryBase::getSFColorPerVertex(void)
{
	return &_sfColorPerVertex;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoTexCoordsPtr *GeometryBase::getSFTexCoords(void)
{
	return &_sfTexCoords;
}

OSG_SYSTEMLIB_DLLMAPPING
SFGeoIndexPtr *GeometryBase::getSFIndex(void)
{
	return &_sfIndex;
}

OSG_SYSTEMLIB_DLLMAPPING
SFMaterialPtr *GeometryBase::getSFMaterial(void)
{
	return &_sfMaterial;
}


OSG_SYSTEMLIB_DLLMAPPING
GeoPTypePtr &GeometryBase::getTypes(void)
{
	return _sfTypes.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoPTypePtr &GeometryBase::getTypes(void) const
{
	return _sfTypes.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setTypes( GeoPTypePtr value )
{
	_sfTypes.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoPLengthPtr &GeometryBase::getLengths(void)
{
	return _sfLengths.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoPLengthPtr &GeometryBase::getLengths(void) const
{
	return _sfLengths.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setLengths( GeoPLengthPtr value )
{
	_sfLengths.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoPositionPtr &GeometryBase::getPositions(void)
{
	return _sfPositions.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoPositionPtr &GeometryBase::getPositions(void) const
{
	return _sfPositions.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setPositions( GeoPositionPtr value )
{
	_sfPositions.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoNormalPtr &GeometryBase::getNormals(void)
{
	return _sfNormals.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoNormalPtr &GeometryBase::getNormals(void) const
{
	return _sfNormals.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setNormals( GeoNormalPtr value )
{
	_sfNormals.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Bool &GeometryBase::getNormalPerVertex(void)
{
	return _sfNormalPerVertex.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Bool &GeometryBase::getNormalPerVertex(void) const
{
	return _sfNormalPerVertex.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setNormalPerVertex( Bool value )
{
	_sfNormalPerVertex.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoColorPtr &GeometryBase::getColors(void)
{
	return _sfColors.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoColorPtr &GeometryBase::getColors(void) const
{
	return _sfColors.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setColors( GeoColorPtr value )
{
	_sfColors.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
Bool &GeometryBase::getColorPerVertex(void)
{
	return _sfColorPerVertex.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const Bool &GeometryBase::getColorPerVertex(void) const
{
	return _sfColorPerVertex.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setColorPerVertex( Bool value )
{
	_sfColorPerVertex.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoTexCoordsPtr &GeometryBase::getTexCoords(void)
{
	return _sfTexCoords.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoTexCoordsPtr &GeometryBase::getTexCoords(void) const
{
	return _sfTexCoords.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setTexCoords( GeoTexCoordsPtr value )
{
	_sfTexCoords.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
GeoIndexPtr &GeometryBase::getIndex(void)
{
	return _sfIndex.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const GeoIndexPtr &GeometryBase::getIndex(void) const
{
	return _sfIndex.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setIndex( GeoIndexPtr value )
{
	_sfIndex.setValue(value);
}

OSG_SYSTEMLIB_DLLMAPPING
MaterialPtr &GeometryBase::getMaterial(void)
{
	return _sfMaterial.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
const MaterialPtr &GeometryBase::getMaterial(void) const
{
	return _sfMaterial.getValue();
}

OSG_SYSTEMLIB_DLLMAPPING
void GeometryBase::setMaterial( MaterialPtr value )
{
	_sfMaterial.setValue(value);
}



/*------------------------------ access -----------------------------------*/

/*------------------------------- size ----------------------------------*/

/*------------------------------- dump ----------------------------------*/

/*-------------------------------------------------------------------------*\
 -  protected                                                              -
\*-------------------------------------------------------------------------*/


/*-------------------------------------------------------------------------*\
 -  private                                                                -
\*-------------------------------------------------------------------------*/


OSG_END_NAMESPACE

