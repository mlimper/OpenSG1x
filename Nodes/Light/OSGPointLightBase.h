/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class PointLight
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGPOINTLIGHTBASE_H_
#define _OSGPOINTLIGHTBASE_H_
#ifdef __sgi
#pragma once
#endif

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------

#include <OSGConfig.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>
#include <OSGSystemDef.h>
#include <OSGLightBase.h>
#include <OSGPnt3fFields.h>	// Position type
#include <OSGReal32Fields.h>	// ConstantAttenuation type
#include <OSGReal32Fields.h>	// LinearAttenuation type
#include <OSGReal32Fields.h>	// QuadraticAttenuation type

#include <OSGPointLightFields.h>

OSG_BEGIN_NAMESPACE

//---------------------------------------------------------------------------
//  Forward References
//---------------------------------------------------------------------------

class PointLight;

//---------------------------------------------------------------------------
//   Types
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//  Class
//---------------------------------------------------------------------------

/*! PointLight Base Class. */

class OSG_SYSTEMLIB_DLLMAPPING PointLightBase : public LightBase
{
  private:

    typedef LightBase Inherited;

  public:

    //-----------------------------------------------------------------------
    //   constants                                                           
    //-----------------------------------------------------------------------
    
    enum
    {
        PositionFieldId = Inherited::NextFieldId,
        ConstantAttenuationFieldId = PositionFieldId + 1,
        LinearAttenuationFieldId = ConstantAttenuationFieldId + 1,
        QuadraticAttenuationFieldId = LinearAttenuationFieldId + 1,
        NextFieldId = QuadraticAttenuationFieldId + 1

    };

    static const osg::BitVector PositionFieldMask;
    static const osg::BitVector ConstantAttenuationFieldMask;
    static const osg::BitVector LinearAttenuationFieldMask;
    static const osg::BitVector QuadraticAttenuationFieldMask;

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    static const char *getClassname(void) { return "PointLightBase"; };

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    /*-------------- general fieldcontainer declaration --------------------*/

    virtual       OSG::FieldContainerType &getType(void); 
    virtual const OSG::FieldContainerType &getType(void) const; 
    
    static OSG::FieldContainerType &getClassType  (void); 
    static OSG::UInt32              getClassTypeId(void); 
    static PointLightPtr         create        (void); 
    static PointLightPtr         createEmpty   (void); 

    virtual OSG::FieldContainerPtr shallowCopy(void) const; 
    virtual OSG::UInt32            getSize    (void) const;

    virtual void                   executeSync(      FieldContainer &other,
                                               const BitVector      &whichField);


    virtual UInt32       getBinSize (const BitVector    &whichField);
    virtual MemoryHandle copyToBin  (      MemoryHandle  pMem,
                                     const BitVector    &whichField);
    virtual MemoryHandle copyFromBin(      MemoryHandle  pMem,
                                     const BitVector    &whichField);

    /*--------------------------- access fields ----------------------------*/

    //! Return the fields.

    inline SFPnt3f	*getSFPosition(void);
    inline SFReal32	*getSFConstantAttenuation(void);
    inline SFReal32	*getSFLinearAttenuation(void);
    inline SFReal32	*getSFQuadraticAttenuation(void);

    /*----------------------------- access ----------------------------------*/

    //!@{ Return the fields' values.

    inline       Pnt3f	&getPosition(void);
    inline const Pnt3f	&getPosition(void) const;
    inline       void	             setPosition( Pnt3f value );
    inline       Real32	&getConstantAttenuation(void);
    inline const Real32	&getConstantAttenuation(void) const;
    inline       void	             setConstantAttenuation( Real32 value );
    inline       Real32	&getLinearAttenuation(void);
    inline const Real32	&getLinearAttenuation(void) const;
    inline       void	             setLinearAttenuation( Real32 value );
    inline       Real32	&getQuadraticAttenuation(void);
    inline const Real32	&getQuadraticAttenuation(void) const;
    inline       void	             setQuadraticAttenuation( Real32 value );


    //!@}

    /*-------------------------- transformation ----------------------------*/

    /*------------------------------ volume -------------------------------*/

    /*------------------------------ dump -----------------------------------*/

  protected:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //! The fields storing the data.

    /*! 
     */
    SFPnt3f	_sfPosition;
    /*! 
     */
    SFReal32	_sfConstantAttenuation;
    /*! 
     */
    SFReal32	_sfLinearAttenuation;
    /*! 
     */
    SFReal32	_sfQuadraticAttenuation;

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    PointLightBase(void);
    PointLightBase(const PointLightBase &source);
    virtual ~PointLightBase(void); 
    

    void executeSyncImpl(      PointLightBase *pOther,
                         const BitVector         &whichField);

  private:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   friend classes                                                      
    //-----------------------------------------------------------------------

    friend class FieldContainer;

    //-----------------------------------------------------------------------
    //   friend functions                                                    
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    static char cvsid[];

    static FieldDescription   *_desc[];

    static FieldContainerType  _type;


    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------
    

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    // prohibit default functions (move to 'public' if you need one)

    void operator =(const PointLight &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


/** \brief class pointer
 */
typedef PointLightBase *PointLightBaseP;

OSG_END_NAMESPACE

#endif /* _OSGPOINTLIGHTBASE_H_ */
