/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *             Copyright (C) 2000,2001 by the OpenSG Forum                   *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 *   contact: dirk@opensg.org, gerrit.voss@vossg.org, jbehr@zgdv.de          *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class LightBase
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGLIGHTBASEBASE_H_
#define _OSGLIGHTBASEBASE_H_
#ifdef __sgi
#pragma once
#endif

//---------------------------------------------------------------------------
//  Includes
//---------------------------------------------------------------------------

#include <OSGConfig.h>

#include <OSGBaseTypes.h>
#include <OSGFieldDescription.h>
#include <OSGFieldContainer.h>
#include <OSGSystemDef.h>
#include <OSGNodeCore.h>
#include <OSGColor4fFields.h>	// Ambient type
#include <OSGColor4fFields.h>	// Diffuse type
#include <OSGColor4fFields.h>	// Specular type
#include <OSGNodeFields.h>	// Beacon type
#include <OSGBoolFields.h>	// On type

#include <OSGLightBaseFields.h>

OSG_BEGIN_NAMESPACE

//---------------------------------------------------------------------------
//  Forward References
//---------------------------------------------------------------------------

class LightBase;

//---------------------------------------------------------------------------
//   Types
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------
//  Class
//---------------------------------------------------------------------------

/*! LightBase Base Class. */

class OSG_SYSTEMLIB_DLLMAPPING LightBaseBase : public NodeCore
{
  private:

    typedef NodeCore Inherited;

  public:

    //-----------------------------------------------------------------------
    //   constants                                                           
    //-----------------------------------------------------------------------
    
    enum
    {
        AmbientFieldId = Inherited::NextFieldId,
        DiffuseFieldId = AmbientFieldId + 1,
        SpecularFieldId = DiffuseFieldId + 1,
        BeaconFieldId = SpecularFieldId + 1,
        OnFieldId = BeaconFieldId + 1,
        NextFieldId = OnFieldId + 1

    };

    static const osg::BitVector AmbientFieldMask;
    static const osg::BitVector DiffuseFieldMask;
    static const osg::BitVector SpecularFieldMask;
    static const osg::BitVector BeaconFieldMask;
    static const osg::BitVector OnFieldMask;

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    static const char *getClassname(void) { return "LightBaseBase"; };

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    /*-------------- general fieldcontainer declaration --------------------*/

    virtual       OSG::FieldContainerType &getType  (void); 
    virtual const OSG::FieldContainerType &getType  (void) const; 
    
    static OSG::FieldContainerType &getClassType    (void); 
    static OSG::UInt32              getClassTypeId  (void); 
    virtual OSG::UInt32             getContainerSize(void) const;

    virtual void                    executeSync(      FieldContainer &other,
                                                const BitVector      &whichField);


    virtual UInt32       getBinSize (const BitVector    &whichField);
    virtual MemoryHandle copyToBin  (      MemoryHandle  pMem,
                                     const BitVector    &whichField);
    virtual MemoryHandle copyFromBin(      MemoryHandle  pMem,
                                     const BitVector    &whichField);

    /*--------------------------- access fields ----------------------------*/

    //! Return the fields.

    inline SFColor4f	*getSFAmbient(void);
    inline SFColor4f	*getSFDiffuse(void);
    inline SFColor4f	*getSFSpecular(void);
    inline SFNodePtr	*getSFBeacon(void);
    inline SFBool	*getSFOn(void);

    /*----------------------------- access ----------------------------------*/

    //!@{ Return the fields' values.

    inline       Color4f	&getAmbient(void);
    inline const Color4f	&getAmbient(void) const;
    inline       void	         setAmbient( const Color4f &value );
    inline       Color4f	&getDiffuse(void);
    inline const Color4f	&getDiffuse(void) const;
    inline       void	         setDiffuse( const Color4f &value );
    inline       Color4f	&getSpecular(void);
    inline const Color4f	&getSpecular(void) const;
    inline       void	         setSpecular( const Color4f &value );
    inline       NodePtr	&getBeacon(void);
    inline const NodePtr	&getBeacon(void) const;
    inline       void	         setBeacon( const NodePtr &value );
    inline       Bool	&getOn(void);
    inline const Bool	&getOn(void) const;
    inline       void	         setOn( const Bool &value );


    //!@}

    /*-------------------------- transformation ----------------------------*/

    /*------------------------------ volume -------------------------------*/

    /*------------------------------ dump -----------------------------------*/

  protected:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //! The fields storing the data.

    /*! 
     */
    SFColor4f	_sfAmbient;
    /*! 
     */
    SFColor4f	_sfDiffuse;
    /*! 
     */
    SFColor4f	_sfSpecular;
    /*! 
     */
    SFNodePtr	_sfBeacon;
    /*! 
     */
    SFBool	_sfOn;

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    LightBaseBase(void);
    LightBaseBase(const LightBaseBase &source);
    virtual ~LightBaseBase(void); 
    

    void executeSyncImpl(      LightBaseBase *pOther,
                         const BitVector         &whichField);

  private:

    //-----------------------------------------------------------------------
    //   enums                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   types                                                               
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   friend classes                                                      
    //-----------------------------------------------------------------------

    friend class FieldContainer;

    //-----------------------------------------------------------------------
    //   friend functions                                                    
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   class variables                                                     
    //-----------------------------------------------------------------------

    static char cvsid[];

    static FieldDescription   *_desc[];

    static FieldContainerType  _type;


    //-----------------------------------------------------------------------
    //   class functions                                                     
    //-----------------------------------------------------------------------
    

    //-----------------------------------------------------------------------
    //   instance variables                                                  
    //-----------------------------------------------------------------------

    //-----------------------------------------------------------------------
    //   instance functions                                                  
    //-----------------------------------------------------------------------

    // prohibit default functions (move to 'public' if you need one)

    void operator =(const LightBase &source);
};

//---------------------------------------------------------------------------
//   Exported Types
//---------------------------------------------------------------------------


/** \brief class pointer
 */
typedef LightBaseBase *LightBaseBaseP;

OSG_END_NAMESPACE

#endif /* _OSGLIGHTBASEBASE_H_ */
